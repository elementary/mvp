{
    "Getting Started": "Primeiros Passos",
    "Welcome to the elementary Developer Guide! This book was created to teach you all about creating and distributing apps for elementary OS. The introduction will make sure that you have all the tools for the job and a solid understanding of what this book is about. Some of you may feel confident enough to jump straight into coding. If that's the case, you might want to skip ahead and start writing your first app.": "Bem-vindo ao Guia do Desenvolvedor elementary! Este livro foi criado para lhe ensinar tudo sobre a criação e distribuição de aplicativos para o elementary OS. A introdução irá certificar-se de que você tem todas as ferramentas para o trabalho e uma sólida compreensão sobre o que é este livro. Alguns de vocês podem se sentir confiante o suficiente para avançar diretamente para o código. Se for esse o caso, você pode avançar e começar a escrever o seu primeiro aplicativo.",
    "However, we strongly recommend to at least skim through this preparation step. Having the right setup is going to help you reach your goals faster, and having a solid foundation is going to help you throughout the rest of this book.": "No entanto, recomendamos fortemente a pelo menos folhear esta etapa de preparação. Tendo a configuração certa vai ajudar você a atingir seus objetivos mais rapidamente, e ter uma base sólida que vai ajudá-lo no decorrer deste livro.",
    "What We Will And Won't Cover": "O Que Iremos Cobrir e o Que Não",
    "We're going to assume that you have absolutely no experience in writing apps for elementary. But we will assume some basic programming knowledge, and hopefully a little experience in Vala or at least similarly syntaxed languages. If you're not familiar with Vala, we highly encourage you to brush up on it before coming here.": "Vamos supor que você não tenha absolutamente nenhuma experiência em escrever aplicativos para o elementary. Mas vamos assumir que tenha conhecimentos básicos de programação e esperamos um pouco de experiência em Vala ou em uma linguagem de programação semelhante. Se você não estiver familiarizado com Vala, nós encorajamos você a aprender um pouco sobre ela antes de vir aqui.",
    "We’re also not covering design too much in this guide; that’s what the <a href=\"/docs/human-interface-guidelines\">Human Interface Guidelines</a> (HIG) are for, and you’re highly encouraged to take a look there before beginning your app. We're going to assume you have a basic knowledge of (or at least a quick link to) the HIG and focus on coding. However, elementary is all about great design and stellar consistency. It’s important you grasp these concepts before moving on.": "Nós também não estamos cobrindo muito a parte visual neste guia; para isso existe o <a href=\"/docs/human-interface-guidelines\">Guia de Interface Humana </a> (GIH) e incentivamos você a dar uma olhada lá antes de iniciar o seu app. Vamos assumir que você tem um conhecimento básico (ou, pelo menos uma noção básica) de GIH e concentração para programar. No entanto, elementary é tudo sobre ótima aparência e consistência visual. É importante você compreender esses conceitos antes de avançar.",
    "In this book, we're going to talk about building apps using GTK+, Granite, and other tech available in elementary, setting up a build system, hosting your code for collaborative development, working with translations, a few other bits and pieces, and finally packaging and distributing your new app.": "Neste livro, vamos falar sobre a criação de aplicativos usando GTK+, Granite, e outras tecnologias disponíveis no elementary, a configuração do ambiente de desenvolvimento, a hospedagem do seu código para o desenvolvimento colaborativo, como trabalhar com traduções, alguns outros aspectos, e finalmente, como empacotar e distribuir o seu novo app.",
    "The Basic Setup": "Instalação Básica",
    "Before we even think about writing code, you'll need a certain basic setup. This chapter will walk you through the process of getting set up. We will cover the following topics:": "Antes mesmo de pensar em escrever código, você vai precisar de um ambiente de desenvolvimento básico. Este capítulo irá orientá-lo de como configurá-lo. Vamos cobrir os seguintes tópicos",
    "Creating an account in launchpad.net and importing an SSH key in Launchpad": "Criando uma conta no launchpad.net e importando uma chave SSH no Launchpad",
    "Setting up the Bazaar revision control system": "Configurando o Bazar de controle de revisão do sistema",
    "Getting and using the elementary developer &quot;SDK&quot;": "Adquirindo e usando o \"SDK\" de desenvolvimento do elementary",
    "We’re going to assume that you’re working from a clean installation of elementary OS Luna or later. This is important as the instructions you’re given may reference apps that are not present (or even available) in other Linux based operating systems like Ubuntu. It is possible to apply the principles of this guide to Ubuntu development, but it may be more difficult to follow along.": "Nos vamos assumir que você está usando um instalação limpa do elementary OS Luna ou superior. Isso é importante porque as instruções que estamos dando provavelmente fazer referência à aplicativos que não estão presentes (ou ainda não disponíveis) em outros sistemas operacionais baseados no Linux como o Ubuntu. É possível aplicar os princípios desse guia ao desenvolvimento no Ubuntu, mas possivelmente será bem mais difícil para prosseguir.",
    "Launchpad": "Launchpad",
    "Launchpad is a free online service provided by Canonical, the same people who brought you Ubuntu. It is used as a platform for hosting code, tracking milestones, tracking bugs, proposing designs, making translations, and more. Launchpad is a powerful resource, especially if you are a developer working with others. We're going to be using it for its various features throughout this book, so it's a good idea for you to sign up for an account. If you already have an account, feel free to move on to the next section.": "Launchpad é um serviço online grátis disponibilizado pela Canonical, as mesmas pessoas que trouxeram Ubuntu para você. É usado como uma plataforma para hospedagem de código, acompanhamento de milestones, acompanhamento de bugs, propostas de designs, criação de traduções e mais. O Launchpad é um recurso poderoso, especialmente se você for um desenvolvedor trabalhando em grupo. Nós iremos utiliza-lo pelos seus vários recursos no decorrer deste livro, então é uma boa ideia que você crie uma conta. Se você já possui uma conta pule para a próxima sessão. ",
    "To set up a Launchpad account:": "Criando uma conta Launchpad:",
    "Go to <a href=\"https://launchpad.net\">Launchpad.net</a>. Click on <strong>Log in/Register</strong> in the top right corner of the page.": "Vá para <a href=\"https://launchpad.net\">Launchpad.net</a>. Clique em <strong>Log in/Register</strong>  no canto superior direito da página.",
    "Select <strong>I am a new Ubuntu One user</strong> on the left side.": "Selecione <strong>Eu sou um novo usuário do Ubuntu One</strong> no lado esquerdo.",
    "Enter your information and click <strong>Create account</strong>.": "Coloque suas informações e clique <strong>Criar conta</strong>",
    "After you have verified your email your Launchpad account is ready, so let's move on to the next section. Remember, we're not going to go over all the little details in this book. We'll come back to Launchpad a few times later on to use specific features, but if you really want to learn everything there is to know about the website you should read their user guide. Onward!": "Após você verificar o seu email sua conta no Launchpad está pronta, então vamos continuar na próxima sessão. Lembre-se, nós não cobriremos todos os pequenos detalhes neste livro. Nós retornaremos ao Launchpad algumas vezes no futuro para usar recursos específicos, mas se você realmente gostaria de aprender tudo que há para se saber sobre o website você deve ler o guia de usuário do Launchpad.  Seguindo em frente!",
    "Bazaar": "Bazaar",
    "elementary projects are hosted on Launchpad. To interact with the code on Launchpad, we use a distributed <a href=\"http://en.wikipedia.org/wiki/Revision_control\">revision control system</a> called Bazaar. This allows multiple developers to collaboratively develop and maintain the code while keeping track of each revision along the way.": "Projetos do elementary são hospedados no Launchpad. Para interagir com o código no Launchpad, nós usamos um sistema de  <a href=\"https://pt.wikipedia.org/wiki/Sistema_de_controle_de_versão\">controle de versão</a> distribuído chamado Bazaar. Ele permite que diversos desenvolvedores colaborem no desenvolvimento e manutenção do código, mantendo controle de cada revisão no meio do caminho.",
    "If you're ready, let's get you set up to use Bazaar:": "Se você está pronto, vamos preparar o seu Bazaar.",
    "Open the Terminal. You'll be interacting with Bazaar through a simple terminal-based program called bzr.": "Abra o terminal. Você irá interagir com o Bazaar através de um programa simples baseado em terminal chamado bzr.",
    "You'll need to install bzr. Simply type the following into the Terminal:": "Você precisar instalar o bzr. Basta digitar o seguinte no Terminal:",
    "sudo apt-get install bzr": "sudo apt-get install bzr",
    "To authenticate and transfer code securely, you’ll need to generate an <a href=\"http://en.wikipedia.org/wiki/Secure_Shell\">SSH</a> key pair (a kind of fingerprint for your computer) and import the public key in Launchpad. Type the following in terminal:": "Para autenticar e transferir códigos de maneira segura, você precisa gerar um par de chaves <a href=\"https://pt.wikipedia.org/wiki/SSH\">SSH</a> (uma espécie de identidade para seu computador) e importar para a Launchpad a chave pública. Digite o seguinte no terminal:",
    "sudo apt-get install openssh-client\nssh-keygen -t rsa": "sudo apt-get install openssh-client\nssh-keygen -t rsa",
    "When prompted, press Enter to accept the default file name for your key.": "Quando solicitado, pressione Enter para aceitar o nome de arquivo padrão para a sua chave.",
    "Next, enter a password to protect your SSH key. You’ll be asked to enter it again, just to make sure you didn’t make any typos. You'll need to enter this password any time you try to push code to launchpad so don't forget it! Optionally, you can just press enter and use no password, but this is obviously less secure.": "Em seguida coloque uma senha para proteger sua chave SSH. Você será pedido para coloca-la novamente, para ter certeza de que não houve nenhum erro de digitação. Será necessário colocar essa senha todas as vezes que você enviar código para o launchpad, então não esqueça dela! Outra opção é você apenas pressionar enter e não usar uma senha, mas isso é obviamente menos seguro.",
    "Now, we're going to tell Launchpad about your SSH key. Open your SSH key with the following command, then copy the text from the file that opens in Scratch:": "Agora nós informaremos o Launchpad sobre sua chave SSH. Abra sua chave SSH com o seguinte comando, depois cope o texto do arquivo que é aberto no Scratch.",
    "scratch-text-editor ~/.ssh/id_rsa.pub": "scratch-text-editor ~/.ssh/id_rsa.pub",
    "Visit <a href=\"https://launchpad.net/people/+me/+editsshkeys\">your SSH keys page</a>. Paste the text in the textbox and click <strong>Import public key</strong>.": "Visite <a href=\"https://launchpad.net/people/+me/+editsshkeys\">sua pagina de chave SSH</a>. Cole o texto na caixa de texto e clique em <strong>Importar chave publica</strong>.",
    "Now you can connect bzr to your Launchpad account. You'll need your launchpad id, which you can look up at <a href=\"https://launchpad.net/people/+me\">your launchpad page</a>.": "Agora você pode conectar o bzr na sua conta do Launchpad. Você precisará do seu id do launchpad que você pode encontrar em <a href=\"https://launchpad.net/people/+me\">sua pagina no launchpad</a>.",
    "bzr launchpad-login your-launchpad-id": "bzr launchpad-login seu-id-launchpad",
    "Done! Now you can download source code hosted on Launchpad and upload your own code. We'll revisit using bzr in a minute, but for now you're logged in. For a more in-depth introduction to bzr, you can also check the complete <a href=\"http://doc.bazaar.canonical.com/latest/en/user-guide\">Bazaar User Guide</a> provided by Canonical.": "Pronto! Agora você pode baixar o código fonte hospedado no Launchpad e enviar o seu próprio código. Nós retornaremos ao uso do bzr em um minuto, mas por enquanto você está logado. Para uma introdução mais detalhada sobre o bzr você pode ler o <a href=\"http://doc.bazaar.canonical.com/latest/en/user-guide\">Guia de Usuário do Bazaar</a> disponibilizado pela Canonical. ",
    "Developer &quot;SDK&quot;": "Desenvolvedor \"SDK\"",
    "At the time of this writing, elementary doesn't have a full SDK like Android or iOS. But luckily, we only need a couple simple apps to get started writing code.": "Na data de escrita deste artigo, elementary não possui uma SDK completa como Android ou iOS. Mas felizmente nós só precisamos de alguns apps simples para começar a escrever código.",
    "Scratch": "Scratch",
    "The first piece of our simple &quot;SDK&quot; is the code editor Scratch. This comes by default with elementary OS. It comes with some helpful features like syntax highlighting, auto-save, and the Folder Manager extension. There are other extensions for Scratch as well, like the Outline, Terminal or Devhelp extensions. Play around with what works best for you.": "A primeira peça do nosso simples \"SDK\" é o editor de texto Scratch. Ele vem por padrão com o elementary OS. Ele vem com algumas funcionalidades uteis, como destaque de sintaxe, salvamento automático e a extensão de Gerenciador de Arquivos. Existem outras extensões para o Scratch, como Outline, Terminal e Devhelp. Altere algumas opções para o que funciona melhor para você.",
    "Terminal": "Terminal",
    "We’re going to use Terminal in order to compile our code, push revisions to Bazaar (bzr), and other good stuff. Throughout this guide, we’ll be issuing Terminal commands. You should assume that any command is executed from the directory “Projects” in your home folder unless otherwise stated. Since elementary doesn’t come with that folder by default, you’ll need to create it.": "Vamos usar o Terminal para compilar nosso código, impulsionar revisões do Bazaar (bzr) e outras coisas boas. Ao longo deste guia, nós vai emitir comandos de Terminal. Você deve assumir que qualquer comando é executado a partir do diretório \"projetos\" na sua pasta a menos que indicado o contrário. Como o elementary não vem com essa pasta por padrão, você precisará criá-la.",
    "Open Terminal and issue the following command:": "Abra o Terminal e execute o seguinte comando:",
    "mkdir Projects": "mkdir Projects",
    "Development Libraries": "Bibliotecas de Desenvolvimento",
    "In order to build apps you're going to need their development libraries. We can fetch a basic set of libraries with the following terminal command:": "A fim de construir aplicativos que você vai precisar de suas bibliotecas de desenvolvimento. Podemos obter um conjunto básico de bibliotecas com o seguinte comando no terminal:",
    "sudo apt-get build-dep granite-demo": "sudo apt-get build-dep granite-demo",
    "The command <code>apt-get build-dep</code> installs the build dependencies of an app in the repositories. In this case, we're fetching the development libraries needed to build Granite Demo, an example app. We'll talk more about Granite later, but keep in mind that if you want to build an app from source, you can usually get its build dependencies easily by using <code>apt-get build-dep</code>.": "O comando <code>apt-get build-dep</code> instala as dependências de compilação de um app nos repositórios. Neste caso, nós estamos buscando as bibliotecas de desenvolvimento necessárias para construir o Granite Demo, um exemplo de aplicativo. Vamos falar mais sobre o Granite mais tarde, mas tenha em mente que se você quer construir um aplicativo pela fonte, você normalmente pode obter suas dependências de compilação facilmente usando o <code>apt-get build-dep</code>.",
    "And with that, we're ready to dive into development! Let's move on!": "E com isso, estamos prontos para mergulhar no desenvolvimento! Vamos em frente!",
    "Hello World": "Olá Mundo",
    "The first app we’ll create will be a basic and generic “Hello World”. We’ll walk through the steps of creating folders to store our source code, compiling our first app, and pushing the project to a bzr branch. Let’s begin.": "O primeiro app que vamos criar será um básico e genérico \"Hello World\". Vamos seguir os passos de criar pastas para guardar nosso código, compilar nosso primeiro app e enviar o projeto para um branch bzr. Vamos começar.",
    "Setting Up": "Configurando",
    "Apps on elementary OS are organized into standardized directories contained in your project's &quot;root&quot; folder. Let's create a couple of these to get started:": "Apps no elementary IS são organizados em diretórios padronizados contidos na pasta \"raiz\" do seu projeto. Vamos criar alguns para começar:",
    "Create your root folder called &quot;gtk-hello&quot;": "Crie a sua pasta raiz chamada \"gtk-hello\"",
    "Create a folder inside that one called &quot;src&quot;. This folder will contain all of our source code.": "Crie uma pasta dentro desta chamada \"src\". Esta pasta irá conter todo o nosso código.",
    "Later on, We'll talk about adding other directories like &quot;po&quot; and &quot;data&quot;. For now, this is all we need.": "Mais tarde, vamos falar sobre a adição de outros diretórios como \"po\" e \"data\". Por enquanto, isso é tudo o que precisamos.",
    "Gtk.Window and Gtk.Button": "Gtk.Window e Gtk.Button",
    "Now what you've been waiting for! We're going to create a window that contains a button. When pressed, the button will display the text &quot;Hello World!&quot; To do this, we're going to use a widget toolkit called GTK+ and the programming language Vala. Before we begin, we highly recommend that you do not copy and paste. Typing each section manually will help you to practice and remember. Let's get started:": "Agora o que você está esperando! Vamos criar uma janela que contém um botão. Quando pressionado, o botão irá exibir o texto \"Olá mundo!\" Para fazer isso, vamos usar um widget toolkit chamado GTK + e linguagem de programação Vala. Antes de começarmos, nós recomendamos que você não copie e cole. Digitar cada seção manualmente irá ajudá-lo a praticar e lembrar. Vamos começar:",
    "Create a new file in Scratch and save it as &quot;gtk-hello.vala&quot; inside your &quot;src&quot; folder": "Crie um novo arquivo no Scratch e salve-o como \"gtk-hello.vala\" dentro da pasta \"src\"",
    "First we must create the main function of our new GTK app. Type the following in your &quot;gtk-hello.vala&quot;.": "Primeiro temos de criar a função principal do nosso novo aplicativo GTK. Digite o seguinte no seu \"gtk-hello.vala\".",
    "int main (string[] args) {\n    Gtk.init (ref args);\n}": "int main (string[] args) {\nGtk.init (ref args);\n}",
    "Now, that we've initialized Gtk, we'll create a new window and declare a few properties of this window. You'll notice that most of these property names are pretty straightforward. Try to guess what each one does and we'll explain in a second. Type the following after the <code>Gtk.init</code> line, but before the last bracket:": "Agora que nós já inicializamos o Gtk, vamos criar uma nova janela e declarar algumas propriedades desta janela. Você vai notar que a maioria destes nomes de propriedade são bastante simples. Tente adivinhar o que cada um faz, e nós explicaremos em um segundo. Digite o seguinte, após a linha de <code>Gtk.init</code>, mas antes da última chave:",
    "var window = new Gtk.Window ();\nwindow.title = \"Hello World!\";\nwindow.set_border_width (12);\nwindow.set_position (Gtk.WindowPosition.CENTER);\nwindow.set_default_size (350, 70);\nwindow.destroy.connect (Gtk.main_quit);\n\nGtk.main ();\nreturn 0;": "var window = new Gtk.Window ();\nwindow.title = \"Hello World!\";\nwindow.set_border_width (12);\nwindow.set_position (Gtk.WindowPosition.CENTER);\nwindow.set_default_size (350, 70);\nwindow.destroy.connect (Gtk.main_quit);\n\nGtk.main ();\nreturn 0;",
    "The first line creates a new <code>Gtk.Window</code> called &quot;window&quot;. The second line sets the window title that you see at the top of the window. next, we create a margin inside that window so that widgets don't bump up against the window's edge. Then we tell the window manager that we want to place this window in the center of the screen instead of in the default position (which is usually the top left). We also must give our window a default size so that is does not appear too small for the user to interact with it. Finally, we explain what to do with this process if the main window is closed; In our case, we want to quit.": "A primeira linha cria um novo código <code>Gtk.Window</code>, chamado de \"window\". A segunda linha define o título da janela que você vê na parte superior da janela. em seguida, criamos uma margem dentro da janela para que os widgets não batam contra a borda da janela. Então dizemos que o gerenciador de janelas que nós queremos colocar esta janela no centro da tela em vez de na posição padrão (que geralmente é o canto superior esquerdo). Nós também devemos dar nossa janela um tamanho padrão, é isso que não aparece muito pequeno para que o usuário interagir com ele. Finalmente, vamos explicar o que fazer com este processo, se a janela principal é fechada; no nosso caso, nós queremos desistir.",
    "Now that we've defined a nice window, let's put a button inside of it. After our window stuff (but before <code>Gtk.main</code> line), leave a new line and then type the following:": "Agora que já definimos uma boa janela, vamos colocar um botão dentro dela. Depois da nossa janela (mas antes <code>Gtk.main</code> linha), deixe uma nova linha e digite o seguinte:",
    "var button_hello = new Gtk.Button.with_label (\"Click me!\");\nbutton_hello.clicked.connect (() =&gt; {\n    button_hello.label = \"Hello World!\";\n    button_hello.set_sensitive (false);\n});\n\nwindow.add (button_hello);\nwindow.show_all ();": "var button_hello = new Gtk.Button.with_label (\"Click me!\");\nbutton_hello.clicked.connect (() => {\nbutton_hello.label = \"Hello World!\";\nbutton_hello.set_sensitive (false);\n});\n\nwindow.add (button_hello);\nwindow.show_all ();",
    "Any ideas about what happened here? We've created a new <code>Gtk.Button</code> with the label &quot;Click me!&quot;. Then we've said that if this button is clicked, we want to change the label to say &quot;Hello World!&quot; instead. We've also said that we want to make the button insensitive; We do this because clicking the button again has no visible effect. Finally, we add the button to our <code>Gtk.Window</code> and declare that we want to show all of the window's contents.": "Alguma idéia sobre o que aconteceu aqui? Nós criamos uma nova <code>Gtk.Button</code> com o rótulo \"Clique-me!\". Então... já dissemos que, se este botão é clicado, queremos mudar o rótulo para dizer \"Hello World!\" em vez disso. Também dissemos que queremos fazer com que o botão insensível. Fazemos isso porque clicando no botão novo não tem nenhum efeito visível. Finalmente, adicionamos o botão ao nosso <code>Gtk.Window</code> e declaramos que queremos mostrar todo o conteúdo da janela.",
    "Compiling and Running your code": "Compilando e Rodando seu código",
    "Ready to test it out? Fire up your terminal and make sure you're in &quot;~/Projects/gtk-hello/src&quot;. Then execute the following commands to compile and run your first Gtk app:": "Pronto para testá-lo? Abra seu terminal e certifique-se de que você está no \"~/Projects/gtk-hello/src\". Em seguida, execute os seguintes comandos para compilar e executar seu primeiro aplicativo Gtk:",
    "valac --pkg gtk+-3.0 gtk-hello.vala\n./gtk-hello": "valac --pkg gtk+-3.0 gtk-hello.vala\n./gtk-hello",
    "Did it work? If so, congratulations! If not, read over your source code again and look for errors. Also check the output of your terminal. Usually there is helpful output that will help you track down your mistake.": "Funcionou? Se sim, parabéns! Se não, ler sobre seu código-fonte novamente e procurar erros. Também verifique a saída do seu terminal. Geralmente há saída útil que irá ajudá-lo a rastrear seu erro.",
    "Pushing to Launchpad": "Enviando para o Launchpad",
    "After we do anything significant, we must remember to push our code. This is especially important in collaborative development where not pushing your code soon enough can lead to unintentional forks and pushing too much code at once can make it hard to track down any bugs introduced by your code. So let's take a minute to revisit our friend <code>bzr</code>:": "Depois de fazermos qualquer coisa significativa, devemos lembrar de empurrar o nosso código. Isto é especialmente importante no desenvolvimento colaborativo onde não empurrando seu código logo que suficiente pode levar a não-intencionais garfos e empurrando muito código ao mesmo tempo podem tornar difícil rastrear bugs introduzidas pelo seu código. Então vamos dar um minuto para revisitar o nosso amigo <code>bzr</code>:",
    "Open Terminal and make sure you're in your project's root directory &quot;~Projects/gtk-hello&quot;": "Abra o Terminal e certifique-se de que você está no diretório root \"~Projects/gtk-hello\" do seu projeto",
    "bzr init\nbzr add src/gtk-hello.vala\nbzr commit -m \"Create initial structure. Create window with button.\"\nbzr push lp:~/+junk/gtk-hello": "bzr init\nbzr add src/gtk-hello.vala\nbzr commit -m \"Criar estrutura inicial. Criar janela com botão.\"\nbzr push lp:~/+junk/gtk-hello",
    "With these commands, we've told <code>bzr</code> to track this folder as a branch, that we'd like to track revisions on the file &quot;gtk-hello.vala&quot;, we've committed our first revision and explained what we did in the revision, and then we've told <code>bzr</code> to push your code to Launchpad in your <a href=\"https://code.launchpad.net/people/+me/\">junk folder</a>.": "Com esses comandos nós dizemos ao <code>bzr</code> para acompanhar a pasta como um branch, que gostaríamos de acompanhar revisões do arquivo \"gtk-hello.vala\", fizemos um commit de nossa primeira revisão e explicamos o que fizemos na revisão, e dissemos ao <code>bzr</code> para enviar o código para o Launchpad em sua  <a href=\"https://code.launchpad.net/people/+me/\">pasta de lixo</a>.",
    "Victory!": "Vitória!",
    "Let's recap what we've learned to do in this first section:": "Vamos recapitular o que aprendemos a fazer nesta primeira seção:",
    "We created a new project containing a &quot;src&quot; folder": "Nós criamos um novo projeto contendo a pasta \"src\"",
    "We created our main vala file and inside it we created a new <code>Gtk.Window</code> and <code>Gtk.Button</code>": "Nós criamos nosso arquivo principal vala e dentro deste criamos uma nova <code>Gtk.Window</code> e <code>Gtk.Button</code>",
    "We built and ran our app to make sure that everything worked properly": "Construimos e executamos nosso app para garantir que tudo estava funcionando de acordo",
    "Finally, we commited our first revision and pushed code to Launchpad": "Por fim, realizamos o commit de nossa primeira revisão e enviamos o código para o Launchpad",
    "Feel free to play around with this example. Make the window a different size, set different margins, make the button say other things. When you're comfortable with what you've learned, go on to the next section.": "Fique a vontade para modificar esse exemplo. Faça a janela de um tamanho diferente, coloque margens diferentes, crie um botão que diga outras coisas. Quando se sentir confortável com o que aprendeu vá para a próxima sessão.",
    "A Note About Libraries": "Uma Nota Sobre Bibliotecas ",
    "Remember how when we compiled our code, we used the <code>valac</code> command and the argument <code>--pkg gtk+-3.0</code>? What we did there was make use of a &quot;library&quot;. If you're not familiar with the idea of libraries, a library is a collection of methods that your program can use. So this argument tells <code>valac</code> to include the GTK+ library (version 3.0) when compiling our app.": "Lembra como quando compilamos nosso código nós utilizamos o comando <code>valac</code> e o argumento </code>--pkg gtk+-3.0</code>? O que fizemos foi utilizar uma \"biblioteca\". Se você não é familiar com a ideia de bibliotecas, uma biblioteca é uma coleção de métodos que o programa pode utilizar. Assim, esse argumento informa o <code>valac</code> para incluir a biblioteca GTK+ (versão 3.0) quando nosso app é compilado.",
    "In our code, we've used the <code>Gtk</code> &quot;Namespace&quot; to declare that we want to use methods from GTK+ (specifically, <code>Gtk.Window</code> and <code>Gtk.Button.with_label</code>). Notice that there is a hierarchy at play. If you want to explore that hierarchy in more detail, you can <a href=\"http://www.valadoc.org/#!api=gtk+-3.0/Gtk.Button\">check out Valadoc</a>.": "Em nosso código nós utilizamos o \"Namespace\" <code>Gtk</code> para declarar que queremos utilizar os métodos que estão no GTK+ (especificamente, <code>Gtk.Window</code> e <code>Gtk.Button.with_label</code>). Note que existe uma hierarquia aqui. Se você quiser explorar essa hierarquia com mais detalhes você pode  <a href=\"http://www.valadoc.org/#!api=gtk+-3.0/Gtk.Button\">ler o Valadoc</a>.",
    "Our First App": "Nosso Primeiro App",
    "In the previous chapter, we created a simple &quot;Hello World!&quot; app to show off our vala and Gtk skills. But what if we wanted to share our new app with a friend? They'd have to know which packages to include with the <code>valac</code> command we used to build our app, and after they'd built it they'd have to run it from the build directory like we did. Clearly, we need to do some more stuff to make our app fit for people to use, to make it a <em>real</em> app.": "No capítulo anterior, criamos um simples app \"Hello World!\" para mostrarmos nossas habilidades com Vala e Gtk. Mas e se quiséssemos compartilhar nosso novo app com um amigo? Eles teriam que saber quais pacotes incluir com o com o comando <code>valac</code> que utilizamos para compilar nosso app, e depois de compilado eles teriam que rodar a partir do diretório de compilação como fizemos. Claramente nós precisamos de mais coisas para fazer com que nosso app mais adequado para pessoas utilizarem, preciamos fazer dele um app <em>de verdade</em>.",
    "Hello (again) World!": "Olá (novamente) Mundo!",
    "To create our first real app, we're going to need all the old stuff that we used in the last example. But don't just copy and paste! Let's take this time to practice our skills and see if we can recreate the last example from memory. Additionally, now that you have the basics, we're going to get a little more complex and a little more organized:": "Para criar nossa primeira aplicação real, nós vamos precisar de todo o material antigo que usamos no último exemplo. Mas não basta copiar e colar! Vamos aproveitar este momento para praticar as nossas habilidades e ver se podemos recriar o último exemplo de memória. Além disso, agora que você tem o básico, vamos buscar ser um pouco mais complexo e um pouco mais organizado:",
    "Create a new folder in &quot;~/Projects&quot; called &quot;hello-world&quot; and put our last project in that folder. Now create a new folder inside &quot;~/Projects/hello-world&quot; called &quot;hello-again&quot;. We're doing this because our first &quot;gtk-hello&quot; and &quot;hello-again&quot; are two branches of the same &quot;hello-world&quot; project. As you get more into collaborative development, you're going to have lots of branches. This method will help you stay organized.": "Crie uma nova pasta em  \"~/Projects\" chamada \"hello-world\" e coloque a pasta de nosso ultimo projeto nesta pasta. Agora crie uma nova pasta dentro de  \"~/Projects/hello-world\" chamada \"hello-again\". Nós estamos fazendo isso pois nosso primeiro \"gtk-hello\" e \"hello-again\" são dois branches do mesmo projeto \"hello-world\". Conforme você se envolve mais em desenvolvimento colaborativo, você terá diversos branches. Esse método ajudará você a se manter organizado.",
    "Now go into &quot;hello-again&quot; and create our directory structure including the &quot;src&quot; folder.": "Agora vá para \"hello-again\" e crie nossa estrutura de diretórios incluindo a pasta \"src\".",
    "Create &quot;hello-again.vala&quot; in the &quot;src&quot; folder.  This time we're going to prefix our file with a small legal header. More about legal stuff later. For now, just copy and paste this, changing out <code>YourName</code> for your actual name:": "Crie um \"hello-again.vala\" na pasta \"src\". Desta vez nós iremos prefixar nosso arquivo com um cabeçalho legal. Falaremos mais sobre coisas legais depois. Por enquanto copie e cole o seguinte, mudando <code>YourName</code> para seu nome verdadeiro:",
    "/* Copyright 2013 YourName\n*\n* This file is part of Hello Again.\n*\n* Hello Again is free software: you can redistribute it\n* and/or modify it under the terms of the GNU General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* Hello Again is distributed in the hope that it will be\n* useful, but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n* Public License for more details.\n*\n* You should have received a copy of the GNU General Public License along\n* with Hello Again. If not, see http://www.gnu.org/licenses/.\n*/": "/* Copyright 2013 YourName\n*\n* This file is part of Hello Again.\n*\n* Hello Again is free software: you can redistribute it\n* and/or modify it under the terms of the GNU General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* Hello Again is distributed in the hope that it will be\n* useful, but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n* Public License for more details.\n*\n* You should have received a copy of the GNU General Public License along\n* with Hello Again. If not, see http://www.gnu.org/licenses/.\n*/",
    "Now, let's create our main function, a <code>Gtk.Window</code>, and set the window's default properties. Refer back to the last chapter if you need a refresher.": "Agora vamos criar nossa função main, uma <code>Gtk.Window</code>, e atribuir suas propriedades padrões. Volte ao capitulo anterior se você precisa se lembrar de alguma coisa.",
    "For the sake of time let's just put a <code>Gtk.Label</code> instead of a <code>Gtk.Button</code>. We don't need to try to make the label do anything when you click it.": "Para economizar tempo vamos colocar apenas um <code>Gtk.Label</code> ao invés de um <code>Gtk.Button</code>. Não precisamos tentar fazer o label fazer nada quando é clicado.",
    "var label = new Gtk.Label (\"Hello Again World!\");": "var label = new Gtk.Label (\"Hello Again World!\");",
    "Don't forget to add it to your window and show the window's contents:": "Não se esqueça de adicioná-lo à sua janela e mostrar os conteúdos da janela:",
    "window.add (label);\nwindow.show_all ();": "window.add (label);\nwindow.show_all ();",
    "Build &quot;hello-again.vala&quot; just to make sure it all works. If something goes wrong here, feel free to refer back to the last chapter and remember to check your terminal output for any hints.": "Compile \"hello-again.vala\" para ter certeza que tudo funciona. Se algo der errado aqui, fique a vontade para olhar o capitulo anterior e lembre-se de ler a saída do seu terminal para dicas do que pode estar acontecendo.",
    "Initialize the branch, add your files to the project, and write a commit message using what you learned in the last chapter. Lastly, push your first revision with <code>bzr</code>:": "Inicialize o branch, adicione seu arquivo ao projeto, e escreva uma mensagem de commit utilizando o que você aprendeu no capitulo anterior. Finalmente, envie sua primi era revisão utilizando o <code>bzr</code>.",
    "bzr push lp:~/+junk/hello-again": "bzr push lp:~/+junk/hello-again",
    "Everything working as expected? Good. Now, let's get our app ready for other people to use.": "Tudo está funcionando direito? Bom. Agora vamos preparar nosso app para que outras pessoas possam usa-lo.",
    "The .desktop File": "O arquivo .desktop",
    "Every app comes with a .desktop file. This file contains all the information needed to display your app in the Applications menu and in the Dock. Let's go ahead and make one:": "Todo app vem com um arquivo \".desktop\". Este arquivo contém toda a informação necessária para exibir seu app no menu de Aplicativos e no Dock. Vamos prosseguir e criar um:",
    "In your project's root, create a new folder called &quot;data&quot;.": "Na raiz do projeto, crie uma nova pasta chamada \"data\"",
    "Create a new file in scratch and save it in the &quot;data&quot; folder as &quot;hello.desktop&quot;.": "Crie um novo arquivo no scratch e o salve na pasta \"data\" com o nome \"hello.desktop\"",
    "Type the following into &quot;hello.desktop&quot;. Like before, try to guess what each line does.": "Digite o seguinte em \"hello.desktop\". Como antes, tente advinhar o que cada linha faz.",
    "[Desktop Entry]\nName=Hello Again\nGenericName=Hello World App\nComment=Proves that we can use Vala and Gtk\nCategories=GTK;Utility;\nExec=hello-again\nIcon=application-default-icon\nTerminal=false\nType=Application\nX-GNOME-Gettext-Domain=hello-again\nX-GNOME-Keywords=Hello;World;Example;": "[Desktop Entry]\nName=Hello Again\nGenericName=Hello World App\nComment=Prova de que sabemos utilizar Vala e Gtk\nCategories=GTK;Utility;\nExec=hello-again\nIcon=application-default-icon\nTerminal=false\nType=Application\nX-GNOME-Gettext-Domain=hello-again\nX-GNOME-Keywords=Hello;World;Example;",
    "The first line declares that this file is a &quot;Desktop Entry&quot; file. The next three lines are descriptions of our app: The branded name of our app, a generic name for our app, and a comment that describes our app's function. Next, we categorize our app. Then, we say what command will execute it. Finally, we give our app an icon (a generic one included in elementary OS) and let the OS know that this isn't a command line app. For more info about crafting .desktop files, check out <a href=\"/docs/human-interface-guidelines/app-launchers\">this HIG entry</a>.": "As primeiras três linhas dizem que esse arquivo é um arquivo \"Desktop Entry\". As próximas três linhas são uma descrição do nosso aplicativo: O nome oficial de nosso app, um nome genérico para nosso app, e um comentário que descreve a função dele. Em seguida categorizamos nosso app. Então dizemos que comando vai executa-lo. Finalmente, damos nosso app um ícone (um ícone genérico incluído no elementary OS) e dizemos ao OS que o aplicativo não é para linha de comando. Para mais informações sobre a criação de arquivos .desktop, leia <a href=\"/docs/human-interface-guidelines/app-launchers\">essa pagina no HIG</a>.",
    "Finally, let's add this file to bzr and commit a revision:": "Por fim, vamos adicionar este arquivo ao bzr e entregar uma revisão:",
    "bzr add data/hello.desktop\nbzr commit -m \"Added a .desktop file\"\nbzr push": "bzr add data/hello.desktop\nbzr commit -m \"Added a .desktop file\"\nbzr push",
    "Legal Stuff": "Coisas Legais",
    "Since we're going to be putting our app out into the wild, we should include some information about who wrote it and the legal usage of its source code. For this we need two new files in our project's root folder: AUTHORS and COPYING.": "Já que iremos publicar nosso app, nós devemos incluir algumas informações sobre quem o escreveu e o uso legal de seu código fonte. Para isso nós precisamos de dois novos arquivos na pasta rais do projeto: AUTHORS e COPYING.",
    "Authors": "Autores",
    "The AUTHORS file is pretty straightforward. This file contains your name and email address along with the name and email address of anyone who helped you make your app. It typically looks like this:": "O arquivo AUTHORS é bem direto. Este arquivo contém o seu nome e e-mail, juntamente com os nomes e e-mails de qualquer um que o ajudou a fazer seu app. Geralmente seu conteúdo é algo assim:",
    "Your Name &lt;you@emailaddress.com&gt;\n    Your Friend &lt;friend@emailaddress.com&gt;": "Seu nome &lt;seu@enderecodeemail.com&gt;\nSeu amigo &lt;amigo@enderecodeemail.com&gt;",
    "Copying": "Copiando",
    "The COPYING file contains a copy of the license that your code is released under. For elementary apps this is typically the <a href=\"http://www.gnu.org/licenses/quick-guide-gplv3.html\">GNU Public License</a> (GPL). Remember the header we added to our source code? That header reminds people that your app is licensed and it belongs to you. You can choose other licenses like the MIT license as well, but for this example let's stick to the <a href=\"http://www.gnu.org/licenses/gpl-3.0.txt\">GPL</a>.": "O arquivo COPYING contem uma cópia da licença em que seu código é liberado. Para apps no elementary essa é tipicamente a <a href=\"http://www.gnu.org/licenses/quick-guide-gplv3.html\">GNU Public License</a> (GPL). Lembre-se do cabeçalho que colocamos no código fonte? O cabeçalho lembra às pessoas que nosso app é licenciado e pertence à você . Você pode escolher outras licenças como a licença MIT também, mas para esse exemplo vamos continuar utilizando <a href=\"http://www.gnu.org/licenses/gpl-3.0.txt\">GPL</a>.",
    "Mark Your Progress": "Marque Seu Progresso",
    "Did you remember to add these files to bzr and commit a revision? Each time we add a new file or make a significant change it's a good idea to commit a new revision and push to Launchpad. Keep in mind that this acts as a backup system as well; when we push our work to Launchpad, we know it's safe and we can always revert to a known good revision if we mess up later.": "Você se lembrou de adicionar esses arquivos ao bzr e entregar a revisão? Cada vez que adicionamos um novo arquivos ou realizamos uma mudança significativa é uma boa ideia entregar uma nova revisão e enviar ao Launchpad. Tenha em mente que isso também funciona com um sistema de backup; quando enviamos nosso trabalho ao Launchpad, nós sabemos que ele está salvo e podemos reverter para uma revisão que sabemos ser boa se cometermos algum erro.",
    "Now that we've got all these swanky files laying around, we need a way to tell the computer what to do with them. Ready for the next chapter? Let's do this!": "Agora que temos todos esses arquivos fanfarrões por ai, nós precisamos de uma maneira de dizer ao computador o que fazer com eles. Pronto para o próximo capitulo? Vamos lá!",
    "The Build System": "O Sistema de Compilação",
    "The next thing we need is a build system. The build system that we're going to be using is called <a href=\"http://www.cmake.org\">CMake</a>. We already installed the <code>cmake</code> program at the beginning of this book when we got the build dependencies for Granite Demo. What we're going to do in this step is get a copy of some additional modules for Cmake (support for Vala, translations, etc), and create the files that tell Cmake how to install your program. This includes all the rules for building your source code as well as correctly installing your .desktop file and the binary app that results from the build process.": "A proxima coisa que precisamos é um sistema de construção. O sistema de construção que nós iremos usar é chamado de <a href=\"http://www.cmake.org\">CMake</a>. Nós já instalamos o programa <code>cmake</code> no começo desse livro quando reparamos as dependencias para o Granite Demo. O que vamos fazer neste passo é pegar a uma copia adicional dos modulos Cmake(suportado por Vala, traduções, etc), e criar os arquivos que informem ao CMAKE como instalar o seu programa. Isso inclue todas as regras para construção de seu código fonte bem como a instalação correta de seu arquivo na a´rea de trabalho e o aplicativo binário resultante da instalação.",
    "The elementary apps team maintains a copy of the CMake modules that we're going to need. Make sure you're in &quot;~/Projects&quot; (not in your hello-again folder) and then grab the latest copy of those modules with bzr. Notice that we're not in &quot;~/Projects/hello-world&quot;. This is because our cmake modules are not a branch of our Hello World app:": "Os aplicativos do time elementary mantêm uma cópia dos módulos do CMake que nós precisaremos. Tenha certeza de que você está em  \"~/Projects\" (não em sua pasta hello-again) e então pegue a última cópia destes módulos com bzr. Note que não estamos em \"~/Projects/hello-world\". Isto ocorre pois nossos módulos do cmake não são uma branch do nosso aplicativo Hello World.",
    "bzr branch  lp:~elementary-apps/+junk/cmake-modules": "bzr branch lp:~elementary-apps/+junk/cmake-modules",
    "You'll see a folder called &quot;cmake&quot;. Copy that into your &quot;hello-again&quot; folder. It's that easy.": "Você verá um diretório chamado \"cmake\". Copie ele dentro do seu diretório \"hello-again\". É fácil",
    "Create a new file in your project's root folder called &quot;CMakeLists.txt&quot;. Since this file is a bit long, we've included some comments along the way to explain each section. You don't have to copy those, but type the rest into that file:": "Crie um novo arquivo no diretório raiz de seu projeto chamado \"CMakeLists.txt\" Desde que o arquivo seja maior que 1 bit, nós o incluiremos alguns comentários ao longo do caminho para explicar cada sessão. Não é necessário copia-los, mas digite o resto do arquivo:",
    "# project name\nproject (hello-again)\n\n# the oldest stable cmake version we support\ncmake_minimum_required (VERSION 2.6)\n\n# tell cmake where its modules can be found in our project directory\nlist (APPEND CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake)\n\n# where we install data directory (if we have any)\nset (DATADIR \"${CMAKE_INSTALL_PREFIX}/share\")\n\n# what to call that directory where we install data too\nset (PKGDATADIR \"${DATADIR}/hello-again\")\n\nset (EXEC_NAME \"hello-again\")\nset (RELEASE_NAME \"A hello world.\")\nset (VERSION \"0.1\")\nset (VERSION_INFO \"whats up world\")\n\n# we're about to use pkgconfig to make sure dependencies are installed so let's find pkgconfig first\nfind_package(PkgConfig)\n\n# now let's actually check for the required dependencies\npkg_check_modules(DEPS REQUIRED gtk+-3.0)\n\nadd_definitions(${DEPS_CFLAGS})\nlink_libraries(${DEPS_LIBRARIES})\nlink_directories(${DEPS_LIBRARY_DIRS})\n\n# make sure we have vala\nfind_package(Vala REQUIRED)\n# make sure we use vala\ninclude(ValaVersion)\n# make sure it's the desired version of vala\nensure_vala_version(\"0.16\" MINIMUM)\n\n# files we want to compile\ninclude(ValaPrecompile)\nvala_precompile(VALA_C ${EXEC_NAME}\n    src/hello-again.vala\n\n# tell what libraries to use when compiling\nPACKAGES\n    gtk+-3.0\n)\n\n# tell cmake what to call the executable we just made\nadd_executable(${EXEC_NAME} ${VALA_C})\n\n# install the binaries we just made\ninstall (TARGETS ${EXEC_NAME} RUNTIME DESTINATION bin)\n\n# install our .desktop file so the Applications menu will see it\ninstall (FILES ${CMAKE_CURRENT_SOURCE_DIR}/data/hello.desktop DESTINATION ${DATADIR}/applications/)": "# Nome do projeto\nproject (hello-again)\n\n# a versão mais antiga do cmake que suportaremos\ncmake_minimum_required (VERSION 2.6)\n\n# diz ao cmake que os módulos podem ser encontrados no nosso diretório de projeto\nlist (APPEND CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake)\n\n# onde instalar o diretório de dados (se tivermos algum)\nset (DATADIR \"${CMAKE_INSTALL_PREFIX}/share\")\n\n# do que chamar o diretório onde instalaremos os dados\nset (PKGDATADIR \"${DATADIR}/hello-again\")\n\nset (EXEC_NAME \"hello-again\")\nset (RELEASE_NAME \"A hello world.\")\nset (VERSION \"0.1\")\nset (VERSION_INFO \"whats up world\")\n\n# estamos prestes à utilizar pkgconfig para ter certeza de que todas as dependências estão instaladas, então vamos encontrar o pkgconfig primeiro\nfind_package(PkgConfig)\n\n# agora realmente checamos as dependências necessárias\npkg_check_modules(DEPS REQUIRED gtk+-3.0)\n\nadd_definitions(${DEPS_CFLAGS})\nlink_libraries(${DEPS_LIBRARIES})\nlink_directories(${DEPS_LIBRARY_DIRS})\n\n# verificamos se temos vala\nfind_package(Vala REQUIRED)\n# verificamos se usamos vala\ninclude(ValaVersion)\n# verificamos se temos a versão minima do vala\nensure_vala_version(\"0.16\" MINIMUM)\n\n# arquivos que desejamos compilar\ninclude(ValaPrecompile)\nvala_precompile(VALA_C ${EXEC_NAME}\n    src/hello-again.vala\n\n# avisa que bibliotecas utilizar para compilar\nPACKAGES\n    gtk+-3.0\n)\n\n# avisa ao cmake para chamar o executável que criamos\nadd_executable(${EXEC_NAME} ${VALA_C})\n\n# instala o binario que criamos\ninstall (TARGETS ${EXEC_NAME} RUNTIME DESTINATION bin)\n\n# instala o arquivo .desktop para que o menu de Aplicações o veja\ninstall (FILES ${CMAKE_CURRENT_SOURCE_DIR}/data/hello.desktop DESTINATION ${DATADIR}/applications/)",
    "And you're done! Your app now has a real build system. Don't forget to add these files to bzr and push to launchpad. This is a major milestone in your app's development!": "E você está pronto! Seu aplicativo agora está realmente compilado no sistema. Não se esqueça de adicionar arquivos para o bzr e enviar ao launchpad. Este é o maior marco do desenvolvimento de seu aplicativo.",
    "Building and Installing with CMake": "Compile e Instale com o CMake",
    "Now that we have a build system, let's try it out:": "Agora nós temos um sistema de compilação, vamos experimentá-lo:",
    "Create a new folder in your project's root folder called &quot;build&quot;": "Crie um novo diretório no diretório raiz chamado \"build\"",
    "Change into this directory in terminal and execute the following command:": "Mude para este diretório no terminal e execute o seguinte comando:",
    "cmake -DCMAKE_INSTALL_PREFIX=/usr ../": "cmake -DCMAKE_INSTALL_PREFIX=/usr ../",
    "This command tells cmake to get ready to build our app using the prefix &quot;/usr&quot;. The <code>cmake</code> command defaults to installing our app locally, but we want to install our app for all users on the computer.": "Este comando chama cmake para ficar pronto para compilar sua aplicação usando o prefixo \"/usr\". O comando <code>cmake</code> é o padrão para instalar sa aplicação localmente, mas nos queremos que instale sua aplicação para todos os usuarios neste computador",
    "Build your app with <code>make</code> and if successful install it with <code>sudo make install</code>:": "Construa sua aplicação com <code>make</code> e se for bem sucedido instele com <code>sude make install</code>:",
    "make\nsudo make install": "make\nsudo make install",
    "If all went well, you should now be able to open your app from the Applications menu and pin it to the Dock.  If you were about to add the &quot;build&quot; folder to your bzr branch and push it, stop! This binary was built for your computer and we don't want to redistribute it. In fact, we built your app in a separate folder like this so that we can easily delete or ignore the &quot;build&quot; folder and it won't mess up our app's source code.": "Se tudo correu bem, agora você deve ser capaz de abrir seu aplicativo a partir do menu Aplicativos e fixa-lo ao Dock. Se você estivesse prestes a adicionar a pasta \"build\" ao seu branch bzr e carregá-la, pare! Este binário foi feito para o seu computador e nós não queremos redistribuí-lo. Na verdade, nós fizemos seu aplicativo numa pasta separada como esta para que possamos facilmente deletar ou ignorar a pasta \"build\" e que isso não atrapalhe o código fonte do nosso aplicativo. ",
    "We'll revisit CMake again later to add some more complicated behavior, but for now this is all you need to know to give your app a proper build system. If you want to explore CMake a little more on your own, you can always check out <a href=\"http://www.cmake.org/cmake/help/documentation.html\">CMake's documentation</a>.": "Iremos revisitar o CMake novamente depois para adiciona mais algumas funcções complicadas, mas agora isso é tudo que precisa saber para dar a seu aplicativo um sistema de compilação apropriado. Se você quiser explorar o CMake próprio um pouco mais, poderá sempre conultar as <a href=\"http://www.cmake.org/cmake/help/documentation.html\">documentações CMake</a>.",
    "Review": "Revisão",
    "Let's review what all we've learned to do:": "Vamos revisar o que todos nós arendemos a fazer:",
    "Create a new Gtk app using <code>Gtk.Window</code>, <code>Gtk.Button</code>, and <code>Gtk.Label</code>": "Criar novos aplicativos com Gtk usando <code>Gtk.Window</code>, <code>Gtk.Button</code> e <code>Gtk.Label</code>",
    "Keep our projects organized into branches": "Mantenha seus projetos organizados dentro de \"branches\" (ramos)",
    "License our app under the GPL and declare our app's authors in a standardized manner": "Licencie seu aplicativo sob a GPL e declare a autoria de seu aplicativo na forma padronizada",
    "Create a .desktop file that tells the computer how to display our app in the Applications menu and the Dock": "Crie um arquivo .desktop que dia ao computador como mostrar seu aplicativo no Applications menu e no Dock",
    "Set up a CMake build system that contains all the rules for building our app and installing it cleanly": "monte o CMake para construir o sistema que contem todas as regras para construir seu aplicativo e instale isso de forma limpa",
    "That's a lot! You're well on your way to becoming a bonified app developer for elementary OS. Give yourself a pat on the back, then take some time to play around with this example. Change the names of files and see if you can still build and install them properly. Ask another developer to branch your project from launchpad and see if it builds and installs cleanly on their computer. If so, you've just distributed your first app! When you're ready, we'll move onto the next section: Packaging.": "Isto é muito! Você está a caminho um desenvolvedor aprimorado do elemantary OS. Dê uns tapinhas nas suas próprias costas, depois tire um tempo para treinar com este exemplo. Mude os nomes dos arquivos e veja se você ainda consegue compila-los e instala-los de maneira adequada. Peça a outro desenvolvedor para acessar seu projeto no launchpad e ver se ele compila e instala tranquilamente no computador dele. Se sim, você distribuiu seu primeiro aplicativo! Quando você estiver pronto, vamos mudar para a próxima seção: Empacotamento.",
    "Packaging": "Criando Pacotes",
    "While having a build system is great, our app still isn't ready for regular users. We want to make sure our app can be built and installed without having to use Terminal. What we need to do is package our app. To do this, we use the Debian packaging format (.deb) on elementary OS. This section will teach you how to package your app as a .deb file, hosted in a Personal Package Archive (PPA) on Launchpad. This will allow normal people to install your app and even get updates for it in Update Manager.": "Enquanto nós construímos um bom sistema, nossos apps podem não ser preparados para usuários comuns. Nós queremos ter a certeza que nossos apps possam ser rodados e instalados sem utilizar o Terminal. O que precisamos fazer é o nosso pacote de apps. Para isso, nós temos que utilizar os pacotes no formato Debian(.deb) no sistema operacional Elementary. Nessa seção você vai aparender como fazer pacotes para seus aplicativos como um arquivo .deb, hosteando no Personal Package Archive (PPA) no Launchpad. Isso vai permitir que usuários comuns possam instalar updates de seus aplicativos a partir do Update Manager.",
    "Practice Makes Perfect": "Prática Leva à Perfeição",
    "If you want to get really good really fast, you're going to want to practice. Repetition is the best way to commit something to memory. So let's recreate our entire Hello World app again <em>from scratch</em>:": "Se você quer ficar muito bom, muito rápido, você você vai querer praticar. Repetição é a melhor forma de memorizar algo. Então vamos recriar nosso aplicativo Hello World novamente, <em>do zero</em>:",
    "Create a new branch folder &quot;hello-packaging&quot;": "Crie um novo diretório branch chamado \"hello-packaging\"",
    "Set up our directory structure including the &quot;src&quot; and &quot;data&quot; folders.": "Configure nossa estrutura de diretórios incluindo os diretórios \"src\" e \"data\".",
    "Add your Authors, Copying, .desktop, and source code.": "Adicione os Autores, Direitos de Cópia, .desktop e o código fonte.",
    "Now set up the CMake build system.": "Agora configure o sistema de compilação CMake.",
    "Test everything!": "Teste de tudo!",
    "Did you commit and push to launchpad for each step? Keep up these good habits and let's get to packaging this app!": "Você cmitou e enciou para o launchpad para cada passo? Mantenha esses bons hábitos e vamos empacotar este aplicativo!",
    "Debian Control": "Debian Control",
    "Now it's time to create the rules that will allow your app to be built as a .deb package. Let's dive right in:": "Agora é a vez de criar as regras que permitiram seu aplicativo ser construido como um pacore .deb. Vamos mergulhar direto:",
    "Like CMake, elementary maintaines a simple version of the &quot;debian&quot; folder that contains all the files we need for packaging. Let's grab a copy of that with bzr:": "Assim como o CMake, o elementary mantém uma versão simples da pasta \"debian\" que contém todos os arquivos que precisamos para o empacotamento. Vamos fazer uma cópia dessa pasta com bzr:",
    "bzr branch lp:~elementary-apps/+junk/debian-template": "bzr branch lp:~elementary-apps/+junk/debian-template",
    "Copy the &quot;debian&quot; folder from that branch into your &quot;hello-packaging&quot; folder.": "Copie a pasta \"debian\" desse ramo e cole dentro de sua pasta \"hello-packaging\"",
    "Open the file called &quot;changelog&quot; and make it look like below:": "Abra o arquivo chamado \"changelog\" e deixe igual abaixo:",
    "hello-packaging (0.1) precise; urgency=low\n\n  * Initial Release.\n\n -- Your Name &lt;you@emailaddress.com&gt;  Tue, 9 Apr 2013 04:53:39 -0500": "hello-packaging (0.1) precise; urgency=low\n\n* Versão Inicial\n\n-- Seu Nome <seu@email.com> Tue, 9 Apr 2013 04:53:39 -0500",
    "The first line contains your app's binary name, version, OS codename, and how urgently your package should be built. Remember that your app's binary name is lowercase and does not contain spaces. After the <code>*</code> is a list of your changes. Finally, you include your name, email address, and the date. For more information about the debian changelog, make sure to read the <a href=\"http://www.debian.org/doc/debian-policy/ch-source.html#s-dpkgchangelog\">documentation</a>.": "A primeira linha contém o nome binário do seu aplicativo, versão, codenome do SO e o quão urgentemente seu aplicativo deve ser construído. Lembre-se que o nome binário do seu aplicativo deve ser em letras minúsculas e não pode conter espaços. Depois de <code>*</code> é uma lista das suas mudanças. Finalmente, você coloca o seu nome, endereço de e-mail, e a data. Para mais informações sobre as revisões do debian, leia a <a href=\"http://www.debian.org/doc/debian-policy/ch-source.html#s-dpkgchangelog\">documentação</a>.",
    "Open the file called &quot;control&quot; and make it look like below:": "Abra o arquivo chamado \"control\" e deixe igual abaixo:",
    "Source: hello-packaging\nSection: x11\nPriority: extra\nMaintainer: Your Name &lt;you@emailaddress.com&gt;\nBuild-Depends: cmake (&gt;= 2.8),\n               debhelper (&gt;= 8.0.0),\n               valac-0.16 | valac (&gt;= 0.16)\nStandards-Version: 3.9.3\n\nPackage: hello-packaging\nArchitecture: any\nDepends: ${misc:Depends}, ${shlibs:Depends}\nDescription: Hey young world\n This is a Hello World written in Vala using CMake build system.": "Source: hello-packaging\nSection: x11\nPriority: extra\nMaintainer: Seu Nome <seu@nome.com>\nBuild-Depends: cmake (>= 2.8),\n               debhelper (>= 8.0.0),\n               valac-0.16 | valac (>= 0.16)\nStandards-Version: 3.9.3\n\nPackage: hello-packaging\nArchitecture: any\nDepends: ${misc:Depends}, ${shlibs:Depends}\nDescription: Olá jovem mundo\n Este é um \"Hello World\" escrito em vala utilizamdo o sistema de contrução CMake.",
    "Open the file called &quot;copyright&quot;. We only need to edit what's up top:": "Abra o arquivo chamado \"copyright\". Nós somente precisamos editar o que esta no topo:",
    "Format: http://dep.debian.net/deps/dep5\nUpstream-Name: hello-packaging\nSource: https://code.launchpad.net/~your-launchpad-id/+junk/hello-packaging\n\nFiles: src/* data/* cmake/* debian/*\nCopyright: 2013 Your Name &lt;you@emailaddress.com&gt;\nLicense: GPL-3.0+": "Format: http://dep.debian.net/deps/dep5\nUpstream-Name: hello-packaging\nSource: https://code.launchpad.net/~your-launchpad-id/+junk/hello-packaging\n\nFiles: src/* data/* cmake/* debian/*\nCopyright: 2013 Seu Nome <seu@nome.com>\nLicense: GPL-3.0+",
    "That wasn't too bad right? We'll set up more complicated packaging in the future, but for now this is all you need. If you'd like you can always read <a href=\"http://www.debian.org/doc/debian-policy/\">more about Debian packaging</a>.": "Não foi tão ruim, certo? Nós iremos abordar um empacotamento mais complexo no futuro, mas por agora isso é tudo o que você precisa. Se você quiser você pode ler <a href=\"http://www.debian.org/doc/debian-policy/\">mais sobre empacotamento Debian</a>.",
    "Launchpad Recipes": "Receitas do Launchpad",
    "Now that we have our &quot;debian&quot; folder in order, it's time to go to launchpad and create a recipe: instructions what code to build, how often to build it, and where to put the resulting packages.": "Agora que você tem nossa pasta \"debian\" em ordem, é hora de ir ao Launchpad e criar uma receita: instruções de qual código compilar, com que frequência fazê-lo, e onde depositar os pacotes resultantes.",
    "<a href=\"https://code.launchpad.net/people/+me/+junk/hello-packaging/+new-recipe\">Click this link</a> or go to Launchpad, find your hello-packaging branch, then select <strong>Create packaging recipe</strong>.": "<a href=\"https://code.launchpad.net/people/+me/+junk/hello-packaging/+new-recipe\">Clique nesse link</a> ou vá para o Launchpad, ache o seu branch do hello-packaging, e então selecione <strong>Create packaging recipe</strong>.",
    "Read through the options available to you. You can go ahead and keep the defaults for Name, Description (it's blank), Owner, Daily builds, and PPA but you can also customize a bit if you'd like.": "Leia as opções disponíveis para você. Você pode ir em frente e manter os padrões para Nome, Descrição (está em branco), Proprietário, Daily builds, e PPA mas você pode também customizar um pouco se quiser.",
    "When you get down to a set of checkboxes with the header &quot;Default distribution series&quot;, make sure you select &quot;Precise&quot;. elementary OS Luna shares it's core with Ubuntu Precise, so packages built on Precise will also work on Luna.": "Quando chegar a um conjunto de caixas com o cabeçalho \"Default distribution series\" certifique de escolher o \"Trusty\". O elementary OS Freya compartilha o seu core com o Ubuntu Trusty, por isso pacotes criados para o Trusty também correm no Freya.",
    "For recipe text, we're going to change it ever so slightly to conform better with the official Debian rules. Change out the first line for this one:": "Para o texto da receita vamos mudá-lo para ficar mais aproximado às regras do Debian. Muda a primeira linha para:",
    "# bzr-builder format 0.3 deb-version {debupstream}+r{revno}-0": "# bzr-builder format 0.3 deb-version {debupstream}+r{revno}-0",
    "Notice that this is ever so slightly different from the default line which includes <code>{debupstream}-0~{revno}</code> instead of <code>{debupstream}+r{revno}-0</code>.": "Note que isso está um puco diferente da linha padrão, na qual aparece <code>{debupstream}-0~{revno}</code> ao invés de <code>{debupstream}+r{revno}-0</code>.",
    "When you're happy with the options you've chosen, select <strong>Create Recipe</strong>.": "Quanto estiver feliz com as suas escolhjas, selecione <strong>Criar Receita</strong>",
    "Now that you've created a recipe, you only have to wait until Launchpad finishes the build! If everything goes as planned, your new PPA will contain a packaged app which other people can install and run with ease. Additionally, anyone using your PPA will be able to get updates for your app if you upload a new version. We'll talk more about how to do that later.": "Agora que criou uma receita, só precisa esperar até que o Launchpad acabe a construção!. Se tudo correr de acordo com o plano, o seu novo PPA vai ter o seu aplicativo empacotado para que qualquer outra pessoa possa usar facilmente. Adicionalmente, qualquer pessoa que use o seu PPA vai receber automaticamente atualizações futuras, assim que você enviar uma nova versão. Falaremos um pouco mais deste tema mais à frente.",
    "Creating Layouts": "Criação de Layouts",
    "Now that you know how to code, build, and distribute an app using Vala, Gtk, CMake, and Launchpad PPAs, it’s time to learn a little bit more about how to build out your app into something really useful. The first thing we need to learn is how to lay out widgets in our window. But we have a fundamental problem: We can only add one widget (one “child”) to <code>Gtk.Window</code>. So how do we get around that to create complex layouts in a Window? We have to add a widget that can contain multiple children. One of those widgets is <code>Gtk.Grid</code>.": "Agora que você já sabe como escrever, compilar e distribuir um aplicativo usando Vala, Gtk, CMake e os PPAs do Launchpad, é hora de aprender um pouco mais sobre como tornar seu aplicativo em algo realmente útil. A primeira coisa que precisamos aprender é como distribuir widgets na nossa janela. Mas nós temos um problema básico: Nós só podemos adicionar um widget (um \"filho\") ao <code>Gtk.Window</code>. Então como fazemos para criar layouts complexos numa Window? Nós temos que adicionar algum widget que possa ter vários filhos. Um desses widget é o <code>Gtk.Grid</code>.",
    "Widgets as Subclasses of Other Widgets": "Widgets como Subclasses de outros Widgets",
    "Before we get into <code>Gtk.Grid</code>, let’s stop for a second and take some time to understand Gtk a little better. At the lower level, Gtk has classes that define some pretty abstract traits of widgets such as <a href=\"http://valadoc.org/#!api=gtk+-3.0/Gtk.Container\"><code>Gtk.Container</code></a> and <a href=\"http://valadoc.org/#!api=gtk+-3.0/Gtk.Orientable\"><code>Gtk.Orientable</code></a>. These aren’t widgets that we’re going to use directly in our code, but they’re used as building blocks to create the widgets that we do use. It’s important that we understand this, because it means that when we understand how to add children to a <code>Gtk.Container</code> like <code>Gtk.Grid</code>, we also understand how to add children to a <code>Gtk.Container</code> like <code>Gtk.Toolbar</code>. Both Grid and Toolbar are widgets that are subclasses of the more abstract class <code>Gtk.Container</code>.": "Antes de falarmos do <code>Gtk.Grid</code>, vamos fazer uma pausa e tirar um tempinho para entender o Gtk um pouco melhor. No nível mais baixo, Gtk tem classes que definem algumas características bem abstratas dos widgets como  <a href=\"http://valadoc.org/#!api=gtk+-3.0/Gtk.Container\"><code>Gtk.Container</code></a> e <a href=\"http://valadoc.org/#!api=gtk+-3.0/Gtk.Orientable\"><code>Gtk.Orientable</code></a>.  Esses não são widgets que vamos usar diretamente no nosso código, mas eles servem como fundamento para criar os widgets que nós vamos usar. É importante entendermos isso, porque significa que quando entendemos como adicionar um filho a um <code>Gtk.Container</code> como o <code>Gtk.Grid</code>, nós também entendemos como adicionar um filho a um <code>Gtk.Container</code> como <code>Gtk.Toolbar</code>. Ambos Grid e Toolbar são widgets que são subclasses da classe mais abstrata <code>Gtk.Container</code>.",
    "If you want to understand more about these widgets and the parts of Gtk that they subclass, jump over to <a href=\"http://valadoc.org/\">Valadoc</a> and search for a widget like <code>Gtk.Grid</code>. See that big tree at the top of the page? It shows you every component of Gtk that <code>Gtk.Grid</code> subclasses and even what those components subclass. Having a lower level knowledge of Gtk will help you to implement widgets you haven’t worked with before since you will understand how their parent classes work.": "Se quiser entender mais sobre esses widgets e as partes do Gtk dos quais eles derivam, dê um pulinho no <a href=\"http://valadoc.org/\">Valadoc</a> e procure por um widget como o <code>Gtk.Grid</code>. Vê aquela árvore enorme no começo da página? Ela mostra que todo componente do Gtk dos quais <code>Gtk.Grid</code> deriva e assim por diante. Conhecer mais profundamente o Gtk vai te ajudar a implementar widgets com os quais você ainda não trabalhou já que você vai entender como as classes dos quais eles derivam funcionam.",
    "Gtk.Grid": "Gtk.Grid",
    "Now that we’ve gotten that out of the way, let’s get back to our Window and <code>Gtk.Grid</code>. Since you’re a master developer now, you can probably set up a new project complete with CMake, push it to Launchpad, and build a PPA in your sleep. If you want the practice, go ahead and do all of that again. Otherwise, it’s probably convenient for our testing purposes to just play around locally and build from Terminal. So code up a nice <code>Gtk.Window</code> without anything in it and make sure that builds. Ready? Let’s add a Grid.": "Já que esclarecemos tudo, vamos voltar para a nossa Window e <code>Gtk.Grid</code>. Agora que você é um super desenvolvedor, você deve conseguir criar um novo projeto completo com o CMake, fazer um push para o Launchpad, e ainda construir um PPA enquanto dorme. Se você quer mais prática, fique à vontade pra fazer tudo isso de novo. Caso contrário, provavelmente é mais conveniente para nossos testes apenas brincar um pouco localmente e compilar no Terminal. Então escreva uma bela <code>Gtk.Window</code> sem nada dentro e se certifique que compila. Pronto? Vamos adicionar uma Grid.",
    "Just like when we add a Button or Label, we need to create our <code>Gtk.Grid</code>. As always, don’t copy and paste! Practice makes perfect. We create a new Gtk.Grid like this:": "Assim como quando nós adicionamos um Button ou Label, nós precisamos criar nosso <code>Gtk.Grid</code>. Como sempre, não copie e cole! A prática leva à perfeição! Nós criamos um novo Gtk.Grid assim:",
    "var grid = new Gtk.Grid ();\ngrid.orientation = Gtk.Orientation.VERTICAL;": "var grid = new Gtk.Grid ();\ngrid.orientation = Gtk.Orientation.VERTICAL;",
    "Remember that Button and Label accepted an argument (a String) in the creation method (that’s the stuff in parentheses and quotes). As shown above, <code>Gtk.Grid</code> doesn’t accept any arguments in the creation method. However, you can still change the grid’s properties (like <a href=\"http://valadoc.org/#!api=gtk+-3.0/Gtk.Orientation\">orientation</a>) as we did on the second line. Here, we’ve declared that when we add widgets to our grid, they should stack vertically.": "Lembre que Button e Label aceitaram um argumento (uma String) no método de criação (aquele negócio entre parêntesis e aspas). Como você pode ver, <code>Gtk.Grid</code> não aceita argumentos no método de criação. Entretanto, você ainda pode mudar as propriedades da grade (como <a href=\"http://valadoc.org/#!api=gtk+-3.0/Gtk.Orientation\">orientation</a>) como fizemos na segunda linha. Aqui, nós declaramos que quando adicionamos widgets à nossa grade, elas devem ser empilhadas verticalmente.",
    "Let’s add some stuff to the Grid:": "Vamos adicionar algumas coisas ao Grid:",
    "grid.add (new Gtk.Label (\"Label 1\"));\ngrid.add (new Gtk.Label (\"Label 2\"));": "grid.add (new Gtk.Label (\"Label 1\"));\ngrid.add (new Gtk.Label (\"Label 2\"));",
    "Super easy stuff, right? We can add the grid to our window using the same method that we just used to add widgets to our grid:": "Coisas supres fáceis, certo? Nós podemos adicionar ao grid para sua janela usando o mesmo método que nós acabamos de usar para adicionar widgets para seu Grid:",
    "this.add (grid);": "this.add (grid);",
    "Now build your app and see what it looks like. Since we’ve given our grid a <code>Gtk.Orientation</code> of <code>VERTICAL</code> the labels stack up on top of each other. Try creating a <code>Gtk.Grid</code> without giving it an orientation. By default, <code>Gtk.Grid</code>’s orientation is horizontal. You really only ever have to give it an orientation if you need it to be vertical.": "Agora compile o seu app e veja como fica. Já que demos à nossa grade uma <code>Gtk.Orientation</code> <code>VERTICAL</code> os rótulos se empilham um em cima do outro. Tente criar uma <code>Gtk.Grid</code> sem passar uma orientação. Por padrão, a orientação da <code>Gtk.Grid</code> é horizontal. Você só precisa passar mesmo uma orientação se precisar que ela seja vertical.",
    "Functionality in Gtk.Grid": "Funicionalidade no Gtk.Grid",
    "Okay, so you know all about using a <code>Gtk.Grid</code> to pack multiple children into a Window. What about using it to lay out some functionality in our app? Let’s try building an app that shows a message when we click a button. Remember in our first “Hello World” how we changed the label of the button with <code>button.clicked.connect</code>? Let’s use that method again, but instead of just changing the label of the button, we’re going to use it to change an empty label to a message.": "OK, então você sabe tudo de como usar uma <code>Gtk.Grid</code> para agrupar vários filhos dentro de uma Window. Que tal usá-la para adicionar alguma funcionalidade no nosso app? Vamos tentar construir um app que mostra uma mensagem quando nós clicamos num botão. Lembra como no nosso primeiro \"Hello World\" nós mudamos o rótulo do botão com <code>button.clicked.connect</code>? Vamos usar esse método de novo, mas ao invés de apenas mudar o rótudlo do botão, nós vamos usá-lo para tornar um rótulo vazio em uma mensagem.",
    "Let’s create a Window with a vertical Grid that contains a Button and a Label:": "Vamos criar uma janela (Window) com uma grade (Grid) vertical que contém um botão (Button) e um rótulo (Label):",
    "var grid = new Gtk.Grid ();\ngrid.orientation = Gtk.Orientation.VERTICAL;\ngrid.row_spacing = 6;\n\nvar button = new Gtk.Button.with_label (\"Click me!\");\nvar label = new Gtk.Label (null);\n\ngrid.add (button);\ngrid.add (label);\n\nthis.add (grid);": "var grid = new Gtk.Grid ();\ngrid.orientation = Gtk.Orientation.VERTICAL;\ngrid.row_spacing = 6;\n\nvar button = new Gtk.Button.with_label (\"Click me!\");\nvar label = new Gtk.Label (null);\n\ngrid.add (button);\ngrid.add (label);\n\nthis.add (grid);",
    "This time when we created our grid, we gave it another property: <code>row_spacing</code>. We can also add <code>column_spacing</code>, but since we’re stacking widgets vertically we’ll only see the effect of <code>row_spacing</code>. Notice how we can create new widgets outside the grid and then pack them into the grid by name. This is really helpful when you start using different methods to change the properties of your widgets.": "Dessa vez quando nós criamos nossa grade, passamos outra propriedade: <code>row_spacing</code>. Nós também podemos adicionar <code>column_spacing</code>, mas como estamos empilhando widgets verticalmente só podemos ver os efeitos de <code>row_spacing</code>. Note como nós podemos criar novos widgets fora da grade e então adicioná-las à grade pelo nome. Isso é bem útil quando você começa a usar métodos diferentes para mudar as propriedades dos seus widgets.",
    "Now, let’s hook up the button to change that label. To keep our code logically separated, we’re going to add it below <code>this.add (grid);</code>. In this way, the first portion of our code defines the UI and the next portion defines the functions that we associated with the UI:": "Agora, vamos fazer o botão mudar aquela etiqueta. Pata manter nosso código separado de maneira lógica, vamos fazer isso após <code>this.add (grid);</code>. Dessa forma, a primeira parte do nosso código define a interface do usuário e a segunda parte define as funções que nós associamos à interface:",
    "button.clicked.connect (() =&gt; {\n    button.label = \"Hello World!\";\n    button.sensitive = false;\n});": "button.clicked.connect (() => {\nlabel.label = \"Hello World!\";\nbutton.sensitive = false;\n});",
    "Remember, we set the button as insensitive here because clicking it again has no effect. Now compile your app and marvel at your newfound skills. Play around with orientation and spacing until you feel comfortable.": "Lembre-se, nós ajustamos o botão como insensível aqui, pois clicando nele novamente não terá efeito. Agora compile seu aplicativo e se maravilhe com suas novas habilidades. Utilize a orientação e espaçamento até que você se sinta confortável.",
    "The Attach Method": "O Método Attach",
    "While we can use <code>Gtk.Grid</code> simply to create single row or single column layouts with the add method, we can also use it to create row-and-column-based layouts with the <code>attach</code> method. First we’re going to create a new <code>Gtk.Grid</code> and set both column and row spacing, then we’ll create all the widgets we want to attach to our grid, and finally we’ll attach them.": "Enquanto podemos usar <code>Gtk.Grid</code> simplesmente para criar uma única linha ou uma única coluna com o método add, nós podemos também usá-lo para criar layouts baseados em linhas e colunas com o método <code>attach</code>. Primeiro vamos criar um novo <code>Gtk.Grid</code> e configurar o espaçamento de ambas as linhas e colunas, então vamos criar todos os widgets que queremos anexar ao nosso grid, a finalmente vamos anexá-los.",
    "var layout = new Gtk.Grid ();\nlayout.column_spacing = 6;\nlayout.row_spacing = 6;\n\nvar hello_button = new Gtk.Button.with_label (\"Say Hello\");\nvar hello_label = new Gtk.Label (null);\n\nvar rotate_button = new Gtk.Button.with_label (\"Rotate\");\nvar rotate_label = new Gtk.Label (\"Horizontal\");": "var layout = new Gtk.Grid ();\nlayout.column_spacing = 6;\nlayout.row_spacing = 6;\n\nvar hello_button = new Gtk.Button.with_label (\"Say Hello\");\nvar hello_label = new Gtk.Label (null);\n\nvar rotate_button = new Gtk.Button.with_label (\"Rotate\");\nvar rotate_label = new Gtk.Label (\"Horizontal\");",
    "Make sure to give the Grid, Buttons, and Labels unique names that you’ll remember. It’s best practice to use descriptive names so that people who are unfamiliar with your code can understand what a widget is for without having to know your app inside and out.": "Certifique-se de dar ao Grid, Buttons e Labels nomes únicos que você se lembre. O indicado seria usar nomes descritivos de modo que quem não seja familiar ao seu código possa entender para o que cada widget serve sem ter que conhecer seu app por dentro e por fora.",
    "// add first row of widgets\nlayout.attach (hello_button, 0, 0, 1, 1);\nlayout.attach_next_to (hello_label, hello_button, Gtk.PositionType.RIGHT, 1, 1);\n\n// add second row of widgets\nlayout.attach (rotate_button, 0, 1, 1, 1);\nlayout.attach_next_to (rotate_label, rotate_button, Gtk.PositionType.RIGHT, 1, 1);\n\nthis.add (layout);": "// adiciona primeira linha de widgets\nlayout.attach (hello_button, 0, 0, 1, 1);\nlayout.attach_next_to (hello_label, hello_button, Gtk.PositionType.RIGHT, 1, 1);\n\n// adiciona a segunda linha de widgets\nlayout.attach (rotate_button, 0, 1, 1, 1);\nlayout.attach_next_to (rotate_label, rotate_button, Gtk.PositionType.RIGHT, 1, 1);\n\nthis.add (layout);",
    "Notice that the attach method takes 5 arguments:": "Observe que esse anexo precisa de 5 agumentos:",
    "The widget that you want to attach to the grid.": "O widget que você quer adicionar ao grid.",
    "The column number to attach to starting at 0.": "O numero da coluna para anexar começa no 0.",
    "The row number to attach to starting at 0.": "O numero da linha para anexar começa no 0.",
    "The number of columns the widget should span.": "O número das colunas dos widgets deveriam ser span",
    "The number of rows the widget should span.": "O número das linhas do widgets devem ser span.",
    "You can also use <code>attach_next_to</code> to place a widget next to another one on <a href=\"http://references.valadoc.org/#!api=gtk+-3.0/Gtk.PositionType\">all four sides</a>. Don’t forget to add the functionality associated with our buttons:": "Você também pode usar <code>attach_next_to</code>para posicionar um widget próximo a outro em <a href=\"http://references.valadoc.org/#!api=gtk+-3.0/Gtk.PositionType\">todos os quatro lados</a>.\nNão esqueça de adicionar a funcionalidade relacionada aos nossos botões:",
    "hello_button.clicked.connect (() =&gt; {\n    hello_label.label = \"Hello World!\";\n    hello_button.sensitive = false;\n});\n\nrotate_button.clicked.connect (() =&gt; {\n    rotate_label.angle = 90;\n    rotate_label.label = \"Vertical\";\n    rotate_button.sensitive = false;\n});": "hello_button.clicked.connect (() => {\n    hello_label.label = \"Hello World!\";\n    hello_button.sensitive = false;\n});\n\nrotate_button.clicked.connect (() => {\n    rotate_label.angle = 90;\n    rotate_label.label = \"Vertical\";\n    rotate_button.sensitive = false;\n});",
    "You’ll notice in the example code above that we’ve created a 2 x 2 grid with buttons on the left and labels on the right. The top label goes from blank to “Hello World!” and the button label is rotated 90 degrees. Notice how we gave the buttons labels that directly call out what they do to the other labels.": "Isso é um exemplo de código que podemos criar numa grade 2x2 com botões na esquerda e textos na direita. O texto do topo vai do branco para \"Olá Mundo!\" e o texto dos botões irão rotacionar em 90 graus. Avisamos como nós demos ao título do bolão a direção para fora que eles fazem para outros textos.",
    "Let’s recap what we learned in this section:": "Vamos recapitular o que nós aprendemos nesta sessão:",
    "We learned about the building blocks of Gtk and the importance of subclasses": "Nós aprendemos sobre como construir blocos do Gtk e a importância das subclasses",
    "We packed multiple children into a Window using <code>Gtk.Grid</code>": "nós empacotamos múltiplos filhos dentro a Janela usando <code>Gtk.Grid</code>",
    "We set the properties of <code>Gtk.Grid</code> including its orientation and spacing": "Nós setamos propriedades do <code>Gtk.Grid</code> incluindo a orientação e espaçamento",
    "We added multiple widgets into a single Gtk.Grid using the attach method to create complex layouts containing Buttons and Labels that did cool stuff.": "Nós adicionamos múltiplos widgets dentro de somente um Gtk.Grid usando o método te anexar para criar layouts complexos contendo Botões e Labels que fazem coisas legais.",
    "Now that you understand more about Gtk, Grids, and using Buttons to alter the properties of other widgets, try packing other kinds of widgets into a window like a Toolbar and changing other properties of <a href=\"http://valadoc.org/#!api=gtk+-3.0/Gtk.Label\">Labels</a> like <code>width_chars</code> and <code>ellipsize</code>. Don’t forget to play around with the attach method and widgets that span across multiple rows and columns. Remember that Valadoc is super helpful for learning more about the methods and properties associated with widgets.": "Agora que você aprendeu mais sobre Gtk, Grids e o uso de botões para alterar as propriedades de outros widgets, tente agrupar outros tipos de widgets em uma janela como uma Toolbar e modificar outras propriedades de <a href=\"http://valadoc.org/#!api=gtk+-3.0/Gtk.Label\">Labels</a> como <code>width_chars</code> e <code>ellipsize</code>.",
    "Next Page:": "Próxima Página:",
    "Reference": "Referência"
}