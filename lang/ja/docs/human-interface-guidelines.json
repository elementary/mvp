{
    "Human Interface Guidelines": "ヒューマンインターフェースガイドライン",
    "These guidelines are designed to help developers and designers create a beautifully consistent experience on the elementary desktop. They were written for interface designers, graphic artists and software developers who will be working on elementary OS. They will not only define specific design elements and principles, but will also instill a philosophy that will allow you to decide when it is appropriate to deviate from the Guidelines. Adhering to the suggestions contained here will provide many benefits:": "このガイドラインは elementary OS 向けのソフトウェア開発者や、インターフェイスデザイナー、グラフィックスアーティスト向けに書かれた、 elementary にふさわしい美しいUXを設計するための指南書です。ここではデザインの部品や要素に関して細かい例を示すことはせず、よりよいデザインを設計し選択するときに役に立つ設計思想を示しています。このガイドラインに従ってデザインすることにより、以下のような利点が生まれます:",
    "Users will learn to use your application faster because it shares common elements that they are already familiar with.": "ユーザーがすでに慣れ親しんでいる共通の要素を共有するため、ユーザーはアプリケーションの使い方をより早く学びます。",
    "Users will accomplish tasks more quickly because you will have a straight-forward interface design that isn't confusing or difficult.": "混乱や難しさのない、簡単なインターフェースを提供できるため、ユーザーはより迅速にタスクを達成することができます。",
    "Your application will appear native to the desktop and share the same elegant look as default applications.": "アプリケーションはデスクトップにネイティブ表示され、標準のアプリケーションと同じエレガントな外観を共有します。",
    "Your application will be easier to document because an expected behavior does not require explanation.": "予期される動作は説明を必要としないため、アプリケーションのドキュメント化が容易になります。",
    "The amount of support you will have to provide, including bugs filed, will be lessened (for the reasons above).": "(上に示した理由により) バグ報告含む、提供しなければならないサポートの量を減らすことができます。",
    "To help you achieve these goals, these guidelines will cover basic interface elements, how to use them and put them together effectively, and how to make your application integrate well with the desktop. The most important thing to remember is that following these guidelines will make it easier to design a new application, not harder.": "これらの目標を達成するのを助けるために、ここにあるガイドラインでは、基本的なインターフェース要素とそれらの使い方や効果的なまとめ方、アプリケーションをデスクトップへうまく統合する方法を扱います。覚えておくべき最も重要なことは、ガイドラインに従うことはアプリケーションのデザインを、難しくするのではなく、簡単にするということです。",
    "However, keep in mind that this is a guideline, not a rulebook. New, amazing interaction paradigms appear every day and more are waiting to be discovered. This is a living document that can and will be changed.": "しかしながら、これは、ルールブックではなく、ガイドラインであるということに留意してください。新しい、驚くべきインタラクションのパラダイムが日々登場し、また、発見されるのを待っています。これは、変更することができる、変更される、生きた文書です。",
    "For sections that have not yet been written, please refer to": "まだ書かれていないセクションについては、リンクを参照してください。",
    "The GNOME HIG": "GNOME ヒューマンインターフェースガイド",
    "Design Philosophy": "デザイン思想",
    "The elementary HIG isn't just about a set of concrete rules; it's meant to be flexible and extensible. As such, this very first portion of the guideline is all about the guiding philosophy we employ. For a quick crash course, we like &quot;The User is Drunk&quot;:": "elementary ヒューマンインターフェースガイドラインは絶対の規則ではなく、柔軟でさまざまな応用が可能なものであるのが望ましいのです。そこでまず、ここガイドラインのはじめに我々が採用しているデザインの方針の根幹を示すことにします。端的に言えば、「ユーザーは酔っ払っていると思え」というものです。",
    "What Design Is Not": "悪いデザインの例",
    "Before we get into all the things that make up elementary apps, there is a clarification that needs to be made. We need to understand what exactly design is about, but more importantly we want to smash two major myths:": "elementary のアプリを構成するすべてのものに入る前に、明確にしておく必要があることがあります。我々は正確なデザインとは何かを理解する必要がありますが、もっと重要なことは我々は二つの主要な神話を粉砕したいと思います:",
    "<strong>Design is not something you add on after you've completed a product.</strong> Whether you realize it or not, you are constantly designing anything you build. It is an intrinsic part of creating something. Design is not just what something looks like. It's not just the colors and fonts. Design is how it works. When you decide to add a button that does a thing, that is design. You made a decision to add a button with an icon or a label and where that button went and the size and color of that button. Decisions are designs.": "<strong>デザインとは製品が完成したあとで付け足す何かではありません。</strong> あなたがそれに気づいているかどうかに関わらず、あなたは常にあなたが構築するものをデザインしています。それは何かを作成するための本質的な部分です。デザインは、何かの見えるものだけではありません。ただの色とフォントではありません。デザインとはどのように動作するかです。あなたが何かをするボタンを追加することを決めたとき、それはデザインです。あなたはボタンの追加、そのボタンのアイコンやラベル、そのボタンの場所とサイズや色を決めました。決定はデザインです。",
    "<strong>Design is not just, like, your opinion, man.</strong> Design is testable. One design will meet a specific goal better than another design. Consider different types of bicycles. A folding bicycle has a different set of design goals than a mountain bicycle. Things like weight, size, and tire tread are important factors in helping the intended user reach their goals. Because we understand that design is about solving specific problems, we must also understand that we can objectively compare the effectiveness of two designs at solving those problems.": "<strong>デザインはただの好み、あなたの意見ではありません。</strong>デザインはテスト可能です。一つのデザインは、別のデザインよりも特定の目標をより良く達成します。自転車の種類を考えてみましょう。折りたたみ自転車はマウンテンバイクよりとは異なる設計目標を持っています。重量、サイズ、タイヤトレッドのようなものは意図したユーザーが目標を達成するうえで重要な要素です。我々はデザインが特定の問題を解決することであること理解しているので、我々が客観的にこれらの問題を解決するために2つのデザインの有効性を比較することができることも理解する必要があります。",
    "Design Is Not Veneer, Aral Balkan": "Design Is Not Veneer, Aral Balkan",
    "Design is Not Subjective, Jeff Law": "Design is Not Subjective, Jeff Law",
    "Concision": "簡潔さ",
    "Always work to make your app instantly understandable. The main function of your app should be immediately apparent. You can do this in a number of ways, but one of the best ways is by sticking to a principal of concision.": "常にあなたのアプリがすぐに理解できるように努めてください。アプリの主な機能はすぐに明らかにすべきです。あなたはいくつかの方法でこれを行うことができますが、最善の方法の一つは、簡潔さの原則を守ることです。",
    "Avoid Feature Bloat": "機能の肥大化を避ける",
    "It's often very tempting to continue adding more and more features into your application. However, it is important to recognize that every new feature has a price. Specifically, every time you add a new feature:": "アプリケーションにより多くの機能を追加し続けることはしばしば非常に魅力的です。しかし、すべての新しい機能が価格を持っていることを認識することが重要です。具体的には、新しい機能を追加するたびに:",
    "Your application gets slower, consumes more resources, and takes up more disk space.": "アプリは遅くなり、より多くのリソースを消費し、より多くのディスクスペースを取ります。",
    "Your application's interface becomes more cluttered and thus harder to use.": "アプリのインターフェイスは、より雑然となり使用することが難しくなります。",
    "More time is spent implementing this new feature, rather than perfecting an old feature.": "より多くの時間が、既存の機能の完成にではなく、新しい機能の実装に費やされます。",
    "More code can often mean a greater possibility for bugs.": "より多くのコードは、多くの場合、より大きなバグの可能性を意味します。",
    "More features means more work on documentation, translations, etc.": "より多くの機能は、より多くのドキュメント化や翻訳などの作業を意味します。",
    "Think in Modules": "モジュールで考える",
    "Build small, modular apps that communicate well. elementary apps avoid feature overlap and make their functions available to other apps either through <a href=\"#contractor\">Contractor</a> or over <a href=\"http://www.freedesktop.org/wiki/Software/dbus\" title=\"View D-Bus docs from FreeDesktop.Org\">D-Bus</a>. This both saves you time as a developer (by other apps making their functions available to you), and is a courteous gesture towards other developers (by making your app's functions available to them).": "小さな、うまくコミュニケーションするモジュール化されたアプリを作成してください。 elementary のアプリは機能の重複を避け、そのアプリの機能を <a href=\"#contractor\">Contractor</a> や <a href=\"http://www.freedesktop.org/wiki/Software/dbus\" title=\"View D-Bus docs from FreeDesktop.Org\">D-Bus</a> を通して他のアプリが利用できるようにします。これらは開発者としてのあなたの時間を節約し(他のアプリがその機能をあなたが使えるようにすることによって)、他の開発者に対する丁寧な行為です(あなたのアプリの機能を他の開発者が使えるようにすることによって)。",
    "Avoid Configuration": "設定を避ける",
    "If possible, completely avoid presenting any settings or configuration in your app. Providing settings is usually an easy way out of making design decisions about an app's behavior. But just like with problems of feature bloat, settings mean more code, more bugs, more testing, more documentation, and more complexity.": "可能な場合、アプリ内に任意の設定や構成を提示することを徹底的に避けてください。設定を提供することは通常アプリの動作に関するデザインを決定する簡単な方法です。しかし、機能の肥大化の問題と同じように、設定はより多くのコード、より多くのバグ、より多くのテスト、より多くの文書化、および複雑さを意味します。",
    "Build for the &quot;Out of The Box&quot; Experience": "\"すぐに使える\" 体験の構築",
    "Design with sane defaults in mind. elementary apps put strong emphasis on the out of the box experience. If your app has to be configured before a user is comfortable using it, they may not take the time to configure it at all and simply use another app instead.": "心のなかの健全なデフォルトでデザインしてください。 elementary のアプリはすぐに使える体験に重点をおきます。もしユーザーがアプリを快適に使う前に設定が必要な場合、ユーザーはそれを設定する時間を全く取らずに単に別のアプリを代わりに使うかもしれません。",
    "Ask the Operating System": "オペレーティングシステムに尋ねる",
    "Get as much information automatically as possible. Instead of asking a user for their name or their location, ask the system for this information. This cuts down on the amount of things a user has to do and makes your app look intelligent and integrated.": "できる限り自動的に多くの情報を取得してください。ユーザーに自分の名前やその場所を尋ねるかわりに、システムにこの情報を訪ねてください。これは、ユーザーがやらなければならないことの量を削減し、アプリがインテリジェントで統合されているように見せます。",
    "Do You Really Need It?": "あなたはそれが本当に必要ですか？",
    "Ask yourself if the configuration option you are adding is really necessary or makes sense to a user. Don't ever ask users to make engineering or design decisions.": "設定オプションが本当に必要なのか、ユーザーの理にかなっているか、自問してみてください。エンジニアリングやデザインの意思決定をユーザーに依頼しないでください。",
    "When You Absolutely Have To": "絶対にしなければならない場合",
    "Keep things contextual. Instead of tucking away preferences in a configuration dialog, think about displaying them in context with the objects they affect (much like how shuffle and repeat options appear near your music library).": "物事の文脈を保ってください。設定ダイアログの中にで好みの設定をしまい込むのではなく、彼らが影響を与えるオブジェクトに関連して、それらを表示することを考えてください (シャッフルやリピートオプションがミュージックライブラリの近くに表示されるかのように)。",
    "If your app needs to be configured before it can be used (like a mail client), present this configuration inside the main window much like a <a href=\"#welcome-screen\">Welcome Screen</a>. Once again, make sure this is really necessary set-up. Adding unnecessary configuration screens stops users from doing what they wanted to do when they opened your app in the first place.": "アプリを使えるようにする前に設定が必要な場合 (メールクライアントのように) 、この設定は <a href=\"#welcome-screen\">ようこそ画面</a> のようなメインウィンドウの中に出してください。もう一度、これは本当に必要なセットアップであることを確認してください。不必要な設定画面を追加すると、ユーザーがそもそもアプリを開いたときにユーザーがやりたかったことをすることを止めてしまいます。",
    "See Also:": "関連項目:",
    "<a href=\"http://limi.net/checkboxes-that-kill\">Checkboxes That Kill Your Product</a> by Alex Limi": "<a href=\"http://limi.net/checkboxes-that-kill\">Checkboxes That Kill Your Product</a> by Alex Limi",
    "<a href=\"http://zachholman.com/posts/shit-work/\">Don't Give Your Users Shit Work</a> by Zach Holman": "<a href=\"http://zachholman.com/posts/shit-work/\">Don't Give Your Users Shit Work</a> by Zach Holman",
    "<a href=\"http://stef.thewalter.net/installer-anti-pattern.html\">The Wizard Anti-Pattern</a> by Stef Walter": "<a href=\"http://stef.thewalter.net/installer-anti-pattern.html\">The Wizard Anti-Pattern</a> by Stef Walter",
    "Minimal Documentation": "最小限のドキュメント",
    "Most users don't want to read through help docs before they can use your app. Instead, they expect that your app will be intuitive and simple for them to understand without assistance.": "ほとんどのユーザーは、アプリを使うことができるようになる前に、ヘルプドキュメントを最初から終わりまで読みたくありません。その代わりに、彼らはアプリが支援なしに理解できるよう直感的でシンプルになることを期待しています。",
    "Use Understandable Copy": "理解可能なコピーを使う",
    "Avoid technical jargon and assume little-to-no technical knowledge. This allows your app to be &quot;self-documenting.&quot;": "専門用語をさけ、技術的な知識がほとんど全く無いと仮定してください。これはあなたのアプリを \"自己文書化\" することを可能にします。",
    "Provide non-technical explanations instead of cryptic error messages. If something goes wrong, a simplified explanation of what happened and how to fix it should be presented. ": "不可解なエラーメッセージの代わりに非技術的な説明を提供してください。何かがうまくいかない場合は、何が起こったのかの簡単な説明とそれを修正する方法を提示するべきです。",
    "For more information, see <a href=\"#writing-style\">Writing Style</a>.": "詳細については、<a href=\"#writing-style\">ライティングスタイル</a>を参照してください。",
    "User Workflow": "ユーザーワークフロー",
    "Visible design is a large part of the user experience, but so is the user's workflow, or how they interact with an app. In this section, we cover a few important steps of a typical workflow:": "目に見えるデザインは、ユーザーエクスペリエンスの大きなパートですが、ユーザーのワークフロー、またはアプリとどのように相互作用するのかも同様です。このセクションでは、一般的なワークフローのいくつかの重要なステップをカバーします:",
    "<strong>First-Launch Experience</strong>: What the user sees the first time they use your app.": "<strong>初回起動体験</strong>: ユーザーがあなたのアプリを使う最初の1回目に何を見るのか",
    "<strong>Normal Launch</strong>: What happens when opening your app on a day-to-day basis.": "<strong>通常の起動</strong>: 日々アプリを開いたときに何が起こるのか",
    "<strong>Closing</strong>: What happens when closing your app.": "<strong>閉じる</strong>: アプリを閉じるするときに何が起こるのか",
    "<strong>Background Tasks</strong>: How your app manages to do things invisibly in the background.": "<strong>バックグラウンドタスク</strong>: バックグラウンドで目に見えないことをするためにアプリがどのように管理するのか",
    "First-Launch Experience": "初回起動体験",
    "Required Configuration": "必要な設定",
    "When a user first launches an app, they should be able to get down to business as quickly as possible. If configuration is not absolutely required for the first use, they should not be required to configure anything. If configuration is required (like in Postler), they should be presented with a clean and simple <a href=\"#welcome-screen\">welcome screen</a> within the app (again, like Postler). Avoid separate configuration dialogs when launching.": "ユーザーが初めてアプリを起動したとき、ユーザーはできる限り迅速に仕事に取り掛かることができるべきです。もし設定が最初の使用のために絶対に必要ではない場合、何も設定する必要がないようにしてください。設定が必要な場合 (メーラーのように) 、アプリ内で(再び、メーラーのように)、クリーンでシンプルな <a href=\"#welcome-screen\">ようこそ画面</a> を提示するべきです。起動時の分離された設定ダイアログは避けてください。",
    "Speed of Launch": "起動の速さ",
    "Your app's first launch is the user's first impression of your app; it's a chance to really show off its design and speed. If your app has to configure things in the background before visibly launching, it gives the user the impression that the app is slow or will take a long time to start up. Instead, focus on making the application window appear fast and ready to be used, then do any background tasks behind the scenes. If the background task is blocking (ie. the user is unable to perform certain tasks until it's complete), show some type of indication that a background process is happening and make the blocked user interface items insensitive (see: <a href=\"#widget-concepts\">Widget Concepts</a>).": "アプリの初回起動は、アプリに対するユーザーの最初の印象となります。それは本当に、そのデザインとスピードを披露するチャンスです。あなたのアプリが目に見えて起動する前に、バックグラウンドで何かを設定する必要がある場合、それは、ユーザーにアプリが遅いか、起動に時間がかかるという印象を与えます。その代わりに、アプリケーションウィンドウを高速に表示することと使える準備をすることに注力し、その後、任意のバックグランドタスクを舞台裏で実行してください。バックグラウンドタスクがブロックする (例. それが完了するまで、ユーザーは特定のタスクを実行することができない) 場合、バックグラウンドプロセスが起こっていることを何かしら表示し、ブロックされたユーザー・インターフェース項目が反応しないようにしてください。(参照: <a href=\"#widget-concepts\">ウィジェットコンセプト</a>)",
    "Welcoming the User": "ユーザーを歓迎",
    "If there is no content to show the user, provide actions they can act upon by using a simple <a href=\"#welcome-screen\">welcome screen</a>. Allow them to open a document, add an account, import a CD, or whatever makes sense in the context of the app.": "ユーザに表示するコンテンツが無い場合は、シンプルな<a href=\"#welcome-screen\">ようこそ画面</a>を使用して、アプリが行動可能なアクションを提供します。ユーザーに、ドキュメントを開く、アカウントの追加、CDのインポート、またはアプリのコンテキストの中で有意義なものは何でもさせてください。",
    "Resetting the App": "アプリをリセット",
    "If a user explicitly &quot;resets&quot; the app (ex. by deleting all songs in a music library or removing all mail accounts in a mail client), it should return to its first-launch state.": "ユーザーが明示的にアプリを「リセット」した場合 (例: ミュージックライブラリ内のすべての曲を削除するか、メールクライアント内のすべてのメールアカウントを削除することによって)、そのアプリは初回起動時の状態に戻るべきです。",
    "Normal Launch": "通常の起動",
    "When a user launches an app, they're performing an explicit action and expecting a fast, oftentimes immediate response. You should focus on three key areas for app launching: speed, obviousness of what to do next, and state.": "ユーザーがアプリを起動するとき、ユーザーは明示的なアクションを実行し、高速でしばしば即時応答を期待しています。アプリの起動について3つの主要なエリアに焦点をあてるべきです: スピード、次の何をすべきかの自明性、および状態。",
    "Speed": "スピード",
    "As has been said before, speed, especially when launching an app, is very important. There should be as little delay as possible in between the time a user decides to launch an app and the instant they can begin using it. If your app requires a splash screen, you're doing it wrong.": "前にも言ったとおり、スピード、特にアプリを起動するとき、は非常に重要です。ユーザーがアプリを起動することを決めたときからユーザーがそれを使うことを始められる瞬間までの間の遅延はできる限り小さくするべきです。アプリがスプラッシュスクリーンを要する場合、それは間違ったことをやっています。",
    "Obviousness": "自明性",
    "When a user launches your app, they should know exactly what to do next. This is achieved by following the other interface guidelines (ensuring your app is consistent with other apps) and by offering up explicit actions from the get go. If the app typically displays &quot;items,&quot; such as songs or emails, let the user get at those items by displaying them when the app opens. If there are no previously-opened items, you should offer to open or create a new item (such as a document) by using a <a href=\"#welcome-screen\">welcome screen</a>.": "ユーザーがアプリを起動したとき、ユーザーは正確に次に何をすべきかをわかっているべきです。これは、他のインターフェースガイドラインに従うこと (あなたのアプリを他のアプリと確実に一致させること) と最初から明示的なアクションを提供することで達成されます。アプリが、曲やEメールのような \"項目\" を表示する場合、アプリが開いたときにそれらを表示することでユーザーにそれらの項目を取得させてください。以前に開かれた項目が全くない場合、<a href=\"#welcome-screen\">ようこそ画面</a>を使って、開くや新しい項目の作成（ドキュメントのように）を提供する必要があります。",
    "State": "状態",
    "If the user has previously used your app, it's typically best to restore the state of the app when opening it again. This means the app comes up to right where the user left off so they can pick up their work again. For a music player, this means opening up with the view where the user left it and the song paused where the user closed the app. For a document editor, this would mean opening up with the same document scrolled to the same spot with the cursor in the same spot on the page.": "ユーザーが以前にアプリを使用している場合、それを再度開くときにアプリの状態を復元することが一般的には最も良いことです。これは、ユーザーが再び自分の仕事をまた始めることができるように、アプリがユーザーが止めたところに戻ってくることを意味します。ミュージックプレーヤーの場合、これは、ユーザーが止めたところ、アプリを閉じたときに曲を一時停止したところのビューで開くことを意味します。文書エディタの場合、これは、同じドキュメントで同じ場所にスクロールし、ページ上の同じ場所にカーソルがある状態で開くことを意味します。",
    "Always Provide An Undo": "常に元に戻すを提供する",
    "Sometimes a user will perform an action which could possibly be destructive or traditionally irreversible. Rather than present the user with a warning, apps should allow the user to undo the action for an appropriate amount of time. Some prime examples of when this behavior is useful are:": "時々、ユーザーは破壊的または伝統的に取り消しできない可能性があるアクションを実行します。ユーザーに警告を提示するよりも、アプリは適切な時間の間はユーザーに元に戻すことができるようにするべきです。この動作が役に立つときのいくつかの主な例は次のとおりです:",
    "<strong>Closing an app</strong>. Rather than warning the user, automatically save their work and the app's state so they can return exactly where they left off. See <a href=\"#closing\">Closing</a>.": "<strong>アプリを閉じる</ strong>。ユーザーに警告するよりも、ユーザーがやめたところに正確に戻ってこれるよう、自動的に作業内容やアプリの状態を保存してください。<a href=\"#closing\">閉じる</a>を参照してください。",
    "<strong>Deleting an item</strong>. Instead of asking the user if they are sure, make the item &quot;disappear&quot; from the app, but provide an easy and intuitive way to undo the delete.": "<strong>項目の削除</strong>。ユーザーに本当なのかを確認する代わりに、その項目をアプリから \"見えなく\" して、しかし、削除を元に戻すための簡単で直感的な方法を提供してください。",
    "<strong>Sending an email</strong>. Rather than asking the user if they want to send an email, allow them to undo or edit the message a short time after &quot;sending.&quot;": "<strong>Eメールの送信</strong>。ユーザーにEメールを送信したいのかを尋ねる代わりに、\"送信\" 後の少しの間、そのメッセージを取り消したりまたは編集できるようにしてください。",
    "<strong>Editing a photo</strong>. Instead of asking the user if they want to destructively apply an edit, allow them to undo the edit and always keep the original backed up.": "<strong>写真の編集</strong>。ユーザーに破壊的な編集の適用を尋ねる代わりに、編集を元に戻すことができるようにして、常にオリジナルがバックアップされるようにしてください。",
    "This behavior should only as a last resort be implemented by providing a buffer time between when the app shows the user what happened and actually performing the action. To keep the experience responsive, the app should always look as if it performed the action as soon as the user initiates it. ": "This behavior should only as a last resort be implemented by providing a buffer time between when the app shows the user what happened and actually performing the action. To keep the experience responsive, the app should always look as if it performed the action as soon as the user initiates it.",
    "This behavior strikes the best balance of keeping out of the user's way while making sure they don't do something unintended. It's important to keep the undo action unobtrusive yet simple and intuitive; a common way of doing so is by using an info bar, though other methods may also be appropriate.": "This behavior strikes the best balance of keeping out of the user's way while making sure they don't do something unintended. It's important to keep the undo action unobtrusive yet simple and intuitive; a common way of doing so is by using an info bar, though other methods may also be appropriate.",
    "See also: <a href=\"http://www.alistapart.com/articles/neveruseawarning/\" title=\"Read the article on A List Apart\">Never Use a Warning When you Mean Undo</a> by Aza Raskin": "関連項目: <a href=\"http://www.alistapart.com/articles/neveruseawarning/\" title=\"Read the article on A List Apart\">Never Use a Warning When you Mean Undo</a> by Aza Raskin",
    "Always Saved": "常に保存",
    "Users should feel confident when using elementary; they should know that everything they see is saved and up to date.": "elementary を使用している場合、ユーザーは自信を感じるはず; ユーザーは、見るものすべてが保存され最新の状態であることを知っているはずです。",
    "Apps in elementary should operate around an always-saved state. This means that changes the user makes are instantly applied and visible and that making the user manually save things is a legacy or specialized behavior.": "elementaryのアプリは常に保存された状態で動作しなければなりません。これは、ユーザーが行った変更は即時に適用されて見えるようになり、ユーザーが手動で物事を保存することはレガシーや特殊な動作であることを意味します。",
    "For example, a Song Info dialog should update the track information instantly without a user having to press a save button, user preferences should be applied as soon as the user manipulates the relevant widget, and closing an app should mean that reopening it will return to where the user left off.": "たとえば、曲情報ダイアログはユーザーが保存ボタンを押す必要が無く即時にトラック情報を更新できるようにしなければなりません。ユーザーの環境設定はユーザーが関連するウィジェットを操作したらすぐに適用しなければなりません。アプリを閉じることは再度開くときにユーザーが止めたところに戻ってくることを意味しなければなりません。",
    "Closing": "閉じる",
    "When a user closes an app, it's typically because they're done using it for now and they want to get it out of the way.": "When a user closes an app, it's typically because they're done using it for now and they want to get it out of the way.",
    "Saving State": "状態の保存",
    "Apps should save their current state when closed so they can be reopened right to where the user left off. Ideally closing and reopening an app should be indistinguishable from the traditional concept of minimizing and unminimizing an app; that is, all elements should be saved including open documents, scroll position, undo history, etc.": "アプリは、閉じるときに、ユーザーが止めたところで再度開くことができるように現在の状態を保存しなければなりません。理想的には、アプリを閉じて再び開くことは、伝統的なアプリの最小化と最小化の解除と区別ができない状態であるべきです。つまり、開かれた文書、スクロール位置、元に戻す履歴を含む、すべての要素が保存されるべきです。",
    "Background Tasks": "バックグラウンドタスク",
    "If it makes sense for an app to complete background tasks after the window is closed, the tasks should be completed soon after the window is closed. If the app performs repeat background tasks (such as a mail client), the background tasks should be handled by a separate daemon that does not rely on the app itself being open.": "If it makes sense for an app to complete background tasks after the window is closed, the tasks should be completed soon after the window is closed. If the app performs repeat background tasks (such as a mail client), the background tasks should be handled by a separate daemon that does not rely on the app itself being open.",
    "Closing the App Window": "アプリのウィンドウを閉じる",
    "It is not desirable for an app window to simply minimize rather than close when the user attempts to close it. Instead, the app window should be &quot;hidden&quot;. If it makes sense to continue a process in the background (such as downloading/transferring, playing music, or executing a terminal command) the app backend should continue with the task and close when the task is finished. If it's not immediately apparent that the process has completed (as with the file download/transfer or terminal command), the app may show a notification informing the user that the process has completed. If it is apparent, as with the music, no notification is necessary.": "ユーザーがアプリを閉じようとしたときに、ウィンドウを閉じるのではなく単に最小化することは望ましくありません。その代わりに、アプリケーションのウィンドウを \"非表示\" にする必要があります。バックグラウンドで処理を継続する意味がある場合(ダウンロード/転送、音楽の再生、ターミナルコマンドの実行など)、アプリのバックエンドがそのタスクを継続し、タスクが終了した時に閉じる必要があります。プロセスが完了したことがすぐに明らかではない場合(ファイルのダウンロード/転送やターミナルコマンドを使用した場合と同様)、アプリは、プロセスが完了したことをユーザーに知らせる通知を表示することがあります。ミュージックと同じように、それが明らかである場合には、通知は何も必要ではありません。",
    "Re-Opening the App Window": "再度、アプリのウィンドウを開く",
    "If the user re-opens the app while the background process is still executing, the app should be exactly where it would be if the window had been open the whole time. For example, the terminal should show any terminal output, the music player should be on the same page it was when closed, and the browser should come back to the page it was on previously. For more details, see the discussion of app state on a <a href=\"#normal-launch\">Normal Launch</a>.": "バックグラウンド・プロセスがまだ実行中にユーザーがアプリを再び開いた場合、アプリはそのウィンドウがずっと開かれていた場合の状態と正確に同じでなければなりません。例えば、ターミナルはすべてのターミナルの出力を表示するべきですし、ミュージックプレーヤーはそれを閉じたときと同じ場所であるべきです。また、ブラウザは、以前のページにに戻ってくるべきです。詳細については、<a href=\"#normal-launch\">通常の起動</a>にあるアプリの状態の説明を参照してください。",
    "See also: <a href=\"http://design.canonical.com/2011/03/quit/\">That's It, We're Quitting</a> by Matthew Paul Thomas": "関連項目: <a href=\"http://design.canonical.com/2011/03/quit/\">That's It, We're Quitting</a> by Matthew Paul Thomas",
    "Desktop Integration": "デスクトップとの統合",
    "An important advantage that developers have when choosing the elementary platform is the ability to seamlessly integrate their application with the default desktop. Outlined below are the several ways in which you can make your application feel beyond native in elementary. This section will cover things like:": "elementary プラットフォームを選択した時に、開発者が持っている重要な利点は、アプリを標準デスクトップにシームレスに統合できることです。以下の概要は、あなたのアプリを elementary の中でごく自然に感じさせるためのいくつかの方法です。このセクションでは、以下のようなことをカバーします:",
    "<strong>Creating an App Launcher</strong>. The primary method of discovering and using your app will be through an app launcher found in Slingshot or in the dock. This section details how to create these launchers.\nMIME handling. If your application can open and save files, place entries for those file types in the application database and the document type (MIME) database. This allows the file manager and other applications to automatically launch your application when they encounter files your application can handle.": "<strong>アプリランチャーを作成する</strong>。あなたのアプリを発見して使う第一の方法は、 Slingshot やドックの中のアプリランチャーです。このセクションでは、これらのランチャーの作り方を説明します。\nMIME ハンドリング。アプリがファイルを開いたり保存したりできるのであれば、アプリケーションデーターベースとドキュメントタイプ (MIME) データベースの中にそれらのファイルタイプのエントリーを置いてください。これは、ファイルマネージャーと他のアプリケーションが、あなたのアプリケーションが扱うことができるファイルを見つけた時に、自動的にあなたのアプリケーションを起動することを可能にします。",
    "<strong>Contractor</strong>. elementary provides an easy new way for applications to share files with each other. This will make your application more useful and extend its functionality without adding hundreds of lines of code.": "<strong>Contractor</strong>。elementary は、アプリケーションがお互いにファイルを共有する簡単で新しい方法を提供します。これは、あなたのアプリケーションをより有用にし、何百行ものコードを追加することなくアプリの機能を拡張します。",
    "<strong>Using System Indicators</strong>. elementary uses indicator applets in the panel that allow your application to provide persistent notifications. This section discusses not only how to use that area, but when it is or isn't appropriate to use it.": "<strong>システムインジケーターの使用</strong>。 elementary は、アプリケーションが永続的な通知を提供することを可能にするパネル内のインジケーターアプレットを使用します。このセクションでは、その領域を使用する方法だけではなく、それを使うことが適切な場合とで季節ではない場合を説明します。",
    "<strong>Integrating with the Dock</strong>. elementary ships with a great dock that supports the Unity Launcher API. This allows your application to provide notification badges, progress indicators, and more.": "<strong>ドックとの統合</strong>。elementary は Unity Launcher API をサポートする素晴らしいドックとともに出荷されます。これはアプリに、通知バッジ、進行状況インジケータなどを提供することを可能にします。",
    "App Launchers": "アプリランチャー",
    "The primary method of discovering and using your app will be through an app launcher found in Slingshot or in the dock. In order to provide these launchers you must install an appropriate .desktop file with your app. This includes giving your launcher an appropriate name, placing it in the correct category, assigning it an icon, etc.": "あなたのアプリを発見して使う第一の方法は、Slingshot や ドックの中のアプリランチャーです。これらのランチャーを提供するためには、アプリに適切な .desktop ファイルをインストールする必要があります。これには、ランチャーに適切な名前をつける、適切なカテゴリの中におく、アイコンを割り当てるなどを含みます。",
    ".desktop files follow the freedesktop.org <a href=\"http://standards.freedesktop.org/desktop-entry-spec/latest/index.html\" title=\"View the spec on FreeDesktop.Org\">Desktop Entry Specification</a>. They should be installed in <em>/usr/share/applications</em>. Users may create their own launchers by putting .desktop files in <em>~/.local/share/applications</em>.": ".desktop ファイルは freedesktop.org <a href=\"http://standards.freedesktop.org/desktop-entry-spec/latest/index.html\" title=\"View the spec on FreeDesktop.Org\">Desktop Entry Specification</a> に従ってください。それらは、<em>/usr/share/applications</em> にインストールする必要があります。ユーザーは、 .desktop ファイルを <em>~/.local/share/applications</em> の中に置くことで独自のランチャーを作ることがあります。",
    "The contents of .desktop files should follow this formula:": ".desktop ファイルの内容は、この式に従ってください:",
    "<em><strong>Title</strong> is a(n) <strong>GenericName</strong> that lets you <strong>Comment</strong>.</em>": "<em><strong>Title</strong> is a(n) <strong>GenericName</strong> that lets you <strong>Comment</strong>.</em>",
    "Title": "タイトル",
    "You should not include descriptive words in your title. For example, Dexter is called &quot;Dexter,&quot; not &quot;Dexter Address Book.&quot; Midori is just &quot;Midori,&quot; not &quot;Midori Web Browser.&quot; Instead, utilize the GenericName attribute of your app's .desktop file for a generic name, and the Comment attribute for a longer descriptive phrase.": "You should not include descriptive words in your title. For example, Dexter is called \"Dexter,\" not \"Dexter Address Book.\" Midori is just \"Midori,\" not \"Midori Web Browser.\" Instead, utilize the GenericName attribute of your app's .desktop file for a generic name, and the Comment attribute for a longer descriptive phrase.",
    "GenericName": "ジェネリックネーム",
    "If your app is easily categorized or described with a generic name, you should use that for the GenericName attribute in your app's .desktop file. If you can say, &quot;My app is a(n) <strong>____</strong>,&quot; then whatever fits in that blank could be the generic name. For example, Maya is a calendar, so its generic name is &quot;Calendar.&quot;": "If your app is easily categorized or described with a generic name, you should use that for the GenericName attribute in your app's .desktop file. If you can say, \"My app is a(n) <strong>____</strong>,\" then whatever fits in that blank could be the generic name. For example, Maya is a calendar, so its generic name is \"Calendar.\"",
    "You should not include articles (the, a, an) or the words &quot;program,&quot; &quot;app,&quot; or &quot;application&quot; in your app's generic name.": "You should not include articles (the, a, an) or the words \"program,\" \"app,\" or \"application\" in your app's generic name.",
    "The generic name should be in <a href=\"#title-case\">title case</a> and may be used around the system to better describe or categorize your app. ": "The generic name should be in <a href=\"#title-case\">title case</a> and may be used around the system to better describe or categorize your app.",
    "Comment": "コメント",
    "The system utilizes an app's Comment attribute found in the .desktop file to succinctly inform a user what can be done with the app. It should be a short sentence or phrase beginning with a verb and containing the primary nouns that your app deals with. For example, the following are appropriate comments:": "The system utilizes an app's Comment attribute found in the .desktop file to succinctly inform a user what can be done with the app. It should be a short sentence or phrase beginning with a verb and containing the primary nouns that your app deals with. For example, the following are appropriate comments:",
    "Maya: <strong>Browse and schedule events</strong>": "Maya: <strong>イベントの参照と管理をします</strong>",
    "Noise: <strong>Listen to music</strong>": "Noise: <strong>音楽を聞きます</strong>",
    "Lingo: <strong>Look up definitions</strong>": "Lingo: <strong>定義を調べます</strong>",
    "Geary: <strong>Send and receive mail</strong>": "Geary: <strong>メールの送信と受信をします</strong>",
    "Scratch: <strong>Edit text files</strong>": "Scratch: <strong>テキストファイルを編集します</strong>",
    "Files: <strong>Browse and manage your files</strong>": "Files: <strong>ファイルの閲覧と管理をします</strong>",
    "An app's comment should be in <a href=\"#sentence-case\">sentence case</a>, not include terminal punctuation (periods, exclamation points, or question marks), and should be as short as possible while describing the <em>primary</em> use case of the app.": "アプリのコメントは、句点 (ピリオド、 エクスクラメーションマーク、クエスチョンマーク)は含まない、 <a href=\"#sentence-case\">センテンスケース</a>である必要があります。また、出来る限り短く、アプリの <em>主要な</em>ユースケースを説明する必要があります。",
    "Categories": "カテゴリー",
    "The following categories may be used to aid with searching or browsing for your app:": "次のカテゴリは、アプリの検索や閲覧を支援するために使用されることがあります:",
    "AudioVideo  ": "AudioVideo",
    "Audio": "オーディオ・Audio",
    "Video": "ビデオ・Video",
    "Development": "開発",
    "Education": "教育",
    "Game": "ゲーム",
    "Graphics": "グラフィック",
    "Network ": "Network",
    "Office": "オフィス",
    "Science": "科学",
    "Settings": "設定",
    "System": "システム",
    "Utility": "ユーティリティー",
    "For more info, see the FreeDesktop.Org <a href=\"http://standards.freedesktop.org/menu-spec/latest/apa.html\">menu entry</a> spec.": "詳細情報については、FreeDesktop.Org <a href=\"http://standards.freedesktop.org/menu-spec/latest/apa.html\">menu entry</a> の仕様を参照してください。",
    "Keywords": "キーワード",
    "You may also include keywords in your launcher to help users find your app via search. These follow the convention of &quot;X-GNOME-Keywords&quot; (for in the app launcher) and &quot;X-AppInstall-Keywords&quot; (for in the app installer). For example, web browser might include &quot;Internet&quot; as a keyword even though it's not in the app's name, generic name, or description. As a result, a user searching for &quot;Internet&quot; will find the app. Here are some more examples:": "You may also include keywords in your launcher to help users find your app via search. These follow the convention of \"X-GNOME-Keywords\" (for in the app launcher) and \"X-AppInstall-Keywords\" (for in the app installer). For example, web browser might include \"Internet\" as a keyword even though it's not in the app's name, generic name, or description. As a result, a user searching for \"Internet\" will find the app. Here are some more examples:",
    "Geary: <strong>Email;Gmail</strong>": "Geary: <strong>Email;Gmail</strong>",
    "Midori: <strong>Internet;WWW;Explorer</strong>": "Midori: <strong>Internet;WWW;Explorer</strong>",
    "Files: <strong>Folders;Browser;Explorer;Finder;Manager</strong>": "ファイル: <strong>Folders;Browser;Explorer;Finder;Manager</strong>",
    "Terminal: <strong>Command;Prompt;cmd;Emulator</strong>": "ターミナル: <strong>Command;Prompt;cmd;Emulator</strong>",
    "Scratch: <strong>Notepad;IDE;Plain</strong>": "Scratch: <strong>Notepad;IDE;Plain</strong>",
    "System Settings: <strong>Control;Panel</strong>": "システム設定: <strong>Control;Panel</strong>",
    "Shotwell: <strong>Camera;Picture</strong>": "Shotwell: <strong>Camera;Picture</strong>",
    "Keywords should be single words in <a href=\"#title-case\">title case</a> and seperated with a semicolon.": "キーワードは、<a href=\"#title-case\">タイトルケース</a>の1つの単語で、セミコロンで分離する必要があります。",
    "See also: <a href=\"http://standards.freedesktop.org/desktop-entry-spec/latest/index.html\">Desktop Entry Specification</a> from FreeDesktop.org": "関連項目: <a href=\"http://standards.freedesktop.org/desktop-entry-spec/latest/index.html\">Desktop Entry Specification</a> from FreeDesktop.org",
    "Contractor": "Contractor",
    "Contractor is a service and a protocol for exposing services easily between apps. It allows an app to interact with various other apps/services without hardcoding support for them. You simply add <a href=\"https://launchpad.net/contractor\">contractor</a> support, and then any service registered with contractor is now available for your app to use. Your app can integrate with contractor in two different ways:": "Contractor is a service and a protocol for exposing services easily between apps. It allows an app to interact with various other apps/services without hardcoding support for them. You simply add <a href=\"https://launchpad.net/contractor\">contractor</a> support, and then any service registered with contractor is now available for your app to use. Your app can integrate with contractor in two different ways:",
    "Register one of it's functions as a service that can be used from other apps": "Register one of it's functions as a service that can be used from other apps",
    "Implement the contractor menu or otherwise access contractor to receive a list of services that can handle the data your app manages": "Implement the contractor menu or otherwise access contractor to receive a list of services that can handle the data your app manages",
    "Displaying Results from Contractor": "Contractor からの結果の表示",
    "The most typical way to present Contractor results to users is in menu form. Keep in mind the following things when presenting contractor results:": "The most typical way to present Contractor results to users is in menu form. Keep in mind the following things when presenting contractor results:",
    "If the item acted upon is one of many items visible, such as in an icon view, be sure to display results in a way that is directly related to the item such as in a context menu.": "If the item acted upon is one of many items visible, such as in an icon view, be sure to display results in a way that is directly related to the item such as in a context menu.",
    "If the item acted upon is the only item currently visible, such as a web page or a contact in Dexter, contractor can be displayed in a toolbar menu.": "If the item acted upon is the only item currently visible, such as a web page or a contact in Dexter, contractor can be displayed in a toolbar menu.",
    "Never display the target app's name. The menu string is the intended display name for that app. Doing so can lead to redundant messages such as, &quot;Set image as wallpaper (wallpaper)&quot; and it is always irrelevant to a user's needs.": "Never display the target app's name. The menu string is the intended display name for that app. Doing so can lead to redundant messages such as, \"Set image as wallpaper (wallpaper)\" and it is always irrelevant to a user's needs.",
    "Dock Integration": "ドックとの統合",
    "By integration with Pantheon's dock, apps are able to communicate their status to the user at a glance.": "Pantheon のドックと統合することで、アプリはユーザーに一目でそのステータスを伝えることができます。",
    "Progressbars": "プログレスバー",
    "A progressbar must be unambiguous in its use, referring to a single specific task. For example, a progressbar can be used to indicate the status of a file transfer or of a lengthy process like encoding. A progressbar should not be used to compound the progress of multiple types of actions.": "A progressbar must be unambiguous in its use, referring to a single specific task. For example, a progressbar can be used to indicate the status of a file transfer or of a lengthy process like encoding. A progressbar should not be used to compound the progress of multiple types of actions.",
    "<strong>Good Example</strong>: Installation progress in Software Center": "<strong>良い例</strong>: ソフトウェアセンターでのインストール進捗",
    "<strong>Bad Example</strong>: Combined progress of downloading an album, burning a CD, and syncing a mobile device in Noise": "<strong>悪い例</strong>: 音楽アプリでの、アルバムのダウンロード、CD を焼く、モバイルデバイス同期の組み合わせ進捗",
    "Badges": "バッジ",
    "A badge shows a count of actionable items which your app manages. It's purpose is to inform the user that there are items that require user attention or action without being obtrusive. This is a passive notification. A badge should not show totals or rarely changing counters. If the badge is not easily dismissed when the user views your app, it is likely that this is not a good use of a badge.": "A badge shows a count of actionable items which your app manages. It's purpose is to inform the user that there are items that require user attention or action without being obtrusive. This is a passive notification. A badge should not show totals or rarely changing counters. If the badge is not easily dismissed when the user views your app, it is likely that this is not a good use of a badge.",
    "<strong>Good Example</strong>: Unread messages in Geary": "<strong>良い例</strong>: メールの未読メッセージ",
    "<strong>Bad Example</strong>: Total number of Photos in Shotwell": "<strong>悪い例</strong>: フォトの全ての写真数",
    "System Indicators": "システムインジケーター",
    "Indicators are small icons that live on the top panel. They give users a place to glance for a quick indication of various settings or events. Clicking the icon shows a small menu with related actions available to the user.": "インジケーターは、トップパネルにある小さなアイコンです。さまざまな設定やイベントの迅速な表示のためにユーザに一目見る場所を与えます。アイコンをクリックすると、ユーザが利用可能な関連アクションと小さなメニューが表示されます。",
    "Does Your App Need An Indicator?": "あなたのアプリはインジケーターが必要ですか？",
    "The indicator area is notorious for becoming cluttered and having inconsistent behavior. Given that users will probably install many third party apps, we need to be careful about how many indicators we're showing and how they behave. Keep in mind that not every application needs an indicator. Only a very small set of apps will benefit from one. You do not need an indicator if:": "The indicator area is notorious for becoming cluttered and having inconsistent behavior. Given that users will probably install many third party apps, we need to be careful about how many indicators we're showing and how they behave. Keep in mind that not every application needs an indicator. Only a very small set of apps will benefit from one. You do not need an indicator if:",
    "<strong>The indicator will only appear while your app's main window is open.</strong> LibUnity already provides a great API for showing application statuses on your app's icon in the dock. Only use an indicator if it will show while your app's main window is closed.": "<strong>The indicator will only appear while your app's main window is open.</strong> LibUnity already provides a great API for showing application statuses on your app's icon in the dock. Only use an indicator if it will show while your app's main window is closed.",
    "<strong>You want a persistent/smaller launcher.</strong> ​Launchers are already stored in the dock in a way that gives the user control over persistence and size. The indicator area should never be used for an app launcher. If you want to add special actions to your launcher, Quicklists should be used, not an indicator.": "<strong>You want a persistent/smaller launcher.</strong> ​Launchers are already stored in the dock in a way that gives the user control over persistence and size. The indicator area should never be used for an app launcher. If you want to add special actions to your launcher, Quicklists should be used, not an indicator.",
    "<strong>The application is for IM, IRC, e-mail, news-reading, or music playback.</strong> Instead, integrate the application with the existing messaging or sound menus.": "<strong>The application is for IM, IRC, e-mail, news-reading, or music playback.</strong> Instead, integrate the application with the existing messaging or sound menus.",
    "See also: <a href=\"http://design.canonical.com/2010/04/notification-area/\">Farewell To The Notification Area</a> by Matthew Paul Thomas": "関連項目: <a href=\"http://design.canonical.com/2010/04/notification-area/\">Farewell To The Notification Area</a> by Matthew Paul Thomas",
    "Container Widgets": "コンテナーウィジェット",
    "Windows": "ウィンドウ",
    "Windows are the foundation that your app is built on. They provide a sort of canvas with basic actions built in such as closing an app, resizing it, etc. Although users may see all windows as being the same, there are several distinct types of windows in elementary OS. It's important to understand the types of windows available to you, window behavior in general, and behavior that is specific to a certain window type. This section will cover the different types of windows available in elementary OS. Although each type of window is a bit different, think of them all as a subclass of a window. Unless otherwise stated, they all behave as an average window.": "ウィンドウはその上にアプリを構築する基礎です。アプリを閉じる、リサイズなどの内蔵された基本的なアクションを持つキャンバスのようなものを提供します。ユーザーには全てのウィンドウは同じもののようにみえるかもしれませんが、elementary OS にはいくつかの明確なウィンドウの種類があります。利用可能なウィンドウのタイプ、一般的な動作、特定の種類のウィンドウに固有の動作を理解することが重要です。このセクションでは、elementary OS で利用できる、さまざまな種類のウィンドウをカバーします。ウィンドウの各種類は少し異なりますが、それら全てはウィンドウのサブクラスとして考えてください。特に明記しない限り、それらはすべて一般的なウィンドウとして動作します。",
    "<strong>View Windows</strong> are the most literal kind of &quot;Window&quot; available. They show content such as presentations, web pages, documents, etc. These Windows act as a sort of frame around the specific content they display. They typically allow multiple instances of an application to be shown and may utilize tabs to help keep content organized without displaying too many windows.": "<strong>ビューウィンドウ</strong> は最も文字通りに利用できる \"ウィンドウ\" です。プレゼンテーション、Web ページ、ドキュメントのようなコンテンツを表示します。このウィンドウは、表示する特定のコンテンツを囲む一種のフレームのように動作します。通常、アプリケーションの複数のインスタンスを表示することを可能にします。また、多すぎるウィンドウを表示することを避けてコンテンツが整理された状態を保つためにタブを利用することができます。",
    "<strong>App Windows</strong> are the main windows of apps that are not document-based. These windows typically only allow one instance of an application to be shown.": "<strong>アプリウィンドウ</strong>は、ドキュメントベースではないアプリのメインウィンドウです。通常、1つのアプリケーションの1つのインスタンスだけを表示することを可能にします。",
    "<strong>Dialogs and Alerts</strong> are temporary windows that require a response from a user. Dialogs and Alerts are especially unique types of windows with much stricter guidelines for their use and visual style. They typically belong to App or View windows and are often modal. We'll discuss what modality means in a bit.": "<strong>ダイアログとアラート</strong>は、ユーザーの応答を必要とする一時的なウィンドウです。 ダイアログとアラートは、使い方と視覚スタイルに関するより厳格なガイドラインを持つ、とりわけ独特な種類のウィンドウです。通常、アプリやビューウィンドウに属し、多くの場合はモーダルです。モーダルが何を意味するかを、少し解説します。",
    "Window Titles": "ウィンドウタイトル",
    "When dealing with window titles, consider that their main use is in distinguishing one window from another. A good window title will provide a description that helps a user make a selection. Keep that in mind as you consider the following:": "ウィンドウタイトルを扱う場合、その主な用途は、ある1つのウィンドウを他と区別することにあることを考慮してください。良いウィンドウタイトルは、ユーザーの選択を助ける説明を提供します。以下を考慮することを心に留めておいてください:",
    "A view window should display the name of the content being viewed.  For example, in Midori the window title reflects the title of the current web page. When looking for a specific window among multiple instances of an app, simply showing the application's name is not helpful.": "ビューウィンドウは、表示しているコンテンツの名前を表示する必要があります。例えば、 Midori のウィンドウタイトルは、現在の Web ページのタイトルを反映しています。アプリの複数のインスタンス間の特定のウィンドウを探しているときには、単にアプリケーションの名前を表示することは有用ではありません。",
    "A window's title should not show the vendor name or version number of the app.  Adding the version number or vendor name clutters the title and doesn't help to distinguish a window. Additionally, this information is already available from your app's About window.": "ウィンドウのタイトルでは、アプリのベンダー名やバージョン番号を表示しないでください。バージョン番号やベンダー名を追加することはタイトルを乱雑にしますし、ウィンドウの区別には役立ちません。また、この情報はアプリの \"アプリについて\" ウィンドウからすでに入手可能です。",
    "Dialogs and alerts should not display a window title. They are distinctive enough in their visual style and are often modal.": "ダイアログとアラートはウィンドウタイトルを表示すべきではありません。それらは視覚的なスタイルで十分に区別でき、また、多くの場合、モーダルです。",
    "If you need to display more than one item in the title, separate the items with an em dash (—) with space on either side. The helps keep the title clean when you need to show more information.": "タイトルに複数の項目を表示する必要がある場合、両側にスペースを空けたem ダッシュ (—) で項目を分離してください。より多くの情報を表示する必要がある場合に、タイトルをクリーンに保つことができます。",
    "Don’t display pathnames in window titles, only the current destination. If you have two paths that are very similar it will be hard to distinguish them when displaying the full path. If you only show the destination, the distinction is clear.": "ウィンドウタイトルにパス名を表示しないでください。現在の行き先のみです。とても良く似た2つのパスがある場合、完全なパスを表示するとそれらを区別することは難しくなるでしょう。行き先だけを表示する場合、区別は明確です。",
    "Dialogs": "ダイアログ",
    "Dialog warning icon": "ダイアログ警告アイコン",
    "Primary text providing basic information and a suggestion": "基本的な情報と提案を提供するプライマリテキスト",
    "Secondary text providing further details. Also includes information that explains any unobvious consequences of actions.": "さらに詳細な情報を提供するセカンダリテキスト。アクションのどんな明白でない結果でも説明する情報も含む。",
    "Cancel": "キャンセル",
    "Suggested Action": "アクションの提案",
    "Alert Text": "アラートテキスト",
    "An alert contains both primary and secondary text.": "アラートは、プライマリーとセカンダリーの両方のテキストを含みます。",
    "The primary text contains a brief summary of the situation and offer a suggested action. This text should use the CSS class <code>primary</code>.": "プライマリテキストは、状況の概要が含まれており、提案されたアクションを提供します。このテキストは CSS クラスの <code>primary</code> を使用する必要があります。",
    "The secondary text provides a more detailed description of the situation and describes any possible side effects of the available actions. It's important to note that a user should only need the primary text to make a decision and should only need to refer to the secondary text for clarification. This text should be placed one text line height beneath the primary text using the default font size and weight.": "セカンダリテキストは、状況のより詳細な説明を提供し、利用可能なアクションの副作用の可能性について説明します。ユーザーの判断にはプライマリテキストだけが必要であり、セカンダリテキストはその明確化のために参照するだけであることに注意することが重要です。このテキストはデフォルトのフォントサイズとウェイトを使用して、プライマリテキストの下に1行の高さで配置する必要があります。",
    "Make both the primary and secondary text selectable. This makes it easy for the user to copy and paste the text to another window, such as an email message.": "プライマリとセカンダリの両方ともテキスト選択可能としてください。これは、Eメールメッセージのような、他のウィンドウのテキストへのコピーと貼り付けをユーザーに容易にします。",
    "Button Order": "ボタンの順番",
    "All dialogs should contain an affirmative button that performs the action suggested in the primary text. This button goes on the far right side of the window.": "すべてのダイアログは、プライマリテキストで提案されているアクションを実行する肯定的なボタンを含む必要があります。このボタンは、ウィンドウの右端に行きます。",
    "For dialogs that are displayed in response to user action (such as &quot;Quit&quot;), provide a &quot;Cancel&quot; button directly to the left of the affirmative button.": "ユーザーの操作 (\"終了\"のような) に応答して表示されるダイアログでは、肯定的なボタンのすぐ左側に \"キャンセル\" ボタンを提供してください。",
    "If your dialog has alternative actions, list them to the left of the &quot;Cancel&quot; button.": "ダイアログに代替アクションがある場合は、\"キャンセル\" ボタンの左にそれらを並べてください。",
    "If you wish your dialog to contain a &quot;Help&quot; button, this should be placed to the far left of the window.": "ダイアログに \"ヘルプ\" ボタンを含ませたい場合、これはウィンドウの左端に配置する必要があります。",
    "&quot;OK&quot; is not Okay": "\"OK\" は \"はい\" ではない",
    "When presenting a dialog to a user, always use explicit action names like &quot;Save...&quot;, &quot;Shut Down&quot;, etc. Consider that using &quot;OK&quot; enables users to proceed without understand the action they are authorizing. Not all users will read the question or information presented to them in a dialog. Using specific action names will make it harder for a user to select an unintended action and may even encourage them to read the information presented before making a selection.": "When presenting a dialog to a user, always use explicit action names like \"Save...\", \"Shut Down\", etc. Consider that using \"OK\" enables users to proceed without understand the action they are authorizing. Not all users will read the question or information presented to them in a dialog. Using specific action names will make it harder for a user to select an unintended action and may even encourage them to read the information presented before making a selection.",
    "Preference Dialogs": "優先ダイヤログ",
    "Preference dialogs should be made Transient, but not Modal. When a user makes a change in a preference dialog, the change should be immediately visible in the UI. If the dialog is modal, the user may be blocked from seeing (and especially from interacting with) the change. This means they will have to close the dialog, evaluate the change, then possibly re-open the dialog. By making the dialog transient, we keep the dialog on top for easy access, but we also allow the user to evaluate and possibly revert the change without having to close and re-open the preference dialog.": "Preference dialogs should be made Transient, but not Modal. When a user makes a change in a preference dialog, the change should be immediately visible in the UI. If the dialog is modal, the user may be blocked from seeing (and especially from interacting with) the change. This means they will have to close the dialog, evaluate the change, then possibly re-open the dialog. By making the dialog transient, we keep the dialog on top for easy access, but we also allow the user to evaluate and possibly revert the change without having to close and re-open the preference dialog.",
    "See also:": "関連項目:",
    "<a href=\"http://uxmovement.com/buttons/why-ok-buttons-in-dialog-boxes-work-best-on-the-right/\">Why 'Ok' Buttons In Dialog Boxes Work Best On The Right</a> by UX Movement": "<a href=\"http://uxmovement.com/buttons/why-ok-buttons-in-dialog-boxes-work-best-on-the-right/\">Why 'Ok' Buttons In Dialog Boxes Work Best On The Right</a> by UX Movement",
    "<a href=\"http://uxmovement.com/buttons/why-the-ok-button-is-no-longer-okay/\">Why The Ok Button Is No Longer Okay</a> by UX Movement": "<a href=\"http://uxmovement.com/buttons/why-the-ok-button-is-no-longer-okay/\">Why The Ok Button Is No Longer Okay</a> by UX Movement",
    "<a href=\"http://ux.stackexchange.com/questions/9946/should-i-use-yes-no-or-ok-cancel-on-my-message-box\">Should I use Yes/No or Ok/Cancel on my message box?</a> on UX StackExchange": "<a href=\"http://ux.stackexchange.com/questions/9946/should-i-use-yes-no-or-ok-cancel-on-my-message-box\">Should I use Yes/No or Ok/Cancel on my message box?</a> on UX StackExchange",
    "<a href=\"http://uxmovement.com/buttons/where-to-place-icons-next-to-button-labels/\">Where to Place Icons Next to Button Labels</a> by UX Movement": "<a href=\"http://uxmovement.com/buttons/where-to-place-icons-next-to-button-labels/\">Where to Place Icons Next to Button Labels</a> by UX Movement",
    "Popovers": "ポップオーバー",
    "Popovers are like a contextual dialog. They display transient content directly related to something that was clicked on and close when clicked out of, like menus.": "ポップオーバーはコンテキストダイアログのようなものです。それは、メニューのように、クリックされたものに関連する一時的なコンテンツを直接表示し、外側をクリックすると閉じます。",
    "A popover should be used when a user wants to perform a quick action without getting out of the main UI. Some examples of where a popover could be used are adding a contact from an email, adding a bookmark in a browser, or displaying downloads or file transfers.": "A popover should be used when a user wants to perform a quick action without getting out of the main UI. Some examples of where a popover could be used are adding a contact from an email, adding a bookmark in a browser, or displaying downloads or file transfers.",
    "Popovers should not be used when displaying only a simple list of items; instead, use a menu. Likewise, don't use a popover if the user would spend more than a few seconds in it; instead, use a dialog. Remember that popovers are contextual and should directly relate to the UI element from which they spawn.": "Popovers should not be used when displaying only a simple list of items; instead, use a menu. Likewise, don't use a popover if the user would spend more than a few seconds in it; instead, use a dialog. Remember that popovers are contextual and should directly relate to the UI element from which they spawn.",
    "Toolbars": "ツールバー",
    "A Toolbar is useful for providing users with quick access to an app's most used features. Besides Buttons, a Toolbar is one of the most frequently used UI elements. It may seem like a simple container, but it is important to remain consistent in it's use and organization.": "A Toolbar is useful for providing users with quick access to an app's most used features. Besides Buttons, a Toolbar is one of the most frequently used UI elements. It may seem like a simple container, but it is important to remain consistent in it's use and organization.",
    "Ordering Toolbar Items": "ツールバーの項目の順番",
    "Toolbar items should be organized with the most significant objects on the left and the least significant on the right, with the AppMenu always on the far right of the Toolbar. If you have many toolbar items it may be appropriate to divide them into groups with space in between each group. Keep in mind that when viewed with RTL languages, your toolbar layout will be flipped.": "ツールバーの項目は、左側が最も重要なオブジェクト、右側に重要度が低いもの、アプリメニューは常にツールバーの右端、として構成するべきです。多くのツールバーの項目がある場合、グループに分割し、各グループの間にスペースをいれることが適切です。 RTL 言語で見た場合、ツールバーのレイアウトが反転されることに注意してください。",
    "UI Toolkit Elements": "UIツールキットエレメント",
    "elementary uses consistent user interface (UI) elements to bring a unified and predictable experience to users, no matter what app they're using. When used properly, this ensures a small (or nonexistent) learning curve for your app.": "elementary uses consistent user interface (UI) elements to bring a unified and predictable experience to users, no matter what app they're using. When used properly, this ensures a small (or nonexistent) learning curve for your app.",
    "Widget Concepts": "ウィジェットのコンセプト",
    "Before we get into all the widgets available in elementary OS, we need to cover some basic concepts that apply to all widgets. Employing these concepts correctly will create a more seamless experience for your users and help you avoid sifting through bug reports!": "elementary OS で利用可能なすべてのウィジェットに進む前に、全てのウィジェットに適用されるいくつかの基本なコンセプトをカバーする必要があります。これらのコンセプトを正しく採用することはユーザーによりシームレスな体験を提供します。また、あなたがバグレポートをふるいにかけることを防ぐことを手伝います。",
    "Controls That Do Nothing": "Controls That Do Nothing",
    "A very common mistake for developers to make is creating controls that seemingly do nothing. Keep in mind that we want to present an environment where users feel comfortable exploring. A curious user will interact with a control expecting there to be some immediate reaction. When a control seemingly does nothing, this creates confusion and can be scary (Think,  &quot;uh-oh I don't know what happened!&quot;). In some cases, controls that do nothing are simply clutter and add unnecessary complexity to your UI.": "A very common mistake for developers to make is creating controls that seemingly do nothing. Keep in mind that we want to present an environment where users feel comfortable exploring. A curious user will interact with a control expecting there to be some immediate reaction. When a control seemingly does nothing, this creates confusion and can be scary (Think,  \"uh-oh I don't know what happened!\"). In some cases, controls that do nothing are simply clutter and add unnecessary complexity to your UI.",
    "Consider the &quot;clear&quot; button present in search fields. This button only appears when it is relevant and needed. Clicking this button when the field is already clear essentially does nothing. ": "Consider the \"clear\" button present in search fields. This button only appears when it is relevant and needed. Clicking this button when the field is already clear essentially does nothing.",
    "Sensitivity": "Sensitivity",
    "Sometimes it doesn't make sense for a user to interact with a widget until some pre-requisite is fulfilled. For example, It doesn't make sense to allow a user to click the &quot;Forward&quot; button in a browser unless there is forward history available. In this case, you should make the &quot;Forward&quot; button insensitive or a user may click it, expecting a result, and be confused when nothing happens.": "Sometimes it doesn't make sense for a user to interact with a widget until some pre-requisite is fulfilled. For example, It doesn't make sense to allow a user to click the \"Forward\" button in a browser unless there is forward history available. In this case, you should make the \"Forward\" button insensitive or a user may click it, expecting a result, and be confused when nothing happens.",
    "It's usually better to make a widget insensitive than to hide it altogether. Making a widget insensitive informs the user that the functionality is available, but only after a certain condition is met. Hiding the widget gives the impression that the functionality is not available at all or can leave a user wondering why a feature has suddenly &quot;disappeared&quot;.": "It's usually better to make a widget insensitive than to hide it altogether. Making a widget insensitive informs the user that the functionality is available, but only after a certain condition is met. Hiding the widget gives the impression that the functionality is not available at all or can leave a user wondering why a feature has suddenly \"disappeared\".",
    "Hidden Widgets": "Hidden Widgets",
    "When a widget only makes sense in a certain context (not as an indicator of an action to be performed) sometimes it does make more sense to hide it. Take hardware requirements for example: It may not make sense to show multi-display options if the system only has a single display. Making multi-display options insensitive is not really a helpful hint on this system. Another exemption to this rule is a widget that a user will only look for in context, like the clear button example above. Finally, Keep in mind that insensitive items will still be recognized by screen readers and other assistive tech, while hidden widgets will not.": "When a widget only makes sense in a certain context (not as an indicator of an action to be performed) sometimes it does make more sense to hide it. Take hardware requirements for example: It may not make sense to show multi-display options if the system only has a single display. Making multi-display options insensitive is not really a helpful hint on this system. Another exemption to this rule is a widget that a user will only look for in context, like the clear button example above. Finally, Keep in mind that insensitive items will still be recognized by screen readers and other assistive tech, while hidden widgets will not.",
    "Spacing": "スペース",
    "Windows should have a 12px (minimum) space between any widgets and the window's border.": "ウィンドウは、全てのウィジェットとウィンドウの境界線との間に 12ピクセル (最低) のスペースを空ける必要があります。",
    "Labels should be 12px (minimum) from their widgets.": "ラベルは、それらのウィジェットから 12ピクセル (最低) 空ける必要があります。",
    "If there are section headers present, labels should be indented.": "セクションヘッダーがある場合、ラベルはインデントする必要があります。",
    "Horizontal spacing between buttons is 6px.": "ボタン間の水平方向の間隔は 6px です。",
    "Alignment": "整列",
    "Widgets should be &quot;Justified&quot; so that they align on both the left and right sides. Do not include &quot;descriptor&quot; widgets such as icons or labels in this justification.": "ウィジェットは、左側と右側に位置合わせして \"揃える\" 必要があります。この位置合わせには、アイコンやラベルのような \"記述子\" ウィジェットを含めないでください。",
    "Labels should be right aligned with respect to each other when possible.": "Labels should be right aligned with respect to each other when possible.",
    "Section headers should be left aligned with respect to each other.": "Section headers should be left aligned with respect to each other.",
    "See also: <a href=\"http://uxmovement.com/forms/form-label-proximity-right-aligned-is-easier-to-scan\">Form Label Proximity: Right Aligned is Easier to Scan</a> by UX Movement": "関連項目: <a href=\"http://uxmovement.com/forms/form-label-proximity-right-aligned-is-easier-to-scan\">Form Label Proximity: Right Aligned is Easier to Scan</a> by UX Movement",
    "Infobars": "インフォメーションバー",
    "Infobars provide contextual information and actions to the user with varying levels of severity.": "インフォメーションバーは、さまざまな重要度のレベルでコンテキスト情報とアクションをユーザーに対して提供します。",
    "It is important to determine the severity or type of infobar to use. There are four types of infobars available:": "重要度や使用するインフォメーションバーの種類を決定することが重要です。利用可能なインフォメーションバーのタイプは4つあります。",
    "<strong>Information</strong>: Supplemental information and an optional action the user may perform. Shows as white in the UI.": "<strong>情報</strong>: 補足情報とユーザーが実行することができる任意のアクション。 UIの中で白として表示します。",
    "<strong>Question</strong>: A non-critical question for the user. An answer of some sort is expected, but it's not urgent or severe. Shows as blue in the UI.": "<strong>質問</strong>: ユーザーのためのクリティカルではない質問。ある種の答えを期待しますが、緊急でも深刻でもありません。UIの中で青として表示します。",
    "<strong>Warning</strong>: Lets the user know something unexpected or bad may happen and provides an action to resolve it. Displays as yellow in the UI.": "<strong>警告</strong>: ユーザーに何か予期しない、または悪いことが起こるかもしれないことを伝え、それを解決するためのアクションを提供します。UIの中で黄色として表示します。",
    "<strong>Error</strong>: Informs the user of an error that has occurred and requires a user action to resolve it. Reserved for critical situations. Displays as red in the UI.": "<strong>エラー</strong>: 発生したエラーとそれを解決するためにアクションが必要であることをユーザーに通知します。危機的な状況のために予約されています。UIの中で赤として表示します。",
    "Welcome Screen": "ようこそ画面",
    "The Welcome Screen is a friendly way to help users get started with your app.": "ようこそ画面は、ユーザーがアプリを使い始めるのに役立つフレンドリーな方法です。",
    "Usage": "使い方",
    "Typically a Welcome Screen is used for apps like Noise or Scratch where you have to import or create objects in a library before you can interact with them. This provides your users with a clear path to getting started and points out any immediate steps they must take before your app becomes useful.": "一般的に、ようこそ画面はミュージックや Scratch のようにアプリと対話する前にライブラリへのインポートやオブジェクトの作成を必要とするところで使用されます。ユーザーがはじめるための明確な道筋をユーザーに提供し、アプリが有用になる前に彼らが取る必要がある直接的なステップを指し示します。",
    "Make sure that if your app allows its library to be cleared that the Welcome Screen is shown again instead of an empty list.": "もしあなたのアプリがライブラリをクリアすることができるのであれば、空のリストの代わりにようこそ画面をもう一度表示することを確認してください。",
    "Labeling": "ラベリング",
    "The Welcome Screen consists of two sets of labels:": "ようこそ画面は、二組のラベルで構成されています。",
    "The first set explains the situation and what the Welcome Screen will help you accomplish. As an example, Noise's Welcome Screen explains that your music library is empty and that in order for the library view to become useful, we must add songs to it.": "1組目は状況とようこそ画面がユーザーが何を成し遂げることを手伝うのかを説明します。例えば、ミュージックのようこそ画面は、ミュージックライブラリが空であることとライブラリビューが有用になるためにそれに曲を追加する必要があることを説明します。",
    "The second set of labels consists of the actions that will assist a user in getting started with your app. To use Noise as an example again, one possible action is setting your music folder to an alternate location. First we name the action, &quot;Set Music Folder&quot;. Then, we describe what the action does, &quot;Find your Music folder and import its contents.&quot;": "2組目のラベルは、アプリをはじめる中でユーザを支援するアクションで構成されています。再び、例としてミュージックを使うと、1つの可能なアクションはミュージックフォルダを別の場所に設定することです。まず、私たちはそのアクションに \"ミュージックフォルダの設定\" と名前をつけ、それから、そのアクションが何をするか \"ミュージックフォルダを探しその内容をインポートします。\" と説明します。",
    "Iconography": "図像",
    "Grouped with each action is an icon that helps to quickly visualize it. Most of the time these will be Action icons, but you can use Places icons when importing or setting a location and even Apps icons if you must open a configuration utility.": "Grouped with each action is an icon that helps to quickly visualize it. Most of the time these will be Action icons, but you can use Places icons when importing or setting a location and even Apps icons if you must open a configuration utility.",
    "Source List": "ソースリスト",
    "A source list may be used as a high-level form of navigation. Source lists are useful for showing different locations, bookmarks, or categories within your app.": "A source list may be used as a high-level form of navigation. Source lists are useful for showing different locations, bookmarks, or categories within your app.",
    "Sections": "セレクション",
    "A source list may be separated into different collapsible sections, each with its own heading. For example, a file manager might have a section for bookmarked locations, a section for storage devices attached to the computer, and a section for network locations. These sections help group related items in the source list and allows the user to hide away sections they might not use.": "A source list may be separated into different collapsible sections, each with its own heading. For example, a file manager might have a section for bookmarked locations, a section for storage devices attached to the computer, and a section for network locations. These sections help group related items in the source list and allows the user to hide away sections they might not use.",
    "Avoid nesting expandable sections within a source list if possible; if you find yourself wanting to do this, you may need to rethink the sections.": "Avoid nesting expandable sections within a source list if possible; if you find yourself wanting to do this, you may need to rethink the sections.",
    "Hierarchy": "Hierarchy",
    "Hierarchy is important with source lists, both within the widget itself and within the broader scope of your app.": "Hierarchy is important with source lists, both within the widget itself and within the broader scope of your app.",
    "Sections in the source list should be sorted from most important at the top to least important at the bottom. If you're having a hard time deciding the relative importance of each section, think about which section a user is likely to use more often. Sorting the sections this way ensures that the most important items are always visible, even if the source list is too short to fit all of the items, though of course items at the bottom will still be accessible via scrolling.": "Sections in the source list should be sorted from most important at the top to least important at the bottom. If you're having a hard time deciding the relative importance of each section, think about which section a user is likely to use more often. Sorting the sections this way ensures that the most important items are always visible, even if the source list is too short to fit all of the items, though of course items at the bottom will still be accessible via scrolling.",
    "A source list goes at the left side of a window (or right side for right-to-left languages). Because the user reads in this direction, the sidebar is reinforced as being before (and therefore at a higher level than) the app's contents. ": "A source list goes at the left side of a window (or right side for right-to-left languages). Because the user reads in this direction, the sidebar is reinforced as being before (and therefore at a higher level than) the app's contents.",
    "Buttons": "ボタン",
    "Buttons are an incredibly important widget to understand since your app will undoubtedly contain them. ": "Buttons are an incredibly important widget to understand since your app will undoubtedly contain them.",
    "Tool Buttons": "ツールボタン",
    "Tool Buttons are almost always icon-only and do not provide a button border. They should not be accompanied by a label.": "ツールボタンは、ほとんど常にアイコンだけであり、ボタンの境界線はありません。これらは、ラベルが添付されてはなりません。",
    "Tooltips": "ツールチップ",
    "All Tool Buttons should have tooltips, since they do not contain a label. This assists users with disabilities as well as giving a translation for an unrecognized icon. Tooltips should be done in Sentence Case.": "ツールボタンはラベルを含まないため、全てのツールボタンはツールチップが必要です。これは、障害のあるユーザーだけでなく、認識されないアイコンの翻訳を与えることを支援します。ツールチップは、センテンスケースで行う必要があります。",
    "Like text button labels, a tooltip should clearly describe what will happen when the button is pressed.": "テキストボタンのラベルと同様に、ツールチップはボタンが押されたときに何が起こるかを明確に説明しなければなりません。",
    "Text Buttons": "テキストボタン",
    "Text Button labels should be done in Title Case.": "テキストボタンのラベルは、タイトルケースで行う必要があります。",
    "Like menu items, Text Button labels should consist of an Action or a Location but not a status. Make sure that a button's label clearly describes what will happen when it is pressed.": "Like menu items, Text Button labels should consist of an Action or a Location but not a status. Make sure that a button's label clearly describes what will happen when it is pressed.",
    "&quot;Remove Account&quot;, &quot;Transfer to Jim's Laptop&quot;, and &quot;Import 20 Songs&quot; are good labels.": "\"Remove Account\"、\"Transfer to Jim's Laptop\"、\"Import 20 Songs\" は良いラベルです。",
    "&quot;OK&quot;, &quot;Get more storage!&quot;, and &quot;Low Battery&quot; are not good button labels. The &quot;Get more storage!&quot; label uses incorrect capitalization and unnecessary punctuation. With the other two labels, It's not very clear what will happen when these buttons are clicked.": "\"OK\", \"Get more storage!\", and \"Low Battery\" are not good button labels. The \"Get more storage!\" label uses incorrect capitalization and unnecessary punctuation. With the other two labels, It's not very clear what will happen when these buttons are clicked.",
    "Since Text buttons have a clear and explicit label, it's usually unnecessary to give them a tooltip.": "Since Text buttons have a clear and explicit label, it's usually unnecessary to give them a tooltip.",
    "Linked Buttons": "リンクされたボタン",
    "Linked Buttons are used to group actions that are either similar in nature or mutually exclusive. For example, they could group text options like Bold, Italic, and Underline. Or they can be used to group mutually exclusive states like Grid, List, or Column view.": "リンクされたボタンは、本質的に類似または相互に排他的である、グループのアクションに使用されます。たとえば、太字、斜体、下線のようなテキストオプションをグループ化できます。または、グリッド、リスト、またはカラム表示のような相互に排他的な状態をグループ化するために使用することができます。",
    "Linked Buttons should never contain colored icons. Only 16px symbolic icons OR text. Do not mix icons and text.": "リンクされたボタンは、色付きアイコンを含んではなりません。16px の記号的アイコン、または、テキストのみです。アイコンとテキストを混在させないでください。",
    "<a href=\"http://uxmovement.com/buttons/why-the-ok-button-is-no-longer-okay/\">Why The OK Button Is No Longer Okay</a> by UX Movement": "<a href=\"http://uxmovement.com/buttons/why-the-ok-button-is-no-longer-okay/\">Why The OK Button Is No Longer Okay</a> by UX Movement",
    "AppMenu": "アプリメニュー",
    "The AppMenu is an optional menu which is opened using the gear-shaped icon on the far-right of an app's toolbar. It provides relevant menu items in place of the traditional &quot;File, Edit, View...&quot; menu bar.": "アプリメニューはアプリのツールバーの右端に歯車状のアイコンを使用して開かれる、オプションメニューです。伝統的な \"ファイル、編集、表示...\"メニューバーの代わりに、関連するメニュー項目を提供します。",
    "You should first consider if your app needs this widget. While most apps may have one, your app may not necessarily need an AppMenu.": "あなたのアプリがこのウィジェットを必要とする場合は最初に検討するべきです。ほとんどのアプリにはあるかもしれませんが、あなたのアプリは必ずしもアプリメニューを必要としないかもしれません。",
    "When adding items to your AppMenu, consider the following:": "アプリメニューに項目を追加するときは、次の点を考慮してください:",
    "Items should be relevant and useful. It's not acceptable to duplicate items that are found in your main UI here.": "項目は適切かつ有益であるべきです。ここには、メインUIに見られる、重複した項目は許容されません。",
    "If the app includes a &quot;preferences&quot; window, it should be available from the AppMenu.": "アプリに \"環境設定\" ウィンドウが含まれている場合、それはアプリメニューから利用可能であるべきです。",
    "There should be an item for the &quot;About&quot; dialog which contains links to the project's bug tracker, help, etc.": "プロジェクトのバグトラッカー、ヘルプなどへのリンクが含まれている \"アプリについて\" ダイアログへの項目があるべきです。",
    "If an AppMenu is displayed, a menu bar should not be, and vice-versa.": "アプリメニューが表示される場合は、メニューバーがあってはなりません。その逆も同じです。",
    "Search Fields": "検索フィールド",
    "Apps that support the searching or filtering of content should include a search field on the right side of the app's toolbar (to the left of the AppMenu). This gives users a predictable place to see whether or not an app supports searching, and a consistent location from which to search. Gtk+ provides a convenient complex widget for this purpose called <a href=\"http://valadoc.elementary.io/#!api=gtk+-3.0/Gtk.SearchEntry\">Gtk.SearchEntry</a>.": "Apps that support the searching or filtering of content should include a search field on the right side of the app's toolbar (to the left of the AppMenu). This gives users a predictable place to see whether or not an app supports searching, and a consistent location from which to search. Gtk+ provides a convenient complex widget for this purpose called <a href=\"http://valadoc.elementary.io/#!api=gtk+-3.0/Gtk.SearchEntry\">Gtk.SearchEntry</a>.",
    "Behavior": "振る舞い",
    "If it is possible to include search functionality within your app, it is best to do so. Any list or representation of multiple pieces of data should be searchable using a search field that follows these rules:": "If it is possible to include search functionality within your app, it is best to do so. Any list or representation of multiple pieces of data should be searchable using a search field that follows these rules:",
    "Results should be instantly shown as you type. This helps your app to appear faster and is more useful than having to hit &quot;Enter&quot; and wait. Exceptions may be made if the data is not stored locally.": "Results should be instantly shown as you type. This helps your app to appear faster and is more useful than having to hit \"Enter\" and wait. Exceptions may be made if the data is not stored locally.",
    "In most cases, the search should be case-insensitive; users should not be expected to provide the exact capitalization. A good compromise is &quot;smart case&quot; where case is respected whenever the user intentionally types lower and upper case letters.": "In most cases, the search should be case-insensitive; users should not be expected to provide the exact capitalization. A good compromise is \"smart case\" where case is respected whenever the user intentionally types lower and upper case letters.",
    "Search fields should contain hint text that describes what will be search. You can set this using the entry property <a href=\"http://www.valadoc.org/#!api=gtk+-3.0/Gtk.Entry.placeholder_text\">&quot;placeholder_text&quot;</a>.": "Search fields should contain hint text that describes what will be search. You can set this using the entry property <a href=\"http://www.valadoc.org/#!api=gtk+-3.0/Gtk.Entry.placeholder_text\">\"placeholder_text\"</a>.",
    "Most search fields should use the format &quot;Search OBJECTS&quot; where OBJECTS is something to be searched, like Contacts, Accounts, etc.": "Most search fields should use the format \"Search OBJECTS\" where OBJECTS is something to be searched, like Contacts, Accounts, etc.",
    "If the search field interacts with a search service, the hint text should be the name of that service such as &quot;Google&quot; or &quot;Yahoo!&quot;": "If the search field interacts with a search service, the hint text should be the name of that service such as \"Google\" or \"Yahoo!\"",
    "Checkboxes &amp; Switches": "チェックボックスとスイッチ",
    "Checkboxes": "チェックボックス",
    "Checkboxes present a way for users to select items from a list.": "チェックボックスはリストから項目を選択する手段を提供します。",
    "Use checkboxes when users are making a selection of items.\nMake sure that a user can toggle the state of the checkbox by clicking on the label associated with the checkbox.": "Use checkboxes when users are making a selection of items.\nMake sure that a user can toggle the state of the checkbox by clicking on the label associated with the checkbox.",
    "Labels associated with Checkboxes should usually be nouns or nounal phrases.": "通常、チェックボックスと関連付けられているラベルの文字列は名詞または名詞句であるべきです。",
    "Switches": "スイッチ",
    "Switches present a way for users to toggle certain features or behaviors &quot;on&quot; or &quot;off&quot;.": "スイッチはユーザーに機能や振る舞いを\"オン\"または\"オフ\"で切り替える手段を提供します。",
    "Don't use switches to include related items as part of a list, instead use a checkbox. Think of switches as acting on independent services and checkboxes as including objects in a list. This is an important distinction to make.": "Don't use switches to include related items as part of a list, instead use a checkbox. Think of switches as acting on independent services and checkboxes as including objects in a list. This is an important distinction to make.",
    "Notice that the option &quot;Record from microphone&quot; is a great candidate for a switch. You are enabling and disabling this recording service.": "Notice that the option \"Record from microphone\" is a great candidate for a switch. You are enabling and disabling this recording service.",
    "However, if there are two options &quot;Record system sounds&quot; and &quot;Record from microphone&quot; you are now dealing with a list of related items to include as part of a larger recording service (who's on and off state is independent of what services it includes). In this case, a checkbox is more appropriate to denote this inclusion.": "However, if there are two options \"Record system sounds\" and \"Record from microphone\" you are now dealing with a list of related items to include as part of a larger recording service (who's on and off state is independent of what services it includes). In this case, a checkbox is more appropriate to denote this inclusion.",
    "When possible, directly call out the service you are acting on. Do not use words that describe the state that the widget is describing like &quot;Enable Multitouch&quot;, &quot;Use Multitouch&quot;, or &quot;Disable Multitouch&quot;. This can create a confusing situation logically. Instead, simply use the noun and write &quot;Multitouch&quot;.": "When possible, directly call out the service you are acting on. Do not use words that describe the state that the widget is describing like \"Enable Multitouch\", \"Use Multitouch\", or \"Disable Multitouch\". This can create a confusing situation logically. Instead, simply use the noun and write \"Multitouch\".",
    "See also: <em><a href=\"http://uxmovement.com/forms/ways-to-make-checkboxes-radio-buttons-easier-to-click/\">3 Ways to Make Checkboxes, Radio Buttons Easier to Click</a></em> by UX Movement": "関連項目: <em><a href=\"http://uxmovement.com/forms/ways-to-make-checkboxes-radio-buttons-easier-to-click/\">3 Ways to Make Checkboxes, Radio Buttons Easier to Click</a></em> by UX Movement",
    "Notebooks": "ノートブック",
    "Notebooks are a type of widget that allow showing one of multiple pages in an app, also colloquially referred to as &quot;tab bars.&quot;": "ノートブックは、アプリ内の複数のページのいずれかの表示を可能にするタイプのウィジェットであり、口語では \"タブ・バー\" と呼ばれます。",
    "Static Notebook": "スタティックノートブック",
    "A Static Notebook is a small set of unchanging tabs, commonly seen in preferences or settings screens. The tabs appear as linked buttons centered at the top of the content area. A Static Notebook should typically contain two to five tabs.": "スタティックノートブックは、一般的に環境設定や設定画面で見られる変化しないタブの小さなセットです。タブはコンテンツ領域の上部の中央にリンクボタンとして表示されます。スタティックノートブックは、通常、2から5個のタブが含まれている必要があります。",
    "Dynamic Notebook": "ダイナミックノートブック",
    "A Dynamic Notebook is a way for an app to provide user-managable tabbing functionality, commonly seen in web browsers. The tabs appear attached to the toolbar on their own tab bar above the relevant content. Tabs are able to be rearranged and closed and a &quot;new tab&quot; button is at the left ot the notebook widget.": "A Dynamic Notebook is a way for an app to provide user-managable tabbing functionality, commonly seen in web browsers. The tabs appear attached to the toolbar on their own tab bar above the relevant content. Tabs are able to be rearranged and closed and a \"new tab\" button is at the left ot the notebook widget.",
    "Iconography is a key part of elementary OS. Icons make up the majority of the UI that your user will be actively engaging with; they're what bring the system to life and cater to the powerful recognition engine of the human brain.": "Iconography is a key part of elementary OS. Icons make up the majority of the UI that your user will be actively engaging with; they're what bring the system to life and cater to the powerful recognition engine of the human brain.",
    "Shape": "形状",
    "Your icon should have a distinctive shape/silhouette to improve its recognition. This shape should not be too complicated, but the icon should not always be a rounded rectangle.": "アイコンは、その認識性を高めるために独特の形状/シルエットを持つべきです。この形状は複雑すぎてはいけませんが、いつも丸みを帯びた矩形であってはなりません。",
    "Warning dialog icon": "警告ダイアログアイコン",
    "Chat icon": "チャットアイコン",
    "Photos icon": "フォトアイコン",
    "Videos icon": "ビデオアイコン",
    "Online accounts icon": "オンラインアカウントアイコン",
    "Terminal icon": "ターミナルアイコン",
    "Metaphors": "メタファー",
    "If you're creating an icon for a hardware device or a file type (such as those for MimeType or Device icons), its shape is typically a visual representation of its real-world counterparts. For example, the icon for a camera is a stylized camera.": "ハードウェアデバイスまたはファイルの種類 (MIME タイプまたはデバイスアイコン用のものなど) のアイコンを作成しているのであれば、その形状は一般的にはそれと実世界で対応するものを視覚的に表現したものです。例えば、カメラアイコンはカメラを表現したものです。",
    "Camera icon": "カメラアイコン",
    "Hard disk icon": "ハードディスクアイコン",
    "Mouse icon": "マウスアイコン",
    "Package icon": "パッケージアイコン",
    "HTML Text icon": "HTML テキストアイコン",
    "Computer icon": "コンピューターアイコン",
    "Action Icons": "アクションアイコン",
    "Action icons are used to represent common user actions, such as &quot;delete&quot;, &quot;play&quot;, or &quot;save&quot;. These icons are mostly found in app toolbars, but can be found throughout the OS.": "アクションアイコンは、\"削除\"、\"再生\"、または\"保存\"といった、一般的なユーザアクションを表すために使用されます。これらのアイコンはたいていはアプリのツールバーで見られますが、OS全体で見るることができます。",
    "Previous icon": "前へアイコン",
    "Next icon": "次へアイコン",
    "Document export icon": "ドキュメントエクスポートアイコン",
    "Print icon": "印刷アイコン",
    "Save icon": "保存アイコン",
    "Delete icon": "削除アイコン",
    "Cut icon": "カットアイコン",
    "Undo icon": "元に戻すアイコン",
    "Inverse icon": "逆アイコン",
    "Play icon": "再生アイコン",
    "New tag icon": "新しいタグアイコン",
    "Menu icon": "メニューアイコン",
    "If your app makes use one of these common actions, reference its corresponding icon instead of creating your own. This ensures a consistent user experience and aids in user recognition of common functions.": "If your app makes use one of these common actions, reference its corresponding icon instead of creating your own. This ensures a consistent user experience and aids in user recognition of common functions.",
    "If your app has a unique action, you may need to create your own. When doing this, try to follow the look and feel of existing action icons, and include it along with your app.": "If your app has a unique action, you may need to create your own. When doing this, try to follow the look and feel of existing action icons, and include it along with your app.",
    "Icon Sizes": "アイコンサイズ",
    "elementary OS uses <strong>six</strong> main icon sizes throughout the OS and it's best to include all six as part of your application.": "elementary OS は <strong>6</strong> つのメインアイコンサイズをOS全体で使います。あなたのアプリケーションの一部として、6つすべてを含めることをお勧めします。",
    "16 pixel Terminal icon": "16 ピクセル ターミナルアイコン",
    "24 pixel Terminal icon": "24 ピクセル ターミナルアイコン",
    "32 pixel Terminal icon": "32 ピクセル ターミナルアイコン",
    "48 pixel Terminal icon": "48 ピクセル ターミナルアイコン",
    "64 pixel Terminal icon": "64 ピクセル ターミナルアイコン",
    "128 pixel Terminal icon": "128 ピクセル ターミナルアイコン",
    "Design each icon for the size it's meant to be viewed at. In other words, do not design one icon and resize it to fill the remaining sizes, the best result is when each icon is designed individually. For more information about this practice (called &quot;pixel-fitting&quot;) and its importance, we recommend reading <a href=\"http://dcurt.is/pixel-fitting\">Dustin Curtis' article, Pixel-fitting</a>.": "Design each icon for the size it's meant to be viewed at. In other words, do not design one icon and resize it to fill the remaining sizes, the best result is when each icon is designed individually. For more information about this practice (called \"pixel-fitting\") and its importance, we recommend reading <a href=\"http://dcurt.is/pixel-fitting\">Dustin Curtis' article, Pixel-fitting</a>.",
    "Color Palette": "カラーパレット",
    "Color, don't be afraid to use it! Many of the elementary icons use vibrant colors; it's best to reserve muted tones and greys for boring system icons.": "色、それを使うことを恐れてはいけません！ elementary アイコンの多くは鮮やかな色を使います; 落ち着いた色彩やグレーは退屈なシステムアイコンのためにとっておくことをお勧めします。",
    "Mail icon": "メールアイコン",
    "RSS Reader icon": "RSSリーダーアイコン",
    "Web browser icon": "Web ブラウザアイコン",
    "Network icon": "ネットワークアイコン",
    "Calendar icon": "カレンダーアイコン",
    "Colors do have their connotations, so be cognisant of this when picking them. For instance: red is usually associated with error or &quot;danger&quot; and orange with warnings. But you can use these color connotations to help convey your icon's meaning, such as green for &quot;go&quot;.": "色は意味合いを持っているので、色を選ぶときはこのことを認識してください。例えば、赤は通常エラーや\"危険\"、オレンジは警告と関連付けられます。しかし、 \"行く\" のための緑のように、色の意味合いをあなたのアイコンの意味を伝えるために使うことができます。",
    "Symbolic Icons": "記号的なアイコン",
    "Symbolic icons are common system icons, that symbolize files, devices, or directories and are also used to represent common actions like cut, copy, and save.": "記号的なアイコンは共通のシステムアイコン、記号化されたファイル、デバイスやディレクトリ、であり、そしてまた、カット、コピーやセーブのような一般的なアクションを表すために使用されます。",
    "Each symbolic icon is a reduced form of its full-color counter part. This minimal design ensures readability and clarity even at small sizes.": "記号的なアイコンは対応するフルカラーのアイコンを縮小した形です。この最小限のデザインは、小さなサイズでも読みやすさと明確さを保証します。",
    "Symbolic vs. colored icon": "記号的 vs. 色付きアイコン",
    "Colored vs. Symbolic Icons": "色付き vs. 記号的なアイコン",
    "The use of full-color and symbolic icons is not interchangeable, both have appropriate uses.": "フルカラーと記号的なアイコンの用途は交換可能ではなく、それぞれに適切な用途があります。",
    "Full color icons are best used for:": "フルカラーアイコンの最適な用途:",
    "application icons": "アプリケーションアイコン",
    "files and mimetypes": "ファイルと MIME タイプ",
    "device icons": "デバイスアイコン",
    "places": "場所",
    "Symbolic icons are best used:": "記号的なアイコンの最適な用途:",
    "on buttons": "ボタンの上",
    "in lists or text fields": "リストまたはテキスト項目の中",
    "for status indicators": "ステータスインジケーター",
    "when the background is dynamic or semi-transparent, for example: media overlays": "背景が動的または半透明のとき、例えば: メディアオーバーレイ",
    "Composition": "構造",
    "There are three aspects to note when designing an elementary icon:": "elementary アイコンをデザインするときに注意すべき3つの側面があります:",
    "Its baseline (highlighted in": "Its baseline (highlighted in",
    "blue": "青",
    ") to ensure that all icons of one size line up along the bottom when in a row (much like text).": ") to ensure that all icons of one size line up along the bottom when in a row (much like text).",
    "Its mean line height (": "Its mean line height (",
    "green": "緑",
    "), also known as the center line of your canvas.": "), also known as the center line of your canvas.",
    "The x-height (shown in": "The x-height (shown in",
    "red": "赤",
    ") or &quot;how tall&quot; your icon is.": ") or \"how tall\" your icon is.",
    "Composition breakdown of elementary Videos icon": "elementary ビデオアイコンの構造分析",
    "Composition breakdown of elementary Terminal icon": "elementary ターミナルアイコンの構造分析",
    "Keeping these lines in mind while designing, means you can place elements along them so icons appear more consistent when put together. For example, notice how some elements in both the Terminal and Videos icon above relate to the mean line.": "Keeping these lines in mind while designing, means you can place elements along them so icons appear more consistent when put together. For example, notice how some elements in both the Terminal and Videos icon above relate to the mean line.",
    "Common Measurements": "一般的な寸法",
    "If you're designing a square-shaped icon, like the one for Terminal seen above, then consider using these common measurements (in pixels) for each icon.": "上で見たターミナルのアイコンのような、正方形のアイコンをデザインする場合、各アイコンでこれらの一般的な寸法 (ピクセル) を使用することを検討してください。",
    "Canvas Size": "キャンバスサイズ",
    "Base Line": "ベースライン",
    "x-Height": "x-Height",
    "Mean Line Height": "Mean Line Height",
    "16x16": "16x16",
    "24x24": "24x24",
    "32x32": "32x32",
    "48x48": "48x48",
    "64x64": "64x64",
    "128x128": "128x128",
    "Exceptions": "例外",
    "However there are exceptions. Many icons (especially mimetype icons) have ascending and descending elements, which are those elements that extend beyond the base line and x-height line (shown here in": "However there are exceptions. Many icons (especially mimetype icons) have ascending and descending elements, which are those elements that extend beyond the base line and x-height line (shown here in",
    "orange": "オレンジ",
    "Composition exception example in elementary Video icon": "elementary ビデオアイコンの構造例外",
    "Composition exception example in elementary Terminal icon": "elementary ターミナルアイコンの構造の例外",
    "Rounder components will generally require some overshoot, to compensate for the optical illusion that makes them look smaller than their rectangular counterparts.": "Rounder components will generally require some overshoot, to compensate for the optical illusion that makes them look smaller than their rectangular counterparts.",
    "Outlines &amp; Contrast": "輪郭とコントラスト",
    "All elementary icons have a thin outline (stroke) to improve their contrast. The width of this stroke is <strong>one</strong> pixel for all icons, at every size.\nThe color of the outline is a darker variant (30% darker) of the primary color of the icon. For instance, in the calendar icon below, the green header has a stroke of a darker green.": "全ての elementary アイコンはコントラストを向上するために細い輪郭 (線) を持っています。この線の幅は、全てのアイコン、各サイズ、<strong>1</strong>ピクセルです。\n輪郭の色はアイコンの原色を暗く(30% 暗く)したものです。例えば、下のカレンダーアイコンでは緑のヘッダーには暗い緑の線があります。",
    "Example of contrast in elementary Calendar icon": "elementary カレンダーアイコンにおけるコントラストの例",
    "Example of contrast in elementary Settings icon": "elementary 設定アイコンにおけるコントラストの例",
    "To further improve contrast, strokes are also semi-transparent. This ensures that icons appear sharp against a variety of backgrounds. Also, if the element is near-white, this stroke acts as a border and contains, rather than overlaps, its corresponding element. See the above icon for an example of this.": "To further improve contrast, strokes are also semi-transparent. This ensures that icons appear sharp against a variety of backgrounds. Also, if the element is near-white, this stroke acts as a border and contains, rather than overlaps, its corresponding element. See the above icon for an example of this.",
    "Shadows &amp; Highlights": "影とハイライト",
    "If you picture an icon sitting on a shelf, facing you, with a light source above it, you may see a small fuzzy shadow near the bottom. Also, since the edges of an object tends to reflect more light due to your position relative to it and to the light source, they will have a highlight. Both these effects are something elementary icons emulate in their design to lend them a degree of realism.": "If you picture an icon sitting on a shelf, facing you, with a light source above it, you may see a small fuzzy shadow near the bottom. Also, since the edges of an object tends to reflect more light due to your position relative to it and to the light source, they will have a highlight. Both these effects are something elementary icons emulate in their design to lend them a degree of realism.",
    "Edge Highlight": "縁のハイライト",
    "To apply the edge highlight effect to your icon, draw a subtle, <strong>1 pixel</strong>, inner stroke as a highlight. This outline is slightly brighter at the top and the bottom than it is at the edges.": "アイコンにエッジ強調効果を適用するため、かすかな、<strong>1 ピクセル</strong>の、線をハイライトとして内側に描いてください。この輪郭は上部と下部が縁よりも少し明るくなっています。",
    "Edge highlight example in elementary Music icon": "elementary ミュージックアイコンにおける縁のハイライトの例",
    "Drop Shadow": "影を落とす",
    "To draw the shadow, you'll start by drawing a rectangle. Then fill it with a linear gradient that is perpendicular to the bottom margin of the icon. The gradient has three stops, the first and last of which have zero opacity. Then this entire shape is set to <strong>60% opacity</strong>.": "To draw the shadow, you'll start by drawing a rectangle. Then fill it with a linear gradient that is perpendicular to the bottom margin of the icon. The gradient has three stops, the first and last of which have zero opacity. Then this entire shape is set to <strong>60% opacity</strong>.",
    "Next create two smaller rectangles to &quot;bookend&quot; the larger. Fill each with a gradient identical to the first, but make it radial instead. Center the radial gradient in the middle of a short edge with each stop directly out to the nearest edge—see below for an example. Both these rectangles are also set to <strong>60% opacity</strong>.": "Next create two smaller rectangles to \"bookend\" the larger. Fill each with a gradient identical to the first, but make it radial instead. Center the radial gradient in the middle of a short edge with each stop directly out to the nearest edge—see below for an example. Both these rectangles are also set to <strong>60% opacity</strong>.",
    "Pictogram Shadow": "Pictogram Shadow",
    "If your icon has a pictogram, such as the play triangle in the icon below, you can give it a drop shadow to make it stand out from the background of the icon.": "If your icon has a pictogram, such as the play triangle in the icon below, you can give it a drop shadow to make it stand out from the background of the icon.",
    "To do this, first duplicate the pictogram, fill it with solid black and set it to <strong>15% opacity</strong>. Next, shift it 1 pixel down and place it below the pictogram. Create a copy of this shadow and give it a 1 pixel stroke (also black) and adjust this element to <strong>7% opacity</strong>.": "To do this, first duplicate the pictogram, fill it with solid black and set it to <strong>15% opacity</strong>. Next, shift it 1 pixel down and place it below the pictogram. Create a copy of this shadow and give it a 1 pixel stroke (also black) and adjust this element to <strong>7% opacity</strong>.",
    "Icon Materials": "Icon Materials",
    "You are free to add gloss (extra highlights) to your icon but this is only a good idea if you're emulating a surface that is more-reflective in real life (such as plastic, glass, etc.) For instance, a sheet of paper is not glossy therefore a icon emulating paper would not be either.": "You are free to add gloss (extra highlights) to your icon but this is only a good idea if you're emulating a surface that is more-reflective in real life (such as plastic, glass, etc.) For instance, a sheet of paper is not glossy therefore a icon emulating paper would not be either.",
    "Dos and Don'ts": "Dos and Don'ts",
    "Below are some &quot;do and don't&quot; examples to consider when creating icons for your app.": "Below are some \"do and don't\" examples to consider when creating icons for your app.",
    "Your icon should not be overly complicated. Keep in mind that since there are smaller sizes, the elements that make up your icon should be distinguishable when at those sizes.": "Your icon should not be overly complicated. Keep in mind that since there are smaller sizes, the elements that make up your icon should be distinguishable when at those sizes.",
    "Your icon should make use of transparent elements, and should not simply be full-frame images. Where you can, distinguish your icon with subtle yet appealing visuals.": "Your icon should make use of transparent elements, and should not simply be full-frame images. Where you can, distinguish your icon with subtle yet appealing visuals.",
    "Don't make a thin icon. Your icon's weight should be comparable to that of other icons. An overly thin icon won't stand out well on many backgrounds.": "Don't make a thin icon. Your icon's weight should be comparable to that of other icons. An overly thin icon won't stand out well on many backgrounds.",
    "If you would like to give your icon a tilted perspective, it should tilt backward (not forward).": "If you would like to give your icon a tilted perspective, it should tilt backward (not forward).",
    "Text": "テキスト",
    "Although elementary primarily uses graphics as a means of interaction, text is also widely used for things like button labels, tooltips, menu items, dialog messages, and more. Using text consistently and clearly both in terminology and format is an extremely important part of designing your app and helps add to the overall cohesiveness of the elementary platform.": "Although elementary primarily uses graphics as a means of interaction, text is also widely used for things like button labels, tooltips, menu items, dialog messages, and more. Using text consistently and clearly both in terminology and format is an extremely important part of designing your app and helps add to the overall cohesiveness of the elementary platform.",
    "<strong>Writing Style</strong>. Keep your text understandable and consistent with the rest of elementary.": "<strong>ライティングスタイル</strong>。テキストは理解可能で他の elementary と一貫性がある状態を保ってください。",
    "<strong>Language</strong>. Keep other languages in mind.": "<strong>言語</strong>。心に他の言語を留めてください。",
    "<strong>Capitalization</strong>. What, when, and where to capitalize.": "<strong>キャピタライゼーション</strong>。何を、いつ、どこで大文字にするか。",
    "<strong>Punctuation</strong>. Avoid common mistakes and follow convention.": "<strong>句読点</strong>。一般的なミスを避けて規則に従ってください。",
    "<strong>Using Ellipsis</strong>. When, where, and why to use ellipsis.": "<strong>省略の使用</strong>。何を、いつ、どこで省略するのか。",
    "<strong>Naming Menu Items</strong>. Keep your menus clear and consistent.": "<strong>メニュー項目の命名</strong>。メニューを明確かつ一貫性のある状態にしてください。",
    "Writing Style": "Writing Style",
    "Use the following rules to keep your text understandable and consistent:": "Use the following rules to keep your text understandable and consistent:",
    "Be Brief": "簡潔にする",
    "Don't give the user a bunch of text to read; a lengthy sentence can appear daunting and may discourage users from actually reading your messaging. Instead, provide the user with short and concise text.": "たくさんの読むテキストをユーザーに与えてはいけません。長い文は手強く見えますし、メッセージを実際に読むことをやめさせてしまうかもしれません。その代わりに、短く簡潔なテキストをユーザに提供してください。",
    "<strong>Bad</strong>: It doesn't look like you have any music in your library. You can use Noise to organize your music, add more, and listen to the music you already have. To get started, click on the &quot;Add&quot; button, then follow the prompts. Once you're done, your Music will be displayed here.": "<strong>Bad</strong>: It doesn't look like you have any music in your library. You can use Noise to organize your music, add more, and listen to the music you already have. To get started, click on the \"Add\" button, then follow the prompts. Once you're done, your Music will be displayed here.",
    "<strong>Better</strong>: Get Some Tunes. Noise can't seem to find your contacts. [Buttons to import or create contacts]": "<strong>Better</strong>: Get Some Tunes. Noise can't seem to find your contacts. [Buttons to import or create contacts]",
    "Think Simple": "シンプルに考える",
    "Assume the user is intelligent, but not technical. Avoid long, uncommon words and focus on using common, simple verbs, nouns, and adjectives. Never use technical jargon.": "ユーザーは賢いが技術者ではないと思ってください。長い、珍しい言葉を避け、一般的な、シンプルな動詞、名詞、形容詞を使うことに力を入れてください。専門用語を使用しないでください。",
    "<strong>Bad</strong>:37 audio format files have been successfully imported into the songs database.": "<strong>悪い</strong>:37 オーディオフォーマットファイルが正常に楽曲データベースにインポートされました。",
    "<strong>Better</strong>: Successfully added 37 songs.": "<strong>より良い</strong>: 37 曲の追加が成功しました。",
    "Get To The Bottom Line": "Get To The Bottom Line",
    "Put the most important information at the beginning of your text. If the user stops reading, they'll still have what they need in mind.": "テキストの先頭に最も重要な情報を入れてください。ユーザーが読むのを止めても、ユーザーは、気に留めておかなければならないことを持っています。",
    "<strong>Bad</strong>: Your network connection might be down because Lingo could not find any definitions. Check it and try again.": "<strong>悪い</strong>: あなたのネットワークはダウンしているかもしれません。なぜならば Lingo は定義を見つけられませんでした。確認してもう一度実行してください。",
    "<strong>Better</strong>: No definition found. Check your network connection and try again.": "<strong>より良い</strong>: 定義が見つかりません。ネットワーク接続を確認してもう一度実行してください。",
    "Don't Repeat Yourself": "繰り返しを避ける",
    "Repetition can be annoying and adds unnecessary length to your messaging.": "繰り返しは迷惑になりえますし、メッセージを不必要に長くします。",
    "<strong>Bad</strong>: Your email address, johndoe@email.com, has been added. To access johndoe@email.com, click on &quot;johndoe@email.com&quot; above.": "<strong>Bad</strong>: Your email address, johndoe@email.com, has been added. To access johndoe@email.com, click on \"johndoe@email.com\" above.",
    "<strong>Better</strong>: Your email address has been added. To access it, click &quot;johndoe@email.com&quot; above.": "<strong>Better</strong>: Your email address has been added. To access it, click \"johndoe@email.com\" above.",
    "Use Visual Hierarchy": "視覚の階層を使う",
    "Visual hierarchy aids users in reading and comprehending your text as well as knowing what is most important. Use headings and other text styles appropriately.": "視覚の階層は、ユーザーが読むことやテキストを理解することを支援するだけではなく何が最も重要なのかを知ることも支援します。適切に見出しや他のテキストスタイルを使用してください。",
    "<strong>Bad</strong>:": "<strong>悪い</strong>:",
    "No files are open. Open a file to begin editing.": "ファイルが開かれていません。編集を開始するためにはファイルを開いてください。",
    "<strong>Better</strong>:": "<strong>より良い</strong>:",
    "No files are open.": "ファイルが開かれていません。",
    "Open a file to begin editing.": "編集を開始するためにはファイルを開いてください。",
    "Language": "言語",
    "While much of elementary is developed in English, there are many users who do not know English or prefer their native language. While putting text into your app, keep the following in mind:": "elementary の多くは英語で開発されていますが、英語を知らないユーザーや母国語を好むユーザーが多くいます。アプリにテキストを入れる場合は、次の点に注意してください:",
    "<strong>Make it translatable.</strong> Always, always make your text translatable using the built-in methods. It can't be translated if you don't make it translatable. Include punctuation in translatable strings.": "<strong>翻訳可能としてください。</strong> 常に、組み込みメソッドを使用して、テキストを常に翻訳可能としてください。あなたが翻訳可能にしないと翻訳できません。翻訳可能な文字列では句読点を含めてください。",
    "<strong>Avoid culture-specific references.</strong> Remember that users of another language are going to be using your app. Specific metaphors or references will likely be lost on or downright confusing to other those users. Instead, use universal text.": "<strong>文化固有の参照を避けてください。</strong> 別の言語のユーザーがアプリを使用しようとすることを忘れないで下さい。特定の隠喩や参照は他のユーザーを迷わせたり完全に混乱させる可能性があります。その代わりに、ユニバーサルテキストを使用してください。",
    "<strong>Keep differences in mind.</strong> Remember that other languages and cultures often use different currencies, date formats, punctuation, and more. Always keep these things in mind when developing your app's text, and use the system-provided methods for translating these items when possible.": "<strong>違いを心に留めてください。</strong> 他の言語や文化は、多くの場合、異なる通貨、日付形式、句読点などを使用することを忘れないでください。アプリのテキストを開発する際はこれらのことを常に念頭に置いてください。そして、可能な場合は、これらの項目を変換するためにシステムが提供するメソッドを使用してください。",
    "<strong>Right-to-left.</strong> It's easy to forget about right-to-left (RTL) languages if you're so used to using left-to-right. Make sure your app still works well when used with RTL layouts, and always use RTL-compatible widgets when developing your app.": "<strong>右から左。</strong> 左から右に書く言語に慣れている場合、右から左に書く言語 (RTL) について忘れがちです。 RTL レイアウトで使われた場合もうまく機能することを確認して、アプリを開発するときは常に RTL 互換ウィジェットを使用してください。",
    "Capitalization": "キャピタライゼーション",
    "All textual user interface items, including labels, buttons, and menus, should use one of two capitalization styles: sentence case or title case.": "ラベル、ボタン、およびメニューを含むすべてのテキストのユーザーインターフェイス項目は、2つの大文字スタイルの1つを使用する必要があります: センテンスケースまたはタイトルケース。",
    "Sentence Case": "センテンスケース",
    "Sentence case means you capitalize like in a standard sentence or phrase.": "センテンスケースは通常の文やフレーズのように大文字にすることを意味します。",
    "Only the first letter of the phrase and the first letter of proper nouns are capitalized.\nUsed for labels and descriptive text.": "文の最初の1文字と固有名詞の最初の1文字を大文字にします。\nラベルや説明テキストに使用されます。",
    "ex. &quot;Always open MPEG files with Marlin&quot; next to a checkbox.": "例. チェックボックスの隣の \"Always open MPEG files with Marlin\"",
    "ex. &quot;Read news feeds&quot; for the description of an RSS reader.": "例. RSS リーダーの説明の \"Read news feeds\"",
    "ex. &quot;This folder is empty&quot; in a file manager.": "例. ファイルマネージャーの \"This folder is empty\"",
    "Title Case": "タイトルケース",
    "Title case means you capitalize like a book or article title.": "タイトルケースは本や記事のタイトルのように大文字にすることを意味します。",
    "Capitalize the first and last words.\nAll nouns, pronouns, adjectives, verbs, adverbs, and subordinate conjunctions (as, because, although) are capitalized.\nUsed for titles, buttons, menus, and most other widgets.": "最初と最後の単語を大文字にします。\nすべての名詞、代名詞、形容詞、動詞、副詞、および従属接続詞 (as, because, although) を大文字にします。\nタイトル、ボタン、メニュー、および他のほとんどのウィジェットに使用されます。",
    "ex. &quot;Open File&quot; title in a dialog.": "例. ダイアログのタイトルの \"Open File\"",
    "ex. &quot;Delete 13 Songs&quot; on a button.": "例. ボタンの \"Delete 13 Songs\"",
    "ex. &quot;Search Contacts...&quot; in a search bar.": "例. 検索バーの \"Search Contacts...\"",
    "Notes/Exceptions": "注意／例外",
    "Proper nouns should always be capitalized properly; this means that, for example, Google should always be shown as &quot;Google,&quot; elementary should always be shown as &quot;elementary,&quot; and MPEG should always be shown as &quot;MPEG.&quot; If you're unsure how a certain pronoun should be officially capitalized, refer to the documentation of the pronoun in question.": "固有名詞は常に適切に大文字にする必要があります。これは例えば、 Google は常に \"Google\"、 elementary は常に \"elementary\"、 MPEG は常に \"MPEG\" として示されるべきである、ということを意味します。どのように特定の代名詞が公式に大文字で書かれるべきであるかについて確信がないならば、その代名詞のドキュメンテーションを参照してください。",
    "Punctuation": "句読点",
    "Proper typography is important throughout elementary OS. Not just for consistency within the OS, but for following proper convention and presenting ourselves as a serious, professional platform.": "Proper typography is important throughout elementary OS. Not just for consistency within the OS, but for following proper convention and presenting ourselves as a serious, professional platform.",
    "Prevent Common Mistakes": "よくある間違いを防ぐ",
    "Only use <strong>one space</strong> after a period.": "ピリオドの後ろには<strong>スペースを一つだけ</strong>使用してください。",
    "i.e. “This is a sentence. This is another sentence.”": "例 “This is a sentence. This is another sentence.”",
    "Use a proper ellipsis character (…) rather than three dots.": "3つのドットではなく三点リーダ  (…) を使用してください。",
    "Use <code>\\u0133</code> in your code.": "コードの中では <code>\\u0133</code> を使ってください。",
    "See <a href=\"#using-ellipses\">Using Ellipses</a> for usage details.": "使用方法の詳細は、<a href=\"#using-ellipses\">Using Ellipses</a>",
    "For quotes, use proper <strong>left and right double quotation characters</strong> (“ and ”).": "For quotes, use proper <strong>left and right double quotation characters</strong> (“ and ”).",
    "Use <code>\\u201C</code> and <code>\\u201D</code> in your code.": "コードの中では <code>\\u201C</code> と <code>\\u201D</code> を使ってください。",
    "In contractions and possession, use a <strong>right single quotation mark</strong> (’) as an apostrophe.": "In contractions and possession, use a <strong>right single quotation mark</strong> (’) as an apostrophe.",
    "Use <code>\\u2019</code> in your code.": "コードの中では <code>\\u2019</code> を使ってください。",
    "Use <strong>real math symbols</strong> for subtraction (−), multiplication (×), and division (÷) signs.": "Use <strong>real math symbols</strong> for subtraction (−), multiplication (×), and division (÷) signs.",
    "Use <code>\\u2212</code>,  <code>\\u00D7</code>,  and <code>\\u00F7</code> in your code.": "Use <code>\\u2212</code>,  <code>\\u00D7</code>,  and <code>\\u00F7</code> in your code.",
    "Use correct <strong>copyright symbols</strong> (©).": "正しい <strong>コピーライト記号</strong> (©) を使ってください。",
    "Use <code>\\u0169</code> in your code.": "コードの中では <code>\\u0169</code> を使ってください。",
    "Use <strong>superscripts</strong> where needed (e.g. 1<sup>st</sup>).": "必要な場所では <strong>上付き文字</strong> (例. 1<sup>st</sup>) を使ってください。",
    "Hyphens &amp; Dashes": "ハイフンとダッシュ",
    "Hyphen (-)": "ハイフン (-)",
    "Use <code>\\u2010</code> in code. Used for:": "コードの中では <code>\\u2010</code> を使ってください。以下のために使用します:",
    "Joining words (e.g. non-breaking).": "単語の結合 (例 non-breaking).",
    "<em>If the word cannot be split along lines (e.g. UTF-8), use a non-breaking hyphen (- <code>\\u2011</code>).</em>": "<em>単語が行に跨って分割できない場合 (例 UTF-8)、改行をしないハイフン (- <code>\\u2011</code>) を使ってください。</em>",
    "En Dash (–)": "en ダッシュ (–)",
    "Use <code>\\u2013</code> in code. Used for:": "コードの中では <code>\\u2013</code> を使ってください。以下のために使用します:",
    "Number ranges (e.g. 5–12). <em>Do not put a space on either side.</em>": "数字の範囲 (例 5–12)。<em>どちら側にもスペースを挿入しないでください。</em>",
    "Em Dash (—)": "em ダッシュ (—)",
    "Use <code>\\u2014</code> in code. Used for:": "コードの中では <code>\\u2014</code> を使ってください。以下のために使用します:",
    "Interjections (e.g. the party—which was scheduled for Thursday—was delayed).": "挿入句 (例 the party—which was scheduled for Thursday—was delayed)。",
    "<em>Do not put a space on either side.</em>": "<em>どちら側にもスペースを挿入しないでください。</em>",
    "Quote offsets.": "引用のオフセット。",
    "<em>New line, space to the right.</em>": "<em>新しい行、右にスペース。</em>",
    "If in doubt, refer to <a href=\"http://practicaltypography.com/\">Butterwick's Practical Typography</a>.": "疑問がある場合、<a href=\"http://practicaltypography.com/\">Butterwick's Practical Typography</a>を参照してください。",
    "These rules apply to the English language; other languages may have their own conventions which should be followed by translators.": "これらのルールは、英語に適用されます。他の言語は、翻訳者が従うべき独自の規則を有しているかもしれません。",
    "Using Ellipses": "省略記号の使用",
    "The ellipsis character (…) is used in the interface for two primary reasons: informing the user of an additional required information and letting the user know text has been shortened.": "省略記号文字 (…) は、主に二つの理由のためにインタフェースで使用されます: 必要な追加情報をユーザーに知らせることとテキストが短縮されたことをユーザーに知らせることです。",
    "Additional Information": "追加情報",
    "An ellipsis should be used to let a user know that more information or a further action is required before their action can be performed. Usually this means that the user should expect a new interface element to appear such as a new window, dialog, toolbar, etc in which they must enter more information or make a selection before completing the intended action. This is an important distinction because a user should typically expect an instant action from buttons and menu items while this prepares them for an alternate behavior. More specifically, an ellipsis should be used when the associated action:": "An ellipsis should be used to let a user know that more information or a further action is required before their action can be performed. Usually this means that the user should expect a new interface element to appear such as a new window, dialog, toolbar, etc in which they must enter more information or make a selection before completing the intended action. This is an important distinction because a user should typically expect an instant action from buttons and menu items while this prepares them for an alternate behavior. More specifically, an ellipsis should be used when the associated action:",
    "<strong>Requires specific input from the user.</strong> For example, Find, Open, and Print commands all use ellipses because the user must select or input the item to find, open, or print. An easy way to remember this is to think of a question requiring and answer: Find what? Open what? Print what?": "<strong>Requires specific input from the user.</strong> For example, Find, Open, and Print commands all use ellipses because the user must select or input the item to find, open, or print. An easy way to remember this is to think of a question requiring and answer: Find what? Open what? Print what?",
    "<strong>Is performed in a new window or dialog.</strong> For example, Preferences, Report a Problem, and Customize Toolbar all use ellipses because they open a new window (sometimes another app) or dialog in which the user makes a selection or inputs other information. Consider that the absence of an ellipsis implies the app will handle the action immediately. This means that the app will automatically generate a report or customize its own toolbar. Using an ellipsis makes the important distinction that the user will be writing the report or selecting which toolbar items to show.": "<strong>Is performed in a new window or dialog.</strong> For example, Preferences, Report a Problem, and Customize Toolbar all use ellipses because they open a new window (sometimes another app) or dialog in which the user makes a selection or inputs other information. Consider that the absence of an ellipsis implies the app will handle the action immediately. This means that the app will automatically generate a report or customize its own toolbar. Using an ellipsis makes the important distinction that the user will be writing the report or selecting which toolbar items to show.",
    "<strong>Warns the user of a potentially dangerous action.</strong> For example, Log Out, Restart, and Shut Down all use ellipses because they display an alert that asks the user to confirm or cancel a potentially harmful action. Again, this is the user clicking a button or menu item that requires them to input more information or make a selection before the action is completed.": "<strong>Warns the user of a potentially dangerous action.</strong> For example, Log Out, Restart, and Shut Down all use ellipses because they display an alert that asks the user to confirm or cancel a potentially harmful action. Again, this is the user clicking a button or menu item that requires them to input more information or make a selection before the action is completed.",
    "Shortened Text": "Shortened Text",
    "Ellipses should be used when shortening text that cannot fit in any specific place. For example, if a playlist's name is longer than the space available in the sidebar, truncate it and use an ellipsis to signify that it's been truncated. There are two ways to use an ellipsis when shortening text:": "Ellipses should be used when shortening text that cannot fit in any specific place. For example, if a playlist's name is longer than the space available in the sidebar, truncate it and use an ellipsis to signify that it's been truncated. There are two ways to use an ellipsis when shortening text:",
    "End truncation. If the important or distinctive text is at the beginning of the string, truncate it at the end and append an ellipsis.": "End truncation. If the important or distinctive text is at the beginning of the string, truncate it at the end and append an ellipsis.",
    "Middle truncation. When the end of the text is more important or distinctive, truncate the text in the middle and replace the truncated text with an ellipsis.": "Middle truncation. When the end of the text is more important or distinctive, truncate the text in the middle and replace the truncated text with an ellipsis.",
    "If you're unsure, it's best to use middle truncation as it keeps both the beginning and end of the string in tact. It's also important that you do not ship your app with any truncated text; truncation should only be the result of a user action such as resizing a sidebar or entering custom text.": "If you're unsure, it's best to use middle truncation as it keeps both the beginning and end of the string in tact. It's also important that you do not ship your app with any truncated text; truncation should only be the result of a user action such as resizing a sidebar or entering custom text.",
    "When Not to Use Ellipsis": "省略記号を使用しないとき",
    "In an entry's placeholder text. An ellipsis is not necessary here and adds no value.": "入力項目のプレースホルダテキスト。省略記号はここで必要ではなく、価値はありません。",
    "For a submenu item. The right arrow already indicates that this entry spawns a submenu and is not an action.": "サブメニュー項目。右矢印が、このエントリがサブメニューを生成しアクションではないことを既に示しています。",
    "Be sure to use the actual ellipsis character (…) rather than three consecutive period (.) characters.": "3つの連続したピリオド文字 (.) ではなく本物の短縮記号 (…) を必ず使用してください。",
    "Naming Menu Items": "メニューアイテムに名前をつける",
    "Menu items should have names that are either actions or locations, never descriptions. Make sure menu items are concise, but also fully describe the action that will be performed when they are clicked.": "メニュー項目はアクションや場所の、決して説明ではない、名前を持っている必要があります。メニュー項目が簡潔であることを確認するだけではなく、クリックされたときに実行されるアクションが完全に記述されているかを確認してください。",
    "&quot;Find in Page...&quot; is acceptable as it clearly describes the action that will be performed when the item is clicked. &quot;Software Up to Date&quot; is not acceptable. What happens if I click this item? Where will it take me? What will it do? The outcome is uncertain.": "\"ページの中を検索...\" は、その項目がクリックされたときに実行されるアクションを明確に記述しているため好ましいです。\"ソフトウェア・アップデート\" は好ましくありません。この項目をクリックするとどうなりますか？どこに連れて行くのでしょう？それは何をしますか？結果がはっきりしません。"
}