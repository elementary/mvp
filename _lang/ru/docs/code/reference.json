{
    "Reference": "Справочные материалы",
    "Now that you've stepped through the developer guide like a champ, we have some reference materials for you. This would be a great place to bookmark and refer back to when you have questions about elementary development.": "Теперь, после успешного изучения руководства для разработчиков, мы предлагаем вам справочные материалы для ознакомления. Это подходящее место для обращения всякий раз, когда у вас возникнут новые вопросы о разработке elementary.",
    "Code Style": "Стиль написания кода",
    "The purpose of this guide is to provide clean and accurate instructions on\nwriting good code across all elementary projects. This guideline is to be\nfollowed on every file, in order to keep our code consistent and readable. We\nare also inheriting some of the GNOME's Vala guidelines to keep our code\nconsistent with other Vala programs.": "Цель этого руководства — предоставление четких и понятных инструкий\nдля написания хорошего кода для всех проектов elementary.\nЧтобы сохранять читаемость кода, вы дожны следовать этим указаниям всегда!\nМы также используем некоторые рекомендации GNOME Vala, чтобы сохранять\nсхожесть нашего кода и кода других программ, написанных на Vala.",
    "If the guidelines here proposed are followed, newcomers to elementary\ndevelopment will be more easily able to join the development and\nunderstand code. Besides, it'll make it easier for all developers to work on\napplications that they don't usually work on, because the code will be\nconsistent. Finally, as Guido Van Rossum said - \"Code is much more often read\nthan written\", so having nicely written code is crucial.": "",
    "Whitespace": "Пробел",
    "There is no trailing whitespace at the end of a line, whether it's empty or\nnot. There is also no empty line after declaring a function:": "В конце строки не ставится пробел, независимо от того пустая она или\nнет. Также нет пустой строки после объявления функции:",
    "White space comes before opening parentheses:": "Пробел обязателен перед открывающей круглой скобкой:",
    "Whitespace goes in all maths-related code, between numbers and operators.": "Между числами и операторами во всем связанным с математикой коде должны быть пробелы.",
    "Indentation": "Отступы",
    "Vala code is indented using 4 spaces for consistency and readability.": "Код Vala содержит отступы в 4 пробела для схожести и читаемости.",
    "In classes, functions, loops and general flow control, the first parentheses\nis on the end of the first line (\"One True Brace Style\"), followed by the\nindented code, and a line closing the function with a curly bracket:": "",
    "On conditionals and loops, always use braces even if there's only one line of code:": "В условных и циклических конструкциях всегда используйте фигурные скобки, даже если там одна строка кода:",
    "Cuddled else and else if:": "«Обрамленные» else и else if:",
    "If you are checking the same variable more than twice, use switch\/case instead of multiple else\/if:": "Если вы проверяете одну и ту же переменную более двух раз, используйте оператор switch\/case вместо нескольких else\/if:",
    "Classes and files": "Классы и файлы",
    "Only having one class per file is recommended.": "Рекомендуется создавать только один класс на файл.",
    "All files have the same name of the class in them.": "Файлы должны иметь такое же имя, как и классы, находящиеся в них.",
    "Separate code into classes for easier extensibility.": "Разделяйте код на классы для упрощения расширяемости.",
    "Comments": "Комментарии",
    "Comments are either on the same line as the code or in a special line.": "Комментарии должны находиться либо на одной строке с кодом, либо на отдельной строке.",
    "Comments are indented alongside the code, and obvious comments do more harm\nthan good.": "Комментарии должны иметь такие же отступы, как и код, к которому они относятся. Очевидные комментарии приносят больше вреда, чем пользы.",
    "Variable names, class names, function names": "Названия переменных, классов и функций",
    "Also worth referring that there should be no Hungarian notation, and no mix of\nany kinds of notations.": "Также стоит отметить, что не нужно использовать венгерскую нотацию а также несколько разных нотаций.",
    "Casting": "Приведение типов",
    "Avoid using <code>as<\/code> keyword when casting as it might give <code>null<\/code> as result, which could be easily forgotten to check.": "Не следует использовать ключевое слово <code>as<\/code> при приведении типов, так как это может вернуть <code>null<\/code> как результат и поэтому потребует дополнительной проверки, о которой можно легко забыть.",
    "Use of '=' in place of 'set'": "Использование «=» вместо «set»",
    "In places or operations where you would otherwise use <code>set<\/code> , you should make use of <code>=<\/code> instead.": "В операциях, где вы могли бы применить <code>set<\/code>, следует использовать <code>=<\/code>.",
    "For example, instead of using": "Например, вместо того, чтобы использовать",
    "you should use": "вы должны использовать",
    "Vala namespaces": "Пространство имен Vala",
    "Referring to GLib is not necessary. If you want to print something:": "Явно обращаться к пространству имен GLib не обязательно. Если вы хотите что-то вывести:",
    "Opt for the second one, it's much cleaner.": "Используйте второй способ, он выглядит гораздо лучше.",
    "Columns per line": "Количество столбцов в строке",
    "Ideally, lines should have no more than 80 characters per line, because this\nis the default terminal size. However, as an exception, more characters could\nbe added, because most people have wide-enough monitors nowadays. The hard\nlimit is 120 characters.": "Идеально, строки должны содержать не более 80 символов, потому что это стандартный размер окна терминала. Несмотря на это, в качестве исключения,\nв строку может быть добавлено больше символов, потому что большинство\nлюдей имеет на данный момент достаточно широкие мониторы. Максимальное количество символов в строке — 120.",
    "GPL Header": "Заголовок GPL",
    "Reporting Bugs": "Отчёты об ошибках",
    "One of the big advantages of being an openly developed project is being able to take part in public bug tracking. However, if you're new to working with public bug tracking, it can be difficult to understand how to report bugs The Right Way™. So let's find out how:": "Одно из больших преимуществ отрыто разрабатываемых проектов — это возможность сообщения об ошибках. Если если вы новичок в этом, то возможно вам будет сложно понять, как правильно делать публиковать отчеты. Итак, давайте разберемся:",
    "In order to file reports, you must be signed up as a member of Launchpad. If you've been through our <a href=\"\/docs\/code\/getting-started#the-basic-setup\">development guide<\/a>, you already have this covered.": "Для того чтобы отправлять отчеты, вы должны быть зарегистрированным членом на Launchpad. Если вы знакомы с <a href=\"\/docs\/code\/getting-started#the-basic-setup\">руководством<\/a>, то с эти проблем нет.",
    "Find the \"Report a Bug\" page for the app in question. Often times you can right-click the app in the dock, select \"About\", and then select \"Report a Problem\". Otherwise, you can search for the app on Launchpad, select the \"Bugs\" tab, and then \"Report a Bug\" on the right side of the page.": "",
    "When filing a new report, launchpad will automatically check for duplicates. However, it's still a good idea to search the bug list to make sure your report hasn't been filed already. If your report has already been filed by someone else, you can mark the report as affecting you using the link on the top left of the report's page. Only comment on the report if you can provide additional useful information that may help track down the source of the issue. Do not comment things like, \"I have this problem too\" or \"This is a really important issue\".": "",
    "If your report has not already been filed by someone else and you've reached the \"Report a Bug\" page, type in a summary and description of the issue and select \"Submit\". Keep in mind the following information while filing your report:": "",
    "Be Specific In The Summary": "Будьте конкретны в кратком описании проблемы (summary)",
    "This will be the title of the issue in the bug tracker. It's very important to be specific because it makes it much easier for a developer or bug manager to search the issue list and helps avoid duplicate reports. A summary such as \"App Crashes\" is not good and vague requests like \"Increase Performance\" are not helpful. A good summary is something like \"Notification is not sent when process finishes\".": "",
    "Avoid Subjective or Ambiguous Adjectives": "Избегайте двусмысленности",
    "This may sound like a repeat of the first heading, but it's important when you want someone to confirm your report. Don't say that something is \"jarring\" or \"unintuitive\". Instead describe what happened and contrast it with what you expected to happen. \"The panel suddenly appeared instead of being animated in,\" describes the problem in a way that is actionable and objective.": "",
    "Be Concise, But Explain The Issue": "Кратко объясните проблему",
    "First of all, it's important to mention that bug reports should be written in English and you should, if possible, watch out for your language and grammar.": "Важно отметить, что сообщения об ошибках должны быть написаны на английском языке и вы должны, если это возможно, стараться писать правильно.",
    "The most important thing for a report is that the developer must be able to reproduce the issue. If necessary, include exact numbered steps to reproduce the issue. Include relevant information like your OS version, any modifications you've made to the system (like changing your window manager or kernel), or the version numbers of relevant libraries like Gtk or WebKit. If you're reporting a crash, make sure to <a href=\"https:\/\/wiki.debian.org\/HowToGetABacktrace\">include a backtrace<\/a>.": "Очень важно, чтобы разработчик мог воспроизвести проблему. Если необходимо, укажите конкретное количество шагов для воспроизведения проблемы. Укажите дополнительную информацию — версию операционной системы, делали ли вы изменения в системе (например, меняли ли вы оконный менеджер или ядро системы), номер версий библиотек, например, Gtk или WebKit.\nЕсли ваш отчет об ошибке содержит информации об аварийном завершении приложения, то включите в отчет\n<a href=\"https:\/\/wiki.debian.org\/ru\/HowToGetABacktrace\">бэктрейс<\/a>.",
    "Be Prepared To Provide More Information": "Будьте готовы предоставить больше информации",
    "If your report does not contain enough information for the developer to reproduce the issue, it may be marked as \"Incomplete\". Oftentimes, a developer will make a comment requesting additional specific information. If you do not provide that information, your report will eventually expire.": "",
    "If you've reported your issue against the wrong app, a developer may mark it as \"Invalid\". If the developer knows which app you meant to report against, they may re-assign the issue. However, if they do not you must find the correct app and re-assign the report yourself.": "",
    "If you're reporting a \"Wishlist\" issue, like a feature request, a developer may mark your bug as \"Opinion\" or \"Won't Fix\". Developers are often open to discussion about these kinds of issues, but please do not harass a developer for marking your report this way.": "",
    "You Can Get a Bit of Help": "Помощь для вас",
    "If you're not sure about anything above, you are always welcome to our development IRC channel: #elementary-dev on irc.freenode.net. We might be able to help you track down the actual project where you should report the issue, or perhaps even aid you with any English language issue you might come across. Most developers want to help you make good bug reports.": "Если вы в чем-то сомневаетесь, добро пожаловать на IRC канал для разработчиков: #elementary-dev на irc.freenode.net. Мы можем помочь вам понять к какому актуальному проекту относится ваша проблема, или даже помочь, если вы владеете английским языком. Большинство разработчиков хотят помогать делать хорошие отчеты об ошибках.",
    "Don't Confirm Reports for Other People's Apps": "Не подтверждайте отчёты об ошибках других людей",
    "If a report affects you, mark it using the link. Do not confrim your own reports. Even if you are 100% sure that you are right, just don't do it. It's not good bug tracker etiquette. A bug manager or developer for the app will confirm the report when they are able to review it.": "Если отчёт затрагивает вас, то отметьте его, используя ссылку. Не подтверждайте ваши собственные отчёты. Даже если вы на 100% уверены что вы правы, всё равно не делайте этого. Это нарушает этикет. Менеджер системы отслеживания ошибок или разработчик приложения подтвердит ваш отчёт, когда они будут в состоянии рассмотреть его.",
    "Don't Make \"Me Too\" Comments": "",
    "We mentioned this earlier, but it's worth mentioning again. Do not make comments that simply say \"This issue affects me as well\". This clutters up the tracker. Only comment if you are providing additional information that helps find the source of the issue. If you only want to let a developer know that you are affected, use the green link that says, \"Does this bug affect you?\" under the report's title.": "",
    "Proposing Design Changes": "Предложения по изменению дизайна",
    "elementary has always been known for its strong focus on great design, but if you’re an up and coming designer you might not know how to get developers to pay attention to you. This reference guide is about how to effectively propose a design change in a way that makes it more likely for your design to become implemented.": "elementary всегда была известна акцентом на отличный дизайн и если вы будущий дизайнер и не знаете, как обратить внимание разработчиков на вас — данное справочное руководство о том, как эффективно предложить изменения таким образом, чтобы приблизить их к реализации.",
    "Don't Make Demands": "Не оставляйте запросов",
    "Let’s say you spent the last few hours re-designing the Search Engine Manager dialog in Midori and you want to bring this work to the attention of Midori’s developers. You could file a bug report something like “Search engine popup sucks” and paste your mockup and be done. But that approach isn’t going to win you any friends and your report will probably be marked “opinion” or “invalid”. Instead, we should consider the amount of work it will take to implement the new design and try to present it in a way that gets developers excited about the overall vision without demanding 1,000 lines of code in one shot.": "Допустим, вы провели последние несколько часов занимаясь новым дизайном диалогового окна Search Engine Manager в браузере Midori и вы хотите, чтобы разработчики Midori обратили внимание на вашу работу. Можете подать отчет об ошибке — что-то вроде «всплывающее окно поиска отстой» и вставить свой макет. Такой подход не добавит вам друзей и будет отмечен как «мнение» или «недействительные». Вместо этого мы должны подумать о времени, которое будет затрачено на добавление нового дизайна и представить обобщенное видение, вместо запроса на 1000 строк кода за раз.",
    "Use Blueprints": "Используйте blueprints (проекты)",
    "Firstly, we want to present the overall vision of our grand new design. So we should file a new blueprint (in this example, we’d file it <a href=\"http:\/\/blueprints.launchpad.net\/midori\">here<\/a>). Name it something explicit and try to avoid titles that marginalize developer’s existing work. Something like “search-engine-manager-redesign” works just fine. In this blueprint we want to describe our motivations for the redesign. What are the problems with the current design and what does our new design aim to solve? Common reasons for a redesign can include minimizing window chrome, taking advantage of new toolkit elements, making the UI more consistent with other apps, etc. This is also a good place to link to that mockup we were talking about earlier. If your design is really involved, you can even link to an external specification (Google Docs work great for getting feedback) where you have a chance to really get into the nitty gritty of your idea.": "Для начала мы представим вам обобщенное видение нового дизайна. В качестве примера <a href=\"http:\/\/blueprints.launchpad.net\/midori\">здесь<\/a> файл нового проекта. Выберите имя отличное от существующих. Например ¸«search-engine-manager-redesign». В этом проекте мы хотим описать на мотивацию к изменению дизайна. Какие проблемы есть в существующем дизайне и что наш новый ставит целью изменить? Обычно это минимизация украшения окон, применение новых инструментов, увеличение совместимости  пользовательского интерфейса и приложений и т. п. Это подходящее место для ссылок на модели о которых мы говорили ранее. Если ваш дизайн достаточно сложен, вы можете использовать сторонние методы (Google Docs подходит идеально для отзывов) где вы имеете отличные возможности проникнуть в суть вашей идеи.",
    "Create Concise Work Items": "Создавайте лаконичные рабочие части",
    "Now that you’ve laid out the motivations for your design and explained the overall vision, you should break it up into small, actionable work items (also called bug reports). To continue our example, I would have reports like “Change Search Engine Manager Dialog to Popover”, “Re-order Search Engines with Drag and Drop”, “Open Search Engine Manager by clicking Search icon in URL Bar”, “Show edit and remove buttons next to engine in Search Engine Manager”, etc etc. Each bug report should describe just one small change. We do this for several reasons:": "Итак, вы определились с общим видением дизайна и мотивацией к его изменению. Разделите его на маленькие рабочие части (сообщения об ошибках). В продолжение нашего примера я бы создал такие: «Change Search Engine Manager Dialog to Popover», «Re-order Search Engines with Drag and Drop», «Open Search Engine Manager by clicking Search icon in URL Bar», «Show edit and remove buttons next to engine in Search Engine Manager» и так далее. Каждое сообщение должно описывать одно небольшое изменение.\nДля этого есть причины: ",
    "It allows developers to deny one request without denying all of them. Face it: your design isn’t perfect and it’s very possible that a developer isn’t going to like part of it. By breaking up your design into little pieces, it allows a developer to incorporate the changes they like and ignore the ones they don’t.": "Это позволяет отклонить одно предложение вместо отклонения всех. Возможно разработчику не понравится часть вашего проекта. Разделяя ваши предложения на разумные части вы предоставляете возможность выбрать одни и отклонить другие.",
    "It makes your design less intimidating. A big redesign means lots of lines of code. If your changes look like too much of a hassle, you’re going to have a hard time getting a developer to work on them. But if you present small changes that can be incorporated a bit at a time, there’s a bigger chance that your whole design will eventually be implemented.": "Это делает ваш дизайн менее сложным для понимания. Большие изменения означают множество строк кода. Изменения которые кажутся непонятными для разработчика, сделают его жизнь тяжелее. Маленькие же изменения могут быть быстро включены, что позволяет надеяться, что весь ваш проект дизайна будет осуществлен.",
    "It allows developers to track their progress. Once again, big designs take time to implement. Even if a developer wants to implement the whole thing right away, they might not be able to. Giving them a way to “check off” pieces as they go makes it more likely that a part of your design won’t be forgotten about when it’s translated into code.": "Это позволяет разработчикам осуществлять мониторинг их деятельности. Разработчик может и не выполнить всю задачу за раз. Возможность отмечать пройденные этапы повышает шансы превращения вашей идеи в код.",
    "File Compelling Reports": "Создавайте убедительные отчеты",
    "Don’t forget to make your reports compelling. It’s up to you to sell the merits of each change. Cite the HIG, prior-art, user complaints, articles by other designers, and present your changes in a logical, non-opinionated, and concise manner. It also doesn’t hurt to speak in developer terms. Brush up on the names of widgets in Gtk and Granite, get familiar with available libraries like Zeitgeist and Unity, and don’t forget about system components like PulseAudio or Contractor. Also, whatever you do, don’t be presumptuous and confirm your own bug reports. You wouldn’t ask a friend for a favor and then answer yourself for them, so don’t do it here either. See <a href=\"#reporting-bugs\">the above section<\/a> for a refresher on filing good bug reports.": "Ваши отчеты должны содержать веские аргументы. Тщательно определяйте значимость каждого изменения. Ссылайтесь на рекомендации для разработчиков - HIG, прототипы, жалобы пользователей, статьи других дизайнеров, представляйте ваши изменения резонно, четко, не догматично. Освежите ваши знания о названия виджетов в Gtk и Granite, ознакомьтесь с существующими библиотеками, такими как Zeitgeist и Unity, с системными компонентами как PulseAudio или Contractor. Не будьте самонадеянными, не подтверждайте собственные отчеты об ошибках. Вы ведь не будете просить друга оказать услугу и потом делать это за него, так что не делайте этого и здесь. Смотрите <a href=\"#reporting-bugs\">в качестве примера<\/a> хорошего отчета об ошибках.",
    "Be Prepared to Iterate": "Будьте готовы повторить",
    "Don’t be upset if a developer plainly states that they don’t want to implement your idea. Remember that they have plans too. You might have to go back to the drawing board a bit. Listen to their feedback. Your design might be a little over-engineered, it might conflict with other designs being worked on, or maybe it’s just in conflict with the goals and scope of the app. Remember that you’re in the position of requesting someone to devote their time to something. You’re asking for a favor. Don’t be afraid to argue a position within polite reason, but remember to stay humble.": "Не расстраивайтесь если разработчики отклонили ваше предложение. Помните что у них также существуют свои планы. Прочитайте их отзывы и внесите изменения, возможно ваш дизайн слегка перегружен или просто идеи разработчиков и ваши расходятся. Не бойтесь отстаивать свою позицию и приводить свои аргументы в вежливой и резонной форме."
}