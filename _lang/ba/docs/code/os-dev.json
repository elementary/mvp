{
    "elementary OS Development": "",
    "Want to contribute code to elementary OS itself? Here are some tips.": "",
    "Install <code>elementary-sdk<\/code>": "",
    "First, install <code>elementary-sdk<\/code> from the Terminal:": "",
    "This is a metapackage that depends on several tools we use for development.": "",
    "dconf Editor": "",
    "dconf Editor is an invaluable tool for seeing and modifying settings. It's installed along with <code>elementary-sdk<\/code>.": "",
    "Vala linting": "",
    "To make it easier to follow the <a href=\"https:\/\/elementary.io\/docs\/code\/reference#code-style\">elementary Code-Style guidelines<\/a> you can use <a href=\"https:\/\/github.com\/elementary\/vala-lint\">vala-lint<\/a>.": "",
    "GtkInspector": "",
    "The GTK <a href=\"https:\/\/wiki.gnome.org\/Projects\/GTK+\/Inspector\">Inspector<\/a> is similar to a web browser's inspector, but for GTK apps. Using the Inspector can greatly speed up development, and allows you view and to test out changing properties without recompiling your app. You can also test out temporary in-app CSS.": "",
    "First, make sure you have the <code>elementary-sdk<\/code> installed. Then enable the Inspector keybinding:": "",
    "Focus your app, then launch the Inspector by pressing <kbd>Ctrl<\/kbd>+<kbd>Shift<\/kbd>+<kbd>I<\/kbd> to inspect the widget beneath your cursor, or <kbd>Ctrl<\/kbd>+<kbd>Shift<\/kbd>+<kbd>D<\/kbd> to open the inspector without a widget selected.": "",
    "You can also run it temporarily together with your app by running:": "",
    "Build dependencies": "",
    "You can quickly install all known dependencies for a project with <code>build-dep<\/code>:": "",
    "This installs the dependencies for the currently-released version, so it may miss dependencies for unreleased updates. In those cases, refer to the project's README.": "",
    "Restoring original packages": "",
    "You can audit your system for files that have been changed from their originally installed packages:": "",
    "View changed files:": "",
    "View which packages those files belong to:": "",
    "Assuming that you've used <code>--prefix=\/usr<\/code> when installing custom version you can restore them using:": "",
    "WingPanel": "",
    "When developing the Panel (codenamed WingPanel) or panel-related packages like the Applications Menu and indicators, you want to start WingPanel from the command line to view logs. WingPanel is automatically started and restarted by Cerbere. To remove WingPanel from its monitored applications:": "",
    "In dconf Editor, browse to <code>\/io\/elementary\/desktop\/cerbere\/monitored-processes<\/code>": "",
    "Disable &quot;Use default value&quot;": "",
    "Change the &quot;Custom value&quot; to <code>['plank']<\/code>": "",
    "In Terminal run <code>killall wingpanel<\/code> to stop the current WingPanel": "",
    "Start wingpanel by running <code>wingpanel<\/code>": "",
    "To restore normal behavior simply enable &quot;Use default value&quot; in dconf Editor. Cerbere will notice this and start to monitor WingPanel again.": "",
    "Gala": "",
    "Gala is the window manager of elementary OS. If it crashes or freezes during development, it can be nonobvious how to recover. Here's how to do it:": "",
    "Go to one of the virtual consoles by pressing: <kbd>Ctrl<\/kbd>+<kbd>Alt<\/kbd>+<kbd>F1<\/kbd>": "",
    "Log in": "",
    "If Gala didn't crash but froze, you can kill it by running <code>killall gala<\/code>": "",
    "Restart Gala by running <code>DISPLAY=:0 gala --replace &amp;<\/code>": "",
    "Switch back to the graphical session by pressing <kbd>Ctrl<\/kbd>+<kbd>Alt<\/kbd>+<kbd>F7<\/kbd>": "",
    "If Gala doesn't start, you can reinstall the latest stable version by running <code>sudo apt install --reinstall gala<\/code>.": ""
}
