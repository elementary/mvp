{
    "Getting Started": "Primeiros Passos",
    "Welcome to the elementary Developer Guide! This book was created to teach you all about creating and distributing apps for elementary OS. The introduction will make sure that you have all the tools for the job and a solid understanding of what this book is about. Some of you may feel confident enough to jump straight into coding. If that's the case, you might want to skip ahead and start writing your first app.": "Bem-vindo ao Guia do Desenvolvedor elementary! Este livro foi criado para lhe ensinar tudo sobre a criação e distribuição de aplicativos para o elementary OS. A introdução irá garantir que você tem todas as ferramentas para o trabalho e uma sólida compreensão sobre o que é este livro. Alguns de vocês podem se sentir confiantes o suficiente para avançar diretamente para o código. Se for esse o caso, você pode avançar e começar a escrever o seu primeiro aplicativo.",
    "However, we strongly recommend to at least skim through this preparation step. Having the right setup is going to help you reach your goals faster, and having a solid foundation is going to help you throughout the rest of this book.": "No entanto, recomendamos fortemente a pelo menos folhear esta etapa de preparação. Ter a configuração certa vai ajudar você a atingir seus objetivos mais rapidamente, e ter uma base sólida que vai ajudá-lo no decorrer deste livro.",
    "What We Will And Won't Cover": "O Que Iremos Cobrir e o Que Não",
    "We're going to assume that you have absolutely no experience in writing apps for elementary. But we will assume some basic programming knowledge, and hopefully a little experience in Vala or at least similarly syntaxed languages. If you're not familiar with Vala, we highly encourage you to brush up on it before coming here.": "Vamos supor que você não tenha absolutamente nenhuma experiência em escrever aplicativos para o elementary. Mas vamos assumir que tenha conhecimentos básicos de programação e esperamos um pouco de experiência em Vala ou em uma linguagem de programação semelhante. Se você não estiver familiarizado com Vala, nós encorajamos você a aprender um pouco sobre ela antes de vir aqui.",
    "We’re also not covering design too much in this guide; that’s what the <a href=\"\/docs\/human-interface-guidelines\">Human Interface Guidelines<\/a> (HIG) are for, and you’re highly encouraged to take a look there before beginning your app. We're going to assume you have a basic knowledge of (or at least a quick link to) the HIG and focus on coding. However, elementary is all about great design and stellar consistency. It’s important you grasp these concepts before moving on.": "Nós também não estamos cobrindo muito a parte visual neste guia; para isso existe o <a href=\"\/docs\/human-interface-guidelines\">Guia de Interface Humana <\/a> (GIH) e incentivamos você a dar uma olhada lá antes de iniciar o seu app. Vamos assumir que você tem um conhecimento básico (ou, pelo menos uma noção básica) de GIH e nos concentrar em programar. No entanto, elementary se trata de uma ótima aparência e consistência visual. É importante você compreender esses conceitos antes de avançar.",
    "In this book, we're going to talk about building apps using GTK+, Granite, and other tech available in elementary, setting up a build system, hosting your code for collaborative development, working with translations, a few other bits and pieces, and finally packaging and distributing your new app.": "Neste livro, vamos falar sobre a criação de aplicativos usando GTK+, Granite, e outras tecnologias disponíveis no elementary, a configuração de um sistema de compilação, a hospedagem do seu código para o desenvolvimento colaborativo, como trabalhar com traduções, alguns outros aspectos, e finalmente, como empacotar e distribuir o seu novo app.",
    "The Basic Setup": "Instalação Básica",
    "Before we even think about writing code, you'll need a certain basic setup. This chapter will walk you through the process of getting set up. We will cover the following topics:": "Antes mesmo de pensar em escrever código, você vai precisar de um ambiente de desenvolvimento básico. Este capítulo irá orientá-lo de como configurá-lo. Vamos cobrir os seguintes tópicos:",
    "Creating an account in launchpad.net and importing an SSH key in Launchpad": "Criar uma conta no launchpad.net e importar uma chave SSH no Launchpad",
    "Setting up the Bazaar revision control system": "Configurar o sistema de controle de revisão Bazaar ",
    "Getting and using the elementary developer \"SDK\"": "",
    "We’re going to assume that you’re working from a clean installation of elementary OS Freya or later. This is important as the instructions you’re given may reference apps that are not present (or even available) in other Linux based operating systems like Ubuntu. It is possible to apply the principles of this guide to Ubuntu development, but it may be more difficult to follow along.": "Assumimos que você está trabalhando a partir de uma instalação limpa do elementary OS, versão Freya ou mais recente. Isso é importante pois as instruções dadas são relacionadas a aplicativos que podem não estar presentes (ou mesmo disponíveis) em outros sistemas operacionais baseados em Linux, como o Ubuntu. É possível aplicar os princípios deste guia para o desenvolvimento do Ubuntu, mas pode ser mais difícil de segui-lo.",
    "Launchpad": "",
    "Launchpad is a free online service provided by Canonical, the same people who brought you Ubuntu. It is used as a platform for hosting code, tracking milestones, tracking bugs, proposing designs, making translations, and more. Launchpad is a powerful resource, especially if you are a developer working with others. We're going to be using it for its various features throughout this book, so it's a good idea for you to sign up for an account. If you already have an account, feel free to move on to the next section.": "Launchpad é um serviço online gratuito disponibilizado pela Canonical, as mesmas pessoas que trouxeram o Ubuntu para você. É usado como uma plataforma para hospedagem de código, acompanhamento de milestones, acompanhamento de bugs, propostas de designs, criação de traduções e mais. O Launchpad é um recurso poderoso, especialmente se você for um desenvolvedor trabalhando em grupo. Nós iremos utiliza-lo pelos seus vários recursos no decorrer deste livro, então é uma boa ideia que você crie uma conta. Se você já possui uma conta pule para a próxima sessão. ",
    "To set up a Launchpad account:": "Criando uma conta Launchpad:",
    "Go to <a href=\"https:\/\/launchpad.net\">Launchpad.net<\/a>. Click on <strong>Log in\/Register<\/strong> in the top right corner of the page.": "Vá para <a href=\"https:\/\/launchpad.net\">Launchpad.net<\/a>. Clique em <strong>Log in\/Register<\/strong>  no canto superior direito da página.",
    "Select <strong>I am a new Ubuntu One user<\/strong> on the left side.": "Selecione <strong>I am a new Ubuntu One user<\/strong> no lado esquerdo.",
    "Enter your information and click <strong>Create account<\/strong>.": "Coloque suas informações e clique <strong>Create account<\/strong>.",
    "After you have verified your email your Launchpad account is ready, so let's move on to the next section. Remember, we're not going to go over all the little details in this book. We'll come back to Launchpad a few times later on to use specific features, but if you really want to learn everything there is to know about the website you should read their user guide. Onward!": "Após você verificar o seu email sua conta no Launchpad está pronta, então vamos continuar na próxima sessão. Lembre-se, nós não cobriremos todos os pequenos detalhes neste livro. Nós retornaremos ao Launchpad algumas vezes no futuro para usar recursos específicos, mas se você realmente gostaria de aprender tudo que há para se saber sobre o website você deve ler o guia de usuário do Launchpad.  Avante!",
    "Bazaar": "",
    "elementary projects are hosted on Launchpad. To interact with the code on Launchpad, we use a distributed <a href=\"http:\/\/en.wikipedia.org\/wiki\/Revision_control\">revision control system<\/a> called Bazaar. This allows multiple developers to collaboratively develop and maintain the code while keeping track of each revision along the way.": "Projetos do elementary são hospedados no Launchpad. Para interagir com o código no Launchpad, nós usamos um sistema de  <a href=\"https:\/\/pt.wikipedia.org\/wiki\/Sistema_de_controle_de_versão\">controle de versão<\/a> distribuído chamado Bazaar. Ele permite que diversos desenvolvedores colaborem no desenvolvimento e manutenção do código, mantendo controle de cada revisão no meio do caminho.",
    "If you're ready, let's get you set up to use Bazaar:": "Se você está pronto, vamos preparar o seu Bazaar:",
    "Open the Terminal. You'll be interacting with Bazaar through a simple terminal-based program called bzr.": "Abra o terminal. Você irá interagir com o Bazaar através de um programa simples baseado em terminal chamado bzr.",
    "You'll need to install bzr. Simply type the following into the Terminal:": "Você vai precisar instalar o bzr. Basta digitar o seguinte no Terminal:",
    "To authenticate and transfer code securely, you’ll need to generate an <a href=\"http:\/\/en.wikipedia.org\/wiki\/Secure_Shell\">SSH<\/a> key pair (a kind of fingerprint for your computer) and import the public key in Launchpad. Type the following in terminal (note that <code>C<\/code> stands for comment and that you can alter its value as you wish, but it's a requirement for Launchpad):": "Para autenticar e transferir códigos de maneira segura, você precisa gerar um par de chaves <a href=\"http:\/\/pt.wikipedia.org\/wiki\/SSH\">SSH<\/a> (uma espécie de identidade para seu computador) e importar para o Launchpad a chave pública. Digite o seguinte no terminal (note que <code>C<\/code> significa comentário, e que você pode mudar para o que quiser, é apenas um requerimento no Launchpad):",
    "When prompted, press Enter to accept the default file name for your key.": "Quando solicitado, pressione Enter para aceitar o nome de arquivo padrão para a sua chave.",
    "Next, enter a password to protect your SSH key. You’ll be asked to enter it again, just to make sure you didn’t make any typos. You'll need to enter this password any time you try to push code to launchpad so don't forget it! Optionally, you can just press enter and use no password, but this is obviously less secure.": "Em seguida coloque uma senha para proteger sua chave SSH. Você será pedido para coloca-la novamente, para ter certeza de que não houve nenhum erro de digitação. Será necessário colocar essa senha todas as vezes que você enviar código para o launchpad, então não esqueça dela! Outra opção é você apenas pressionar enter e não usar uma senha, mas isso é obviamente menos seguro.",
    "Now, we're going to tell Launchpad about your SSH key. Open your SSH key with the following command, then copy the text from the file that opens in Scratch:": "Agora nós informaremos o Launchpad sobre sua chave SSH. Abra sua chave SSH com o seguinte comando, depois copie o texto do arquivo que é aberto no Scratch.",
    "Visit <a href=\"https:\/\/launchpad.net\/people\/+me\/+editsshkeys\">your SSH keys page<\/a>. Paste the text in the textbox and click <strong>Import public key<\/strong>.": "Visite <a href=\"https:\/\/launchpad.net\/people\/+me\/+editsshkeys\">sua pagina de chave SSH<\/a>. Cole o texto na caixa de texto e clique em <strong>Import public key<\/strong>.",
    "Now you can connect bzr to your Launchpad account. You'll need your launchpad id, which you can look up at <a href=\"https:\/\/launchpad.net\/people\/+me\">your launchpad page<\/a>.": "Agora você pode conectar o bzr na sua conta do Launchpad. Você precisará do seu id do launchpad que você pode encontrar em <a href=\"https:\/\/launchpad.net\/people\/+me\">sua pagina no launchpad<\/a>.",
    "Done! Now you can download source code hosted on Launchpad and upload your own code. We'll revisit using bzr in a minute, but for now you're logged in. For a more in-depth introduction to bzr, you can also check the complete <a href=\"http:\/\/doc.bazaar.canonical.com\/latest\/en\/user-guide\">Bazaar User Guide<\/a> provided by Canonical.": "Pronto! Agora você pode baixar códigos-fonte hospedado no Launchpad e enviar seus próprios códigos. Nós retornaremos ao uso do bzr em um minuto, mas por enquanto você está logado. Para uma introdução mais detalhada sobre o bzr você pode ler o <a href=\"http:\/\/doc.bazaar.canonical.com\/latest\/en\/user-guide\">Guia de Usuário do Bazaar<\/a> disponibilizado pela Canonical. ",
    "Developer \"SDK\"": "",
    "At the time of this writing, elementary doesn't have a full SDK like Android or iOS. But luckily, we only need a couple simple apps to get started writing code.": "Na data de escrita deste artigo, elementary não possui um kit de desenvolvimento (SDK) completo como o Android ou o iOS. Mas felizmente nós só precisamos de alguns apps simples para começar a escrever código.",
    "Scratch": "",
    "The first piece of our simple \"SDK\" is the code editor Scratch. This comes by default with elementary OS. It comes with some helpful features like syntax highlighting, auto-save, and the Folder Manager extension. There are other extensions for Scratch as well, like the Outline, Terminal or Devhelp extensions. Play around with what works best for you.": "",
    "Terminal": "",
    "We’re going to use Terminal in order to compile our code, push revisions to Bazaar (bzr), and other good stuff. Throughout this guide, we’ll be issuing Terminal commands. You should assume that any command is executed from the directory “Projects” in your home folder unless otherwise stated. Since elementary doesn’t come with that folder by default, you’ll need to create it.": "Vamos usar o Terminal para compilar nosso código, enviar revisões para o Bazaar (bzr) e outras coisas legais. Ao longo deste guia, nós vamos usar comandos de Terminal. Você deve assumir que qualquer comando é executado a partir do diretório \"Projetos\" na sua pasta pessoal a menos que indicado o contrário. Como o elementary não vem com esse diretório por padrão, você precisará criá-lo.",
    "Open Terminal and issue the following command:": "Abra o Terminal e execute o seguinte comando:",
    "Development Libraries": "Bibliotecas de Desenvolvimento",
    "In order to build apps you're going to need their development libraries. We can fetch a basic set of libraries and other development tools with the following terminal command:": "A fim de construir aplicativos você vai precisar de suas bibliotecas de desenvolvimento. Podemos obter um conjunto básico de bibliotecas com o seguinte comando no terminal:",
    "And with that, we're ready to dive into development! Let's move on!": "E com isso, estamos prontos para mergulhar de cabeça no desenvolvimento! Vamos em frente!",
    "Hello World": "Olá Mundo",
    "The first app we’ll create will be a basic and generic “Hello World”. We’ll walk through the steps of creating folders to store our source code, compiling our first app, and pushing the project to a bzr branch. Let’s begin.": "O primeiro app que vamos criar será um básico e genérico \"Hello World\". Vamos seguir os passos de criar pastas para guardar nosso código, compilar nosso primeiro app e enviar o projeto para um branch bzr. Vamos começar.",
    "Setting Up": "Configurando",
    "Apps on elementary OS are organized into standardized directories contained in your project's \"root\" folder. Let's create a couple of these to get started:": "",
    "Create your root folder called \"gtk-hello\"": "",
    "Create a folder inside that one called \"src\". This folder will contain all of our source code.": "",
    "Later on, We'll talk about adding other directories like \"po\" and \"data\". For now, this is all we need.": "",
    "Gtk.Window and Gtk.Button": "Gtk.Window e Gtk.Button",
    "Now what you've been waiting for! We're going to create a window that contains a button. When pressed, the button will display the text \"Hello World!\" To do this, we're going to use a widget toolkit called GTK+ and the programming language Vala. Before we begin, we highly recommend that you do not copy and paste. Typing each section manually will help you to practice and remember. Let's get started:": "",
    "Create a new file in Scratch and save it as \"gtk-hello.vala\" inside your \"src\" folder": "",
    "First we must create the main function of our new GTK app. Type the following in your \"gtk-hello.vala\".": "",
    "Now, that we've initialized Gtk, we'll create a new window and declare a few properties of this window. You'll notice that most of these property names are pretty straightforward. Try to guess what each one does and we'll explain in a second. Type the following after the <code>Gtk.init<\/code> line, but before the last bracket:": "Agora que nós já inicializamos o Gtk, vamos criar uma nova janela e declarar algumas propriedades desta janela. Você vai notar que a maioria destes nomes de propriedade são bastante simples. Tente adivinhar o que cada um faz, e nós explicaremos em um segundo. Digite o seguinte, após a linha de <code>Gtk.init<\/code>, mas antes da última chave:",
    "The first line creates a new <code>Gtk.Window<\/code> called \"window\". The second line sets the window title that you see at the top of the window. Next, we create a margin inside that window so that widgets don't bump up against the window's edge. Then we tell the window manager that we want to place this window in the center of the screen instead of in the default position (which is usually the top left). We also must give our window a default size so that is does not appear too small for the user to interact with it. Finally, we explain what to do with this process if the main window is closed; In our case, we want to quit.": "",
    "Now that we've defined a nice window, let's put a button inside of it. After our window stuff (but before <code>Gtk.main<\/code> line), leave a new line and then type the following:": "Agora que já definimos uma boa janela, vamos colocar um botão dentro dela. Depois da nossa janela (mas antes linha <code>Gtk.main<\/code>), deixe uma nova linha e digite o seguinte:",
    "Any ideas about what happened here? We've created a new <code>Gtk.Button<\/code> with the label \"Click me!\". Then we've said that if this button is clicked, we want to change the label to say \"Hello World!\" instead. We've also said that we want to make the button insensitive; We do this because clicking the button again has no visible effect. Finally, we add the button to our <code>Gtk.Window<\/code> and declare that we want to show all of the window's contents.": "",
    "Compiling and Running your code": "Compilando e Rodando seu código",
    "Ready to test it out? Fire up your terminal and make sure you're in \"~\/Projects\/gtk-hello\/src\". Then execute the following commands to compile and run your first Gtk app:": "",
    "Did it work? If so, congratulations! If not, read over your source code again and look for errors. Also check the output of your terminal. Usually there is helpful output that will help you track down your mistake.": "Funcionou? Se sim, parabéns! Se não, leia seu código-fonte novamente e procure por erros. Também verifique a saída do seu terminal. Geralmente há alguma saída útil que irá ajudá-lo a rastrear seu erro.",
    "Pushing to Launchpad": "Enviando para o Launchpad",
    "After we do anything significant, we must remember to push our code. This is especially important in collaborative development where not pushing your code soon enough can lead to unintentional forks and pushing too much code at once can make it hard to track down any bugs introduced by your code. So let's take a minute to revisit our friend <code>bzr<\/code>:": "Depois de fazermos qualquer coisa significativa, devemos lembrar de enviar o nosso código. Isto é especialmente importante no desenvolvimento colaborativo onde demorar para enviar o código pode levar a forks não intencionais e enviar muito código ao mesmo tempo pode tornar difícil rastrear bugs introduzidos pelo seu código. Então vamos tirar um minuto para revisitar o nosso amigo <code>bzr<\/code>:",
    "Open Terminal and make sure you're in your project's root directory \"~Projects\/gtk-hello\"": "",
    "With these commands, we've told <code>bzr<\/code> to track this folder as a branch, that we'd like to track revisions on the file \"gtk-hello.vala\", we've committed our first revision and explained what we did in the revision, and then we've told <code>bzr<\/code> to push your code to Launchpad in your <a href=\"https:\/\/code.launchpad.net\/people\/+me\/\">junk folder<\/a>.": "",
    "Victory!": "Vitória!",
    "Let's recap what we've learned to do in this first section:": "Vamos recapitular o que aprendemos a fazer nesta primeira seção:",
    "We created a new project containing a \"src\" folder": "",
    "We created our main vala file and inside it we created a new <code>Gtk.Window<\/code> and <code>Gtk.Button<\/code>": "Nós criamos nosso arquivo principal vala e dentro deste criamos uma nova <code>Gtk.Window<\/code> e <code>Gtk.Button<\/code>",
    "We built and ran our app to make sure that everything worked properly": "Compilamos e executamos nosso app para garantir que tudo estava funcionando de acordo",
    "Finally, we commited our first revision and pushed code to Launchpad": "Por fim, realizamos o commit de nossa primeira revisão e enviamos o código para o Launchpad",
    "Feel free to play around with this example. Make the window a different size, set different margins, make the button say other things. When you're comfortable with what you've learned, go on to the next section.": "Fique a vontade para modificar esse exemplo. Faça a janela de um tamanho diferente, coloque margens diferentes, crie um botão que diga outras coisas. Quando se sentir confortável com o que aprendeu vá para a próxima sessão.",
    "A Note About Libraries": "Uma Nota Sobre Bibliotecas ",
    "Remember how when we compiled our code, we used the <code>valac<\/code> command and the argument <code>--pkg gtk+-3.0<\/code>? What we did there was make use of a \"library\". If you're not familiar with the idea of libraries, a library is a collection of methods that your program can use. So this argument tells <code>valac<\/code> to include the GTK+ library (version 3.0) when compiling our app.": "",
    "In our code, we've used the <code>Gtk<\/code> \"Namespace\" to declare that we want to use methods from GTK+ (specifically, <code>Gtk.Window<\/code> and <code>Gtk.Button.with_label<\/code>). Notice that there is a hierarchy at play. If you want to explore that hierarchy in more detail, you can <a href=\"https:\/\/valadoc.org\/gtk+-3.0\/Gtk.Button\">check out Valadoc<\/a>.": "",
    "Our First App": "Nosso Primeiro App",
    "In the previous chapter, we created a simple \"Hello World!\" app to show off our vala and Gtk skills. But what if we wanted to share our new app with a friend? They'd have to know which packages to include with the <code>valac<\/code> command we used to build our app, and after they'd built it they'd have to run it from the build directory like we did. Clearly, we need to do some more stuff to make our app fit for people to use, to make it a <em>real<\/em> app.": "",
    "Hello (again) World!": "Olá (novamente) Mundo!",
    "To create our first real app, we're going to need all the old stuff that we used in the last example. But don't just copy and paste! Let's take this time to practice our skills and see if we can recreate the last example from memory. Additionally, now that you have the basics, we're going to get a little more complex and a little more organized:": "Para criar nossa primeira aplicação real, nós vamos precisar de todo o material antigo que usamos no último exemplo. Mas não basta copiar e colar! Vamos aproveitar este momento para praticar as nossas habilidades e ver se podemos recriar o último exemplo de memória. Além disso, agora que você tem o básico, vamos deixar as coisas um pouco mais complexas e um pouco mais organizadas:",
    "Create a new folder in \"~\/Projects\" called \"hello-world\" and put our last project in that folder. Now create a new folder inside \"~\/Projects\/hello-world\" called \"hello-again\". We're doing this because our first \"gtk-hello\" and \"hello-again\" are two branches of the same \"hello-world\" project. As you get more into collaborative development, you're going to have lots of branches. This method will help you stay organized.": "",
    "Now go into \"hello-again\" and create our directory structure including the \"src\" folder.": "",
    "Create \"hello-again.vala\" in the \"src\" folder.  This time we're going to prefix our file with a small legal header. More about legal stuff later. For now, just copy and paste this, changing out <code>YourName<\/code> for your actual name:": "",
    "Now, let's create our main function, a <code>Gtk.Window<\/code>, and set the window's default properties. Refer back to the last chapter if you need a refresher.": "Agora vamos criar nossa função main, uma <code>Gtk.Window<\/code>, e atribuir suas propriedades padrões. Volte ao capitulo anterior se você precisa se lembrar de alguma coisa.",
    "For the sake of time let's just put a <code>Gtk.Label<\/code> instead of a <code>Gtk.Button<\/code>. We don't need to try to make the label do anything when you click it.": "Para economizar tempo vamos colocar apenas um <code>Gtk.Label<\/code> ao invés de um <code>Gtk.Button<\/code>. Não precisamos tentar fazer o label fazer nada quando é clicado.",
    "Don't forget to add it to your window and show the window's contents:": "Não se esqueça de adicioná-lo à sua janela e mostrar os conteúdos da janela:",
    "Build \"hello-again.vala\" just to make sure it all works. If something goes wrong here, feel free to refer back to the last chapter and remember to check your terminal output for any hints.": "",
    "Initialize the branch, add your files to the project, and write a commit message using what you learned in the last chapter. Lastly, push your first revision with <code>bzr<\/code>:": "Inicialize o branch, adicione seu arquivo ao projeto, e escreva uma mensagem de commit utilizando o que você aprendeu no capitulo anterior. Finalmente, envie sua primeira revisão utilizando o <code>bzr<\/code>.",
    "Everything working as expected? Good. Now, let's get our app ready for other people to use.": "Tudo está funcionando direito? Bom. Agora vamos preparar nosso app para que outras pessoas possam usá-lo.",
    "The .desktop File": "O Arquivo .desktop",
    "Every app comes with a .desktop file. This file contains all the information needed to display your app in the Applications menu and in the Dock. Let's go ahead and make one:": "Todo app vem com um arquivo \".desktop\". Este arquivo contém toda a informação necessária para exibir seu app no menu de Aplicativos e no Dock. Vamos prosseguir e criar um:",
    "In your project's root, create a new folder called \"data\".": "",
    "Create a new file in scratch and save it in the \"data\" folder as \"hello.desktop\".": "",
    "Type the following into \"hello.desktop\". Like before, try to guess what each line does.": "",
    "The first line declares that this file is a \"Desktop Entry\" file. The next three lines are descriptions of our app: The branded name of our app, a generic name for our app, and a comment that describes our app's function. Next, we categorize our app. Then, we say what command will execute it. Finally, we give our app an icon (a generic one included in elementary OS) and let the OS know that this isn't a command line app. For more info about crafting .desktop files, check out <a href=\"\/docs\/human-interface-guidelines\/app-launchers\">this HIG entry<\/a>.": "",
    "Finally, let's add this file to bzr and commit a revision:": "Por fim, vamos adicionar este arquivo ao bzr e criar uma revisão:",
    "Legal Stuff": "Coisas Legais",
    "Since we're going to be putting our app out into the wild, we should include some information about who wrote it and the legal usage of its source code. For this we need two new files in our project's root folder: AUTHORS and COPYING.": "Já que iremos publicar nosso app, nós devemos incluir algumas informações sobre quem o escreveu e o uso legal de seu código fonte. Para isso nós precisamos de dois novos arquivos na pasta rais do projeto: AUTHORS e COPYING.",
    "Authors": "Autores",
    "The AUTHORS file is pretty straightforward. This file contains your name and email address along with the name and email address of anyone who helped you make your app. It typically looks like this:": "O arquivo AUTHORS é bem direto. Este arquivo contém o seu nome e e-mail, juntamente com os nomes e e-mails de qualquer um que o ajudou a fazer seu app. Geralmente seu conteúdo é algo assim:",
    "Copying": "Copiando",
    "The COPYING file contains a copy of the license that your code is released under. For elementary apps this is typically the <a href=\"http:\/\/www.gnu.org\/licenses\/quick-guide-gplv3.html\">GNU General Public License<\/a> (GPL). Remember the header we added to our source code? That header reminds people that your app is licensed and it belongs to you. You can choose other licenses like the MIT license as well, but for this example let's stick to the <a href=\"http:\/\/www.gnu.org\/licenses\/gpl-3.0.txt\">GPL<\/a>.": "O arquivo COPYING contém uma cópia da licença sob a qual seu código será lançado. Para aplicativos do elementary, geralmente a licença é a <a href=\"http:\/\/www.gnu.org\/licenses\/quick-guide-gplv3.html\">GNU General Public License<\/a> (GPL). Lembra do cabeçalho que adicionamos no nosso código fonte? Ele deixa claro para as pessoas que seu aplicativo é licenciado e pertence a você. Você pode escolher outras licenças, como a licença do MIT, mas neste exemplo vamos seguir a <a href=\"http:\/\/www.gnu.org\/licenses\/gpl-3.0.txt\">GPL<\/a>.",
    "Mark Your Progress": "Marque Seu Progresso",
    "Did you remember to add these files to bzr and commit a revision? Each time we add a new file or make a significant change it's a good idea to commit a new revision and push to Launchpad. Keep in mind that this acts as a backup system as well; when we push our work to Launchpad, we know it's safe and we can always revert to a known good revision if we mess up later.": "Você se lembrou de adicionar esses arquivos ao bzr e entregar a revisão? Cada vez que adicionamos um novo arquivos ou realizamos uma mudança significativa é uma boa ideia fazer o commit de uma nova revisão e enviar ao Launchpad. Tenha em mente que isso também funciona como um sistema de backup; quando enviamos nosso trabalho ao Launchpad, nós sabemos que ele está salvo e podemos reverter para uma revisão que sabemos ser boa se cometermos algum erro.",
    "Now that we've got all these swanky files laying around, we need a way to tell the computer what to do with them. Ready for the next chapter? Let's do this!": "Agora que temos todos esses arquivos marotos por ai, nós precisamos de uma maneira de dizer ao computador o que fazer com eles. Pronto para o próximo capitulo? Vamos lá!",
    "The Build System": "O Sistema de Compilação",
    "The next thing we need is a build system. The build system that we're going to be using is called <a href=\"http:\/\/www.cmake.org\">CMake<\/a>. We already installed the <code>cmake<\/code> program at the beginning of this book when we got the build dependencies for Granite Demo. What we're going to do in this step is create the files that tell Cmake how to install your program. This includes all the rules for building your source code as well as correctly installing your .desktop file and the binary app that results from the build process.": "A próxima coisa que precisamos é um sistema de compilação. O sistema de compilação que nós iremos usar é chamado de <a href=\"http:\/\/www.cmake.org\">CMake<\/a>. Nós já instalamos o programa <code>cmake<\/code> no começo desse livro quando obtemos as dependências para o Granite Demo. O que vamos fazer neste passo é pegar uma cópia adicional dos módulos CMake(suporte para Vala, traduções, etc), e criar os arquivos que informem ao CMake como instalar o seu programa. Isso inclui todas as regras para compilação de seu código fonte bem como a instalação correta de seu arquivo .desktop e do aplicativo binário resultante da compilação.",
    "Create a new file in your project's root folder called \"CMakeLists.txt\". Since this file is a bit long, we've included some comments along the way to explain each section. You don't have to copy those, but type the rest into that file:": "",
    "And you're done! Your app now has a real build system. Don't forget to add these files to bzr and push to launchpad. This is a major milestone in your app's development!": "E você está pronto! Seu aplicativo tem um verdadeiro sistema de compilação. Não se esqueça de adicionar arquivos no bzr e enviar ao launchpad. Este é um grande marco do desenvolvimento de seu aplicativo.",
    "Building and Installing with CMake": "Compile e Instale com o CMake",
    "Now that we have a build system, let's try it out:": "Agora nós temos um sistema de compilação, vamos experimentá-lo:",
    "Create a new folder in your project's root folder called \"build\"": "",
    "Change into this directory in terminal and execute the following command:": "Mude para este diretório no terminal e execute o seguinte comando:",
    "This command tells cmake to get ready to build our app using the prefix \"\/usr\". The <code>cmake<\/code> command defaults to installing our app locally, but we want to install our app for all users on the computer.": "",
    "Build your app with <code>make<\/code> and if successful install it with <code>sudo make install<\/code>:": "Compile sua aplicação com <code>make<\/code> e se for bem sucedido instale-o com <code>sudo make install<\/code>:",
    "If all went well, you should now be able to open your app from the Applications menu and pin it to the Dock.  If you were about to add the \"build\" folder to your bzr branch and push it, stop! This binary was built for your computer and we don't want to redistribute it. In fact, we built your app in a separate folder like this so that we can easily delete or ignore the \"build\" folder and it won't mess up our app's source code.": "",
    "We'll revisit CMake again later to add some more complicated behavior, but for now this is all you need to know to give your app a proper build system. If you want to explore CMake a little more on your own, you can always check out <a href=\"http:\/\/www.cmake.org\/cmake\/help\/documentation.html\">CMake's documentation<\/a>.": "Iremos revisitar o CMake novamente depois para realizar algumas coisas mais complicadas, mas por hora isso é tudo que precisa saber para dar a seu aplicativo um sistema de compilação apropriado. Se você quiser explorar o CMake por conta própria um pouco mais, poderá sempre consultar a <a href=\"http:\/\/www.cmake.org\/cmake\/help\/documentation.html\">documentação do CMake<\/a>.",
    "Review": "Revisão",
    "Let's review all we've learned to do:": "Vamos revisar tudo o que nós aprendemos a fazer:",
    "Create a new Gtk app using <code>Gtk.Window<\/code>, <code>Gtk.Button<\/code>, and <code>Gtk.Label<\/code>": "Criar novos aplicativos com Gtk usando <code>Gtk.Window<\/code>, <code>Gtk.Button<\/code> e <code>Gtk.Label<\/code>",
    "Keep our projects organized into branches": "Manter nossos projetos organizados dentro de \"branches\"",
    "License our app under the GPL and declare our app's authors in a standardized manner": "Licenciar nosso aplicativo sob a GPL e declarar os autores do aplicativo na forma padronizada",
    "Create a .desktop file that tells the computer how to display our app in the Applications menu and the Dock": "Criar um arquivo .desktop que diz ao computador como mostrar seu aplicativo no menu Aplicações e no Dock",
    "Set up a CMake build system that contains all the rules for building our app and installing it cleanly": "Configurar o sistema de compilação CMake que contem todas as regras para compilar seu aplicativo e instalá-lo de forma limpa",
    "That's a lot! You're well on your way to becoming a bonified app developer for elementary OS. Give yourself a pat on the back, then take some time to play around with this example. Change the names of files and see if you can still build and install them properly. Ask another developer to branch your project from launchpad and see if it builds and installs cleanly on their computer. If so, you've just distributed your first app! When you're ready, we'll move onto the next section: Packaging.": "Isto é muito! Você está a caminho de se tornar um desenvolvedor aprimorado do elemantary OS. Dê uns tapinhas nas suas próprias costas, depois tire um tempo para brincar com este exemplo. Mude os nomes dos arquivos e veja se você ainda consegue compilá-los e instalá-los de maneira adequada. Peça a outro desenvolvedor para acessar seu projeto no launchpad e ver se ele compila e instala tranquilamente no computador dele. Se sim, você distribuiu seu primeiro aplicativo! Quando você estiver pronto, vamos mudar para a próxima seção: Empacotamento.",
    "Adding Translations": "Adicionando Traduções",
    "Now that you've learned about CMake, the next step is to make your app able to be translated to different languages. The first thing you need to know is how to convert strings in your code into translatable strings. Here's an example:": "Agora que você aprendeu sobre o CMake, o próximo passo é tornar o seu aplicativo capaz de ser traduzido para diferentes línguas. A primeira coisa que você precisa saber é como converter as strings no seu código para strings traduzíveis. Aqui temos um exemplo:",
    "See the difference? We just added <code>_()<\/code> around the string! Well, that was easy!": "Vê a diferença? Nós apenas adicionamos <code>_()<\/code> em torno da string! Bem, isso foi fácil!",
    "Go back to your project and make all your strings translatable by adding <code>_()<\/code>": "Volte ao seu projeto e torne todas as suas strings traduzíveis ao adicionar <code>_()<\/code>",
    "Add the following lines in the \"CMakeLists.txt\" file you created a moment ago:": "",
    "Create a directory named \"po\" on the root folder of your project. Inside of your po directory you will need to create another CMakeLists.txt file. This time, it's contents will be:": "",
    "On your build directory execute the following commands:": "No diretório de compilação execute os seguintes comandos:",
    "Don't forget to add this new directory and it's contents to bzr": "Não se esqueça de adicionar este novo diretório e seu conteúdo ao bzr",
    "That's it! CMake will automatically add all the string marked with <code>_()<\/code> into a .pot template file, and a file for each available language where you'll place the translatable strings.": "Pronto! CMake vai automaticamente adicionar todas as strings marcadas com <code>_()<\/code> a um arquivo template .pot e um arquivo para cada linguagem disponível onde você irá colocar as strings traduzíveis.",
    "Packaging": "Empacotamento",
    "While having a build system is great, our app still isn't ready for regular users. We want to make sure our app can be built and installed without having to use Terminal. What we need to do is package our app. To do this, we use the Debian packaging format (.deb) on elementary OS. This section will teach you how to package your app as a .deb file, hosted in a Personal Package Archive (PPA) on Launchpad. This will allow normal people to install your app and even get updates for it in Update Manager.": "Apesar de que é ótimo ter um sistema de compilação, nosso app ainda não está preparado para usuários comuns. Nós queremos ter a certeza que nossos apps possam ser compilados e instalados sem utilizar o Terminal. O que precisamos fazer é empacotar nosso app. Para isso, nós temos que utilizar os pacotes do formato Debian (.deb) no elementary OS. Nessa seção você vai aprender como empacotar seus aplicativos como um arquivo .deb, hospedado em um Personal Package Archive (PPA) no Launchpad. Isso vai permitir que usuários comuns possam instalar seu aplicativo e até atualizá-lo através do Update Manager.",
    "Practice Makes Perfect": "Prática Leva à Perfeição",
    "If you want to get really good really fast, you're going to want to practice. Repetition is the best way to commit something to memory. So let's recreate our entire Hello World app again <em>from scratch<\/em>:": "Se você quer ficar muito bom muito rápido, você vai ter que praticar. Repetição é a melhor forma de memorizar algo. Então vamos recriar nosso aplicativo Hello World novamente, <em>do zero<\/em>:",
    "Create a new branch folder \"hello-packaging\"": "",
    "Set up our directory structure including the \"src\" and \"data\" folders.": "",
    "Add your Authors, Copying, .desktop, and source code.": "Adicione os arquivos Authors, Copying, .desktop e o código fonte.",
    "Now set up the CMake build system.": "Agora configure o sistema de compilação CMake.",
    "Test everything!": "Teste tudo!",
    "Did you commit and push to launchpad for each step? Keep up these good habits and let's get to packaging this app!": "Você fez commit e enviou para o launchpad cada passo? Mantenha esses bons hábitos e vamos empacotar este aplicativo!",
    "Debian Control": "",
    "Now it's time to create the rules that will allow your app to be built as a .deb package. Let's dive right in:": "Agora é a vez de criar as regras que permitirão seu aplicativo ser compilado como um pacote .deb. Vamos cair dentro:",
    "Like CMake, elementary maintains a simple version of the \"debian\" folder that contains all the files we need for packaging. Let's grab a copy of that with bzr:": "",
    "Copy the \"debian\" folder from that branch into your \"hello-packaging\" folder.": "",
    "Open the file called \"changelog\" and make it look like below:": "",
    "The first line contains your app's binary name, version, OS codename, and how urgently your package should be built. Remember that your app's binary name is lowercase and does not contain spaces. After the <code>*<\/code> is a list of your changes. Finally, you include your name, email address, and the date. For more information about the debian changelog, make sure to read the <a href=\"http:\/\/www.debian.org\/doc\/debian-policy\/ch-source.html#s-dpkgchangelog\">documentation<\/a>.": "A primeira linha contem o nome do binário do seu aplicativo, versão, codenome do SO e o quão urgentemente seu aplicativo deve ser construído. Lembre-se que o nome do binário do seu aplicativo deve ser em letras minúsculas e não pode conter espaços. Depois de <code>*<\/code> é uma lista das suas mudanças. Finalmente, você coloca o seu nome, endereço de e-mail, e a data. Para mais informações sobre as revisões do debian, leia a <a href=\"http:\/\/www.debian.org\/doc\/debian-policy\/ch-source.html#s-dpkgchangelog\">documentação<\/a>.",
    "Open the file called \"control\" and make it look like below:": "",
    "Open the file called \"copyright\". We only need to edit what's up top:": "",
    "That wasn't too bad right? We'll set up more complicated packaging in the future, but for now this is all you need. If you'd like you can always read <a href=\"http:\/\/www.debian.org\/doc\/debian-policy\/\">more about Debian packaging<\/a>.": "Não foi tão ruim, foi? Nós iremos criar um empacotamento mais complexo no futuro, mas por agora isso é tudo o que você precisa. Se quiser você pode ler <a href=\"http:\/\/www.debian.org\/doc\/debian-policy\/\">mais sobre empacotamento Debian<\/a>.",
    "Launchpad Recipes": "Receitas do Launchpad",
    "Now that we have our \"debian\" folder in order, it's time to go to launchpad and create a recipe: instructions what code to build, how often to build it, and where to put the resulting packages.": "",
    "<a href=\"https:\/\/code.launchpad.net\/people\/+me\/+junk\/hello-packaging\/+new-recipe\">Click this link<\/a> or go to Launchpad, find your hello-packaging branch, then select <strong>Create packaging recipe<\/strong>.": "<a href=\"https:\/\/code.launchpad.net\/people\/+me\/+junk\/hello-packaging\/+new-recipe\">Clique nesse link<\/a> ou vá para o Launchpad, ache o seu branch do hello-packaging, e então selecione <strong>Create packaging recipe<\/strong>.",
    "Read through the options available to you. You can go ahead and keep the defaults for Name, Description (it's blank), Owner, Daily builds, and PPA but you can also customize a bit if you'd like.": "Leia as opções disponíveis para você. Você pode ir em frente e manter os padrões para Nome, Descrição (está em branco), Proprietário, Daily builds, e PPA mas você também pode personalizar um pouco se quiser.",
    "When you get down to a set of checkboxes with the header \"Default distribution series\", make sure you select \"Trusty\". elementary OS Freya shares it's core with Ubuntu Trusty, so packages built on Trusty will also work on Freya.": "",
    "For recipe text, we're going to change it ever so slightly to conform better with the official Debian rules. Change out the first line for this one:": "Para o texto da receita vamos mudá-lo para ficar mais aproximado às regras do Debian. Mude a primeira linha para:",
    "Notice that this is ever so slightly different from the default line which includes <code>{debupstream}-0~{revno}<\/code> instead of <code>{debupstream}+r{revno}-0<\/code>.": "Note que isso está um puco diferente da linha padrão, na qual aparece <code>{debupstream}-0~{revno}<\/code> ao invés de <code>{debupstream}+r{revno}-0<\/code>.",
    "When you're happy with the options you've chosen, select <strong>Create Recipe<\/strong>.": "Quanto estiver feliz com as suas escolhjas, selecione <strong>Criar Receita<\/strong>.",
    "Now that you've created a recipe, you only have to wait until Launchpad finishes the build! If everything goes as planned, your new PPA will contain a packaged app which other people can install and run with ease. Additionally, anyone using your PPA will be able to get updates for your app if you upload a new version. We'll talk more about how to do that later.": "Agora que criou uma receita, só precisa esperar até que o Launchpad acabe a compilação!. Se tudo correr de acordo com o plano, o seu novo PPA vai ter o seu aplicativo empacotado para que qualquer outra pessoa possa usar facilmente. Adicionalmente, qualquer pessoa que use o seu PPA vai receber automaticamente atualizações futuras, assim que você enviar uma nova versão. Falaremos um pouco mais deste tema mais à frente.",
    "Creating Layouts": "Criando Layouts",
    "Now that you know how to code, build, and distribute an app using Vala, Gtk, CMake, and Launchpad PPAs, it’s time to learn a little bit more about how to build out your app into something really useful. The first thing we need to learn is how to lay out widgets in our window. But we have a fundamental problem: We can only add one widget (one “child”) to <code>Gtk.Window<\/code>. So how do we get around that to create complex layouts in a Window? We have to add a widget that can contain multiple children. One of those widgets is <code>Gtk.Grid<\/code>.": "Agora que você já sabe como escrever, compilar e distribuir um aplicativo usando Vala, Gtk, CMake e os PPAs do Launchpad, é hora de aprender um pouco mais sobre como tornar seu aplicativo em algo realmente útil. A primeira coisa que precisamos aprender é como distribuir widgets na nossa janela. Mas nós temos um problema básico: Nós só podemos adicionar um widget (um \"filho\") ao <code>Gtk.Window<\/code>. Então como fazemos para criar layouts complexos numa Window? Nós temos que adicionar algum widget que possa ter vários filhos. Um desses widgets é o <code>Gtk.Grid<\/code>.",
    "Widgets as Subclasses of Other Widgets": "Widgets como Subclasses de Outros Widgets",
    "Before we get into <code>Gtk.Grid<\/code>, let’s stop for a second and take some time to understand Gtk a little better. At the lower level, Gtk has classes that define some pretty abstract traits of widgets such as <a href=\"https:\/\/valadoc.org\/gtk+-3.0\/Gtk.Container\"><code>Gtk.Container<\/code><\/a> and <a href=\"https:\/\/valadoc.org\/gtk+-3.0\/Gtk.Orientable\"><code>Gtk.Orientable<\/code><\/a>. These aren’t widgets that we’re going to use directly in our code, but they’re used as building blocks to create the widgets that we do use. It’s important that we understand this, because it means that when we understand how to add children to a <code>Gtk.Container<\/code> like <code>Gtk.Grid<\/code>, we also understand how to add children to a <code>Gtk.Container<\/code> like <code>Gtk.Toolbar<\/code>. Both Grid and Toolbar are widgets that are subclasses of the more abstract class <code>Gtk.Container<\/code>.": "",
    "If you want to understand more about these widgets and the parts of Gtk that they subclass, jump over to <a href=\"https:\/\/valadoc.org\/\">Valadoc<\/a> and search for a widget like <code>Gtk.Grid<\/code>. See that big tree at the top of the page? It shows you every component of Gtk that <code>Gtk.Grid<\/code> subclasses and even what those components subclass. Having a lower level knowledge of Gtk will help you to implement widgets you haven’t worked with before since you will understand how their parent classes work.": "",
    "Gtk.Grid": "",
    "Now that we’ve gotten that out of the way, let’s get back to our Window and <code>Gtk.Grid<\/code>. Since you’re a master developer now, you can probably set up a new project complete with CMake, push it to Launchpad, and build a PPA in your sleep. If you want the practice, go ahead and do all of that again. Otherwise, it’s probably convenient for our testing purposes to just play around locally and build from Terminal. So code up a nice <code>Gtk.Window<\/code> without anything in it and make sure that builds. Ready? Let’s add a Grid.": "Já que esclarecemos tudo, vamos voltar para a nossa Window e <code>Gtk.Grid<\/code>. Agora que você é um super desenvolvedor, você deve conseguir criar um novo projeto completo com o CMake, fazer um push para o Launchpad, e ainda construir um PPA enquanto dorme. Se você quer mais prática, fique à vontade pra fazer tudo isso de novo. Caso contrário, provavelmente é mais conveniente para nossos testes apenas brincar um pouco localmente e compilar no Terminal. Então escreva uma bela <code>Gtk.Window<\/code> sem nada dentro e se certifique que compila. Pronto? Vamos adicionar uma Grid.",
    "Just like when we add a Button or Label, we need to create our <code>Gtk.Grid<\/code>. As always, don’t copy and paste! Practice makes perfect. We create a new Gtk.Grid like this:": "Assim como quando nós adicionamos um Button ou Label, nós precisamos criar nosso <code>Gtk.Grid<\/code>. Como sempre, não copie e cole! A prática leva à perfeição! Nós criamos um novo Gtk.Grid assim:",
    "Remember that Button and Label accepted an argument (a String) in the creation method (that’s the stuff in parentheses and quotes). As shown above, <code>Gtk.Grid<\/code> doesn’t accept any arguments in the creation method. However, you can still change the grid’s properties (like <a href=\"https:\/\/valadoc.org\/gtk+-3.0\/Gtk.Orientation\">orientation<\/a>) as we did on the second line. Here, we’ve declared that when we add widgets to our grid, they should stack vertically.": "",
    "Let’s add some stuff to the Grid:": "Vamos adicionar algumas coisas ao Grid:",
    "Super easy stuff, right? We can add the grid to our window using the same method that we just used to add widgets to our grid:": "Super simples, né? Nós podemos adicionar grid à nossa janela usando o mesmo método que nós acabamos de usar para adicionar widgets para nosso grid:",
    "Now build your app and see what it looks like. Since we’ve given our grid a <code>Gtk.Orientation<\/code> of <code>VERTICAL<\/code> the labels stack up on top of each other. Try creating a <code>Gtk.Grid<\/code> without giving it an orientation. By default, <code>Gtk.Grid<\/code>’s orientation is horizontal. You really only ever have to give it an orientation if you need it to be vertical.": "Agora compile o seu app e veja como fica. Já que demos à nossa grade uma <code>Gtk.Orientation<\/code> <code>VERTICAL<\/code> os rótulos se empilham um em cima do outro. Tente criar uma <code>Gtk.Grid<\/code> sem passar uma orientação. Por padrão, a orientação da <code>Gtk.Grid<\/code> é horizontal. Você só precisa passar mesmo uma orientação se precisar que ela seja vertical.",
    "Functionality in Gtk.Grid": "Funcionalidade no Gtk.Grid",
    "Okay, so you know all about using a <code>Gtk.Grid<\/code> to pack multiple children into a Window. What about using it to lay out some functionality in our app? Let’s try building an app that shows a message when we click a button. Remember in our first “Hello World” how we changed the label of the button with <code>button.clicked.connect<\/code>? Let’s use that method again, but instead of just changing the label of the button, we’re going to use it to change an empty label to a message.": "OK, então você sabe tudo de como usar uma <code>Gtk.Grid<\/code> para agrupar vários filhos dentro de uma Window. Que tal usá-la para adicionar alguma funcionalidade no nosso app? Vamos tentar construir um app que mostra uma mensagem quando nós clicamos num botão. Lembra como no nosso primeiro \"Hello World\" nós mudamos o rótulo do botão com <code>button.clicked.connect<\/code>? Vamos usar esse método de novo, mas ao invés de apenas mudar o rótudlo do botão, nós vamos usá-lo para tornar um rótulo vazio em uma mensagem.",
    "Let’s create a Window with a vertical Grid that contains a Button and a Label:": "Vamos criar uma janela (Window) com uma grade (Grid) vertical que contém um botão (Button) e um rótulo (Label):",
    "This time when we created our grid, we gave it another property: <code>row_spacing<\/code>. We can also add <code>column_spacing<\/code>, but since we’re stacking widgets vertically we’ll only see the effect of <code>row_spacing<\/code>. Notice how we can create new widgets outside the grid and then pack them into the grid by name. This is really helpful when you start using different methods to change the properties of your widgets.": "Dessa vez quando nós criamos nossa grade, passamos outra propriedade: <code>row_spacing<\/code> (espaçamento de linha). Nós também podemos adicionar <code>column_spacing<\/code> (espaçamento de coluna), mas como estamos empilhando widgets verticalmente só podemos ver os efeitos de <code>row_spacing<\/code>. Note como nós podemos criar novos widgets fora da grade e então adicioná-las à grade pelo nome. Isso é bem útil quando você começa a usar métodos diferentes para mudar as propriedades dos seus widgets.",
    "Now, let’s hook up the button to change that label. To keep our code logically separated, we’re going to add it below <code>window.add (grid);<\/code>. In this way, the first portion of our code defines the UI and the next portion defines the functions that we associated with the UI:": "",
    "Remember, we set the button as insensitive here because clicking it again has no effect. Now compile your app and marvel at your newfound skills. Play around with orientation and spacing until you feel comfortable.": "Lembre-se, nós ajustamos o botão como insensível aqui, pois clicando nele novamente não terá efeito. Agora compile seu aplicativo e se maravilhe com suas novas habilidades. Utilize a orientação e espaçamento até que você se sinta confortável.",
    "The Attach Method": "O Método Attach",
    "While we can use <code>Gtk.Grid<\/code> simply to create single row or single column layouts with the add method, we can also use it to create row-and-column-based layouts with the <code>attach<\/code> method. First we’re going to create a new <code>Gtk.Grid<\/code> and set both column and row spacing, then we’ll create all the widgets we want to attach to our grid, and finally we’ll attach them.": "Enquanto podemos usar <code>Gtk.Grid<\/code> simplesmente para criar uma única linha ou uma única coluna com o método add, nós podemos também usá-lo para criar layouts baseados em linhas e colunas com o método <code>attach<\/code>. Primeiro vamos criar um novo <code>Gtk.Grid<\/code> e configurar o espaçamento de ambas as linhas e colunas, então vamos criar todos os widgets que queremos anexar ao nosso grid, a finalmente vamos anexá-los.",
    "Make sure to give the Grid, Buttons, and Labels unique names that you’ll remember. It’s best practice to use descriptive names so that people who are unfamiliar with your code can understand what a widget is for without having to know your app inside and out.": "Certifique-se de dar ao Grid, Buttons e Labels nomes únicos que você se lembre. O indicado seria usar nomes descritivos de modo que quem não seja familiar ao seu código possa entender para o que cada widget serve sem ter que conhecer seu app de ponta a ponta.",
    "Notice that the attach method takes 5 arguments:": "Observe que o método attach precisa de 5 argumentos:",
    "The widget that you want to attach to the grid.": "O widget que você quer anexar ao grid.",
    "The column number to attach to starting at 0.": "O número da coluna para anexar começando em 0.",
    "The row number to attach to starting at 0.": "O número da linha para anexar começando em 0.",
    "The number of columns the widget should span.": "O número das colunas que o widget deve abranger.",
    "The number of rows the widget should span.": "O número das linhas que o widget deve abranger.",
    "You can also use <code>attach_next_to<\/code> to place a widget next to another one on <a href=\"https:\/\/valadoc.org\/gtk+-3.0\/Gtk.PositionType\">all four sides<\/a>. Don’t forget to add the functionality associated with our buttons:": "",
    "You’ll notice in the example code above that we’ve created a 2 x 2 grid with buttons on the left and labels on the right. The top label goes from blank to “Hello World!” and the button label is rotated 90 degrees. Notice how we gave the buttons labels that directly call out what they do to the other labels.": "Você vai notar no código de exemplo acima que criamos uma grade 2 por 2 com botões na esquerda e rótulos na direita. O rótulo do topo muda de vazio para \"Olá Mundo!\" e o texto do botão vai girar em 90 graus. Note como nós demos aos botões rótulos que informam o que eles fazem aos outros rótulos.",
    "Let’s recap what we learned in this section:": "Vamos recapitular o que nós aprendemos nesta sessão:",
    "We learned about the building blocks of Gtk and the importance of subclasses": "Nós aprendemos sobre como construir blocos do Gtk e a importância das subclasses",
    "We packed multiple children into a Window using <code>Gtk.Grid<\/code>": "Nós empacotamos múltiplos filhos dentro de uma Window usando <code>Gtk.Grid<\/code>",
    "We set the properties of <code>Gtk.Grid<\/code> including its orientation and spacing": "Nós definimos propriedades do <code>Gtk.Grid<\/code> incluindo a orientação e espaçamento",
    "We added multiple widgets into a single Gtk.Grid using the attach method to create complex layouts containing Buttons and Labels that did cool stuff.": "Nós adicionamos múltiplos widgets dentro um único Gtk.Grid usando o método attach para criar layouts complexos contendo Botões e Labels que fazem coisas legais.",
    "Now that you understand more about Gtk, Grids, and using Buttons to alter the properties of other widgets, try packing other kinds of widgets into a window like a Toolbar and changing other properties of <a href=\"https:\/\/valadoc.org\/gtk+-3.0\/Gtk.Label\">Labels<\/a> like <code>width_chars<\/code> and <code>ellipsize<\/code>. Don’t forget to play around with the attach method and widgets that span across multiple rows and columns. Remember that Valadoc is super helpful for learning more about the methods and properties associated with widgets.": "",
    "Notifications": "notificações",
    "By now you've probably already seen the white notification bubbles that appear on the top right of the screen. Notifications are a simple way to notify a user about the state of your app. For example, they can inform the user that a long process has been completed or a new message has arrived. In this section we are going to show you just how to get them to work in your app. Let's begin by making a new project!": "Até agora você provavelmente já viu as bolhas de notificação brancas que aparecem no canto superior direito da tela. As notificações são uma maneira simples de notificar um usuário sobre o estado do seu aplicativo. Por exemplo, eles podem informar ao usuário que um longo processo tenha sido concluído ou uma nova mensagem chegou. Nesta seção, vamos mostrar-lhe como fazê-los trabalhar em seu aplicativo. Vamos começar por fazer um novo projeto!",
    "Making Preparations": "fazendo Preparações",
    "Create a new folder inside of  \"~\/Projects\" called \"notifications-app\"": "",
    "Create a file inside called <code>notify-app.vala<\/code>": "Criar um arquivo dentro chamado <code>notify-app.vala<\/code>",
    "Re-create the <code>CMake<\/code> folder and <code>CMakeFiles.txt<\/code> file. If you don't remember how to set up CMake, go back to the <a href=\"#building-and-installing-with-cmake\">previous section<\/a> and review.": "Recrie a pasta <code>CMake<\/code> e o arquivo <code>CMakeFiles.txt<\/code>. Se você não lembra como configurar o CMake, volte à <a href=\"#building-and-installing-with-cmake\">sessão anterior<\/a> and review.",
    "Remember how to <a href=\"#the-desktop-file\">make a .desktop file<\/a>? Excellent! Make one for this project, but this time, name it <code>notify.app.desktop<\/code> as <code>notify.app<\/code> will be your app's ID. Since your app will be displaying notifications, add <code>X-GNOME-UsesNotifications=true<\/code> to the end of the file. This is needed so that users will be able to set notification preferences for your app in the system's notification settings.": "Lembra como <a href=\"#the-desktop-file\">fazer um arquivo .desktop<\/a>? Excelente! Faça um para este projeto, mas desta vez renomeie <code>notify.app.desktop<\/code> para <code>notify.app<\/code> esta será a ID do seu app. Como o seu app vai mostrar notificações, adicione <code>X-GNOME-UsesNotifications=true<\/code> no final do arquivo. Precisamos disso para os usuários poderem alterar as preferências de notificação do seu app pelas configurações de notificação do sistema.",
    "When using notifications, it's important that your desktop file has the same name as your application's ID. This is because elementary uses desktop files to find extra information about the app who sends the notification such as a default icon, or the name of the app. If you don't have a desktop file whose name matches the application id, your notification might not be displayed.": "Usando notificações, é importante que o seu arquivo desktop tenha o mesmo nome que a ID da sua aplicação. Devido ao elementary usar o arquivo desktop para localizar informações extras do app que está enviando a notificação, como o ícone padrão, ou o nome do aplicativo. Se você não tem um arquivo desktop onde o nome corresponda a ID da aplicação, sua notificação poderá não ser mostrada.",
    "Gtk.Application": "",
    "In order to display notifications, you're going to need your app to subclass <code>Gtk.Application<\/code>. <code>Gtk.Application<\/code> is a class that handles many important aspects of a Gtk app like app uniqueness and the application ID you need to identify your app to the notifications server. If you want some more details about <code>Gtk.Application<\/code>, <a href=\"https:\/\/valadoc.org\/gtk+-3.0\/Gtk.Application\">check out Valadoc<\/a>.": "",
    "Now that you know what a <code>Gtk.Application<\/code> is, let's create one:": "Agora que você conhece o que é uma <code>Gtk.Application<\/code>, vamos criar uma nossa:",
    "Initiating your app with Gtk.Application is a little different from what we did a few sections back. This time, in <code>main<\/code> you are starting your app with <code>app.run<\/code> and you have a new function called <code>activate<\/code> inside of your class; This <code>activate<\/code> function will be the one that executes when you invoke <code>app.run<\/code>. We are also creating a <code>Gtk.ApplicationWindow<\/code>, this is where you will place all the widgets your app needs. Now that we have a simple window, let's use what we learned in <a href=\"#gtk-grid\">creating layouts<\/a> and make a grid containing one button that will show a notification.": "Iniciar o seu app com Gtk.Application é um pouco diferente de como fizemos há algumas sessões atrás. Dessa vez, na <code>main<\/code> você inicia o seu app com <code>app.run<\/code> e tem uma nova função chamada <code>activate<\/code> dentro da sua classe; A função <code>activate<\/code> é a que será executada quando você chamar <code>app.run<\/code>. Estamos criando também uma <code>Gtk.ApplicationWindow<\/code>, e nela é onde você vai colocar todos os widgets que o seu app precisar. Agora que temos uma janela simples, vamos usar o que aprendemos em <a href=\"#gtk-grid\">criando layouts<\/a> e fazer um grid contendo um botão que vai mostrar a notificação.",
    "In between <code>var app_window...<\/code> and <code>app_window.show ();<\/code>, write the folowing lines of code:": "Entre <code>var app_window...<\/code> e <code>app_window.show ();<\/code>, escreva as seguintes linhas de código:",
    "Since we're adding translatable strings, don't forget to update your translation template by running <code>make pot<\/code>.": "Como estamos adicionando strings traduzíveis, não esqueça de atualizar o template de tradução executando <code>make pot<\/code>.",
    "Sending Notifications": "o envio de notificações",
    "Now that we have a Gtk.Application we can send notifications. Let's connect a function to the button we created and use it to send a notification:": "Agora que temos uma Gtk.Application podemos enviar notificações. Vamos conectar a função ao botão que criamos e usá-la para enviar uma notificação:",
    "Okay, now compile your new app. if everythink works, you should see your new app. Click the \"Send\" button. Did you see the notification? Great! Don't forget to commit and push your project in order to save your branch for later.": "",
    "Additional Features": "Recursos Adicionais",
    "Now that you know how to send basic notifications, lets talk about a couple ways to make your notifications better. Notifications are most useful when users can indentify where they came from and they contain relevant information. In order to make sure your notifications are useful, there are three important features you should know about: setting an icon, replacing a notification, and setting priority.": "Agora que você sabe como enviar notificações básicas, vejamos algumas maneiras de melhorar suas notificações. As notificações são mais úteis quando o usuário conseguir identificar de onde elas vem e se possuem informações relevantes. Para ter certeza que suas notificações são úteis, existem três recursos importantes: configurar um ícone, trocar uma notificação, e configurar a prioridade.",
    "Icons": "Ícones",
    "In order to make sure users can easily recognize a notification, we should set a relevant icon. Right after the <code>var notification = New Notification<\/code> line, add:": "Para ter certeza que os usuários podem facilmente reconhecer uma notificação, devemos utilizar um ícone relevante. Logo após a linha <code>var notification = New Notification<\/code>, adicione:",
    "That's it. Compile your app again, and press the \"Send\" button. As you can see, the notification now has an icon. Using this method, you can set the icon to anything you'd like. You can use <code>gtk3-icon-browser<\/code> to see what system icons are available.": "",
    "Replace": "Substituir",
    "We now know how to send a notification, but what if you need to update it with new information? Thanks to the notification ID, we can easily replace a notification. The notification ID should be the same as the app ID that we set in <code>Gtk.Application<\/code>.": "Nós sabemos agora como enviar uma notificação, mas e se você precisar atualizar com uma nova informação? Graças a ID da notificação podemos facilmente substituir uma notificação. A ID de notificação deve ser a mesma que a ID do seu app, o qual configuramos em <code>Gtk.Application<\/code>.",
    "Let's make the replace button. This button will replace the current notification with one with different information. Let's create a new button for it, and add it to the grid:": "Vamos fazer um botão substituto. O botão irá trocar a atual notificação por uma com informações diferentes. Vamos criar um novo botão para isso, e adicioná-lo no <i>grid<\/i>:",
    "{\n        this.withdraw_notification (\"notify-test\");\n    });\n-->": "",
    "Very easy right? Let's compile and run your app again. Click on the buttons, first on \"Show\", then \"Replace\". See how the text on your notification changes without making a new one appear?": "",
    "Priority": "Prioridade",
    "Notifications also have priority. When a notification is set as <code>URGENT<\/code> it will stay on the screen until either the user interacts with it, or you withdraw it. To make an urgent notification, add the following line before the <code>this.send_notification ()<\/code> function": "Notificações também têm prioridades. Quando uma notificação é definida como <code>URGENT<\/code> ela irá permanecer na tela até que o usuário interaja com ela ou que você a dispense. Para criar uma notificação urgente, inclua a seguinte linha antes da função <code>this.send_notification ()<\/code>",
    "<code>URGENT<\/code> notifications should really only be used on the most extreme cases. There are also <a href=\"https:\/\/valadoc.org\/gio-2.0\/GLib.NotificationPriority\">other notification priorities<\/a>.": "",
    "Let's review what all we've learned:": "Vamos revisar tudo o que aprendemos:",
    "We learned what <code>Gtk.Application<\/code> is and how to make a subclass of it.": "Nós aprendemos o que é uma <code>Gtk.Application<\/code> e como fazer uma derivação dela.",
    "We built an app that sends and updates notifications.": "Nós construímos um app que envia e atualiza notificações.",
    "We also learned about other notification features like setting an icon and a notification's priority.": "Nós aprendemos também outros recursos das notificações, como configurar um ícone e uma prioridade de notificações.",
    "As you could see, sending notifications is very easy thanks to <code>Gtk.Application<\/code>. If you need some further reading on notifications, Check out the page about <code>Glib.Notification<\/code> in <a href=\"https:\/\/valadoc.org\/gio-2.0\/GLib.Notification\">Valadoc<\/a>.": "",
    "Next Page:": "Próxima Página:",
    "Reference": "Referência",
    "Creating an account on GitHub and importing an SSH key": "",
    "Setting up the Git revision control system": "",
    "We’re going to assume that you’re working from a clean installation of elementary OS Loki or later. This is important as the instructions you’re given may reference apps that are not present (or even available) in other Linux based operating systems like Ubuntu. It is possible to apply the principles of this guide to Ubuntu development, but it may be more difficult to follow along.": "",
    "GitHub": "",
    "GitHub is an online platform for hosting code, reporting issues, tracking milestones, making releases, and more. If you're planning to publish your app through AppCenter, you'll need a GitHub account. If you already have an account, feel free to move on to the next section. Otherwise, <a href=\"https:\/\/github.com\/join\">sign up for a GitHub account<\/a> and return when you're finished.": "",
    "Git": "",
    "To download and upload to GitHub, you'll need the Terminal program <code>git<\/code>. Git is a type of <a href=\"http:\/\/en.wikipedia.org\/wiki\/Revision_control\">revision control system<\/a> that allows multiple developers to collaboratively develop and maintain code while keeping track of each revision along the way.": "",
    "If you're ready, let's get you set up to use Git:": "",
    "Open the Terminal and install Git": "",
    "We need to inform Git who we are so that when we upload code it is attributed correctly. Inform Git of your identity with the following commands": "",
    "To authenticate and transfer code securely, you’ll need to generate an <a href=\"http:\/\/en.wikipedia.org\/wiki\/Secure_Shell\">SSH<\/a> key pair (a kind of fingerprint for your computer) and import your public key to GitHub. Type the following in Terminal:": "",
    "When prompted, press <kbd>Enter<\/kbd> to accept the default file name for your key. You can choose to protect your key with a password or press <kbd>Enter<\/kbd> again to use no password when pushing code.": "",
    "Now we're going to import your public key to GitHub. View your public SSH key with the following command, then copy the text that appears": "",
    "Visit <a href=\"https:\/\/github.com\/settings\/keys\">your SSH keys page<\/a> and click the green button in the upper right-hand corner that says &quot;New SSH key&quot;. Paste your key in the &quot;Key&quot; box and give it a title.": "",
    "We're all done! Now you can download source code hosted on GitHub and upload your own code. We'll revisit using <code>git<\/code> in a bit, but for now you're set up. For a more in-depth intro to Git, we recommend <a href=\"https:\/\/www.codecademy.com\/learn\/learn-git\">Codecademy's course on Git<\/a>.": "",
    "At the time of this writing, elementary OS doesn't have a full SDK like Android or iOS. But luckily, we only need a couple simple apps to get started writing code.": "",
    "We’re going to use Terminal in order to compile our code, push revisions to GitHub (using <code>git<\/code>), and other good stuff. Throughout this guide, we’ll be issuing Terminal commands. You should assume that any command is executed from the directory “Projects” in your home folder unless otherwise stated. Since elementary doesn’t come with that folder by default, you’ll need to create it.": "",
    "The first app we’ll create will be a basic and generic “Hello World”. We’ll walk through the steps of creating folders to store our source code, compiling our first app, and pushing the project to a Git branch. Let’s begin.": "",
    "Pushing to GitHub": "",
    "After we do anything significant, we must remember to push our code. This is especially important in collaborative development where not pushing your code soon enough can lead to unintentional forks and pushing too much code at once can make it hard to track down any bugs introduced by your code.": "",
    "First we need to create a new repository on GitHub. Visit <a href=\"https:\/\/github.com\/new\">the new repository page<\/a> and create a new repository for your code.": "",
    "Open Terminal and make sure you're in your project's root directory &quot;~Projects\/gtk-hello&quot;, then issue the following commands": "",
    "Remember to replace <code>yourusername<\/code> with your GitHub username and <code>yourrepositoryname<\/code> with the name of the new repository you created.": "",
    "With these commands, we've told <code>git<\/code> to track revisions in this folder, that we'd like to track revisions on the file &quot;gtk-hello.vala&quot; specifically, we've committed our first revision and explained what we did in the revision, and then we've told <code>git<\/code> to push your code to GitHub.": "",
    "Finally, we commited our first revision and pushed code to GitHub": "",
    "Create &quot;hello-again.vala&quot; in the &quot;src&quot; folder.  This time we're going to prefix our file with a small legal header. More about legal stuff later. For now you can copy <a href=\"https:\/\/elementary.io\/docs\/code\/reference#gpl-header\">the GPL header from our reference documentation<\/a>. Be sure to assign the copyright to yourself at the top of the header and change the author to you at the bottom of the header.": "",
    "Initialize the branch, add your files to the project, and write a commit message using what you learned in the last chapter. Lastly, make sure you've created a new repository for your project on GitHub push your first revision with <code>git<\/code>:": "",
    "Create a new file in scratch and save it in the &quot;data&quot; folder as &quot;com.github.yourusername.yourrepositoryname.desktop&quot;. This naming scheme is called <a href=\"https:\/\/en.wikipedia.org\/wiki\/Reverse_domain_name_notation\">Reverse Domain Name Notation<\/a> and will ensure that your .desktop file has a unique file name.": "",
    "Type the following into your .desktop file. Like before, try to guess what each line does.": "",
    "Finally, let's add this file to <code>git<\/code> and commit a revision:": "",
    "AppData.xml": "",
    "Every app also comes with an .appdata.xml file. This file contains all the information needed to list your app in AppCenter.": "",
    "In your data folder, create a new file called &quot;com.github.yourusername.yourrepositoryname.appdata.xml&quot;. Just like with the .desktop file, we use RDNN to avoid file naming collisions.": "",
    "Type the following into your .appdata.xml file": "",
    "These are all the mandatory fields for displaying your app in AppCenter. There are plenty of other optional fields that you can read about <a href=\"https:\/\/www.freedesktop.org\/software\/appstream\/docs\/chap-Metadata.html\">here<\/a>.": "",
    "There are also some special custom fields for AppCenter to further brand your listing. Specifically, you can set a background color and a text color for your app's header and banner. You can do so by adding the following keys inside the <code>component<\/code> tag:": "",
    "You can specificy colors here in either Hexidecimal or RGB. The background color will automatically be given a slight gradient in your app's banner.": "",
    "You can also specify a suggested price in whole USD. Remember though that AppCenter is a pay-what-you-want store. This is not a price floor. Users will still be able to choose any price they like, including 0.": "",
    "Did you remember to add these files to <code>git<\/code> and commit a revision? Each time we add a new file or make a significant change it's a good idea to commit a new revision and push to GitHub. Keep in mind that this acts as a backup system as well; when we push our work to GitHub, we know it's safe and we can always revert to a known good revision if we mess up later.": "",
    "And you're done! Your app now has a real build system. Don't forget to add these files to <code>git<\/code> and push to GitHub. This is a major milestone in your app's development!": "",
    "If all went well, you should now be able to open your app from the Applications menu and pin it to the Dock.  If you were about to add the &quot;build&quot; folder to your <code>git<\/code> repository and push it, stop! This binary was built for your computer and we don't want to redistribute it. In fact, we built your app in a separate folder like this so that we can easily delete or ignore the &quot;build&quot; folder and it won't mess up our app's source code.": "",
    "Create a .desktop file using RDNN that tells the computer how to display our app in the Applications menu and the Dock": "",
    "That's a lot! You're well on your way to becoming a bonified app developer for elementary OS. Give yourself a pat on the back, then take some time to play around with this example. Change the names of files and see if you can still build and install them properly. Ask another developer to clone your repo from GitHub and see if it builds and installs cleanly on their computer. If so, you've just distributed your first app! When you're ready, we'll move onto the next section: Packaging.": "",
    "Don't forget to add this new directory and it's contents to git": "",
    "While having a build system is great, our app still isn't ready for regular users. We want to make sure our app can be built and installed without having to use Terminal. What we need to do is package our app. To do this, we use the Debian packaging format (.deb) on elementary OS. This section will teach you how to package your app as a .deb file, which is required to publish apps in AppCenter. This will allow normal people to install your app and even get updates for it when you publish them.": "",
    "Did you commit and push to GitHub for each step? Keep up these good habits and let's get to packaging this app!": "",
    "Like CMake, elementary maintains a simple version of the &quot;debian&quot; folder that contains all the files we need for packaging. Let's grab a copy of that with <code>git<\/code>:": "",
    "Now that you know how to code, build, and package an app using Vala, Gtk, CMake, and Debian packaging, it’s time to learn a little bit more about how to build out your app into something really useful. The first thing we need to learn is how to lay out widgets in our window. But we have a fundamental problem: We can only add one widget (one “child”) to <code>Gtk.Window<\/code>. So how do we get around that to create complex layouts in a Window? We have to add a widget that can contain multiple children. One of those widgets is <code>Gtk.Grid<\/code>.": "",
    "Now that we’ve gotten that out of the way, let’s get back to our Window and <code>Gtk.Grid<\/code>. Since you’re a master developer now, you can probably set up a new project complete with CMake, push it to GitHub, and set up Debian Packaging in your sleep. If you want the practice, go ahead and do all of that again. Otherwise, it’s probably convenient for our testing purposes to just play around locally and build from Terminal. So code up a nice <code>Gtk.Window<\/code> without anything in it and make sure that builds. Ready? Let’s add a Grid.": "",
    "Remember how to <a href=\"#the-desktop-file\">make a .desktop file<\/a>? Excellent! Make one for this project, but this time, since your app will be displaying notifications, add <code>X-GNOME-UsesNotifications=true<\/code> to the end of the file. This is needed so that users will be able to set notification preferences for your app in the system's notification settings.": "",
    "When using notifications, it's important that your desktop file has the same name as your application's ID. This is because elementary uses desktop files to find extra information about the app who sends the notification such as a default icon, or the name of the app. If you don't have a desktop file whose name matches the application id, your notification might not be displayed. To keep things simple, we'll be using the same RDNN everywhere.": ""
}